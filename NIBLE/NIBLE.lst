 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 1 - 07.07.2023 12:00:44


       1/       0 :                     ; compare NIBL assembler listing by Roger Marin, January 2008
       2/       0 :                     ; analogously rewritten by Erich KÃ¼ster, Krefeld/Germany
       3/       0 :                     ;
       4/       0 :                     ;   .TITLE  NIBL,'12/17/76'
       5/       0 :                     ;   .LIST   1
       6/       0 :                     ;
       7/       0 :                     
       8/       0 :                     L FUNCTION VAL16, (VAL16 & 0xFF)
       9/       0 :                     H FUNCTION VAL16, ((VAL16 >> 8) & 0xFF)
      10/       0 :                     
      11/       0 :                     JS   MACRO  P,VAL
      12/       0 :                            LDI  H(VAL-1)
      13/       0 :                            XPAH P
      14/       0 :                            LDI  L(VAL-1)
      15/       0 :                            XPAL P
      16/       0 :                            XPPC P
      17/       0 :                          ENDM
      18/       0 :                     
      19/       0 :                     LDPI MACRO  P,VAL
      20/       0 :                            LDI  H(VAL)
      21/       0 :                            XPAH P
      22/       0 :                            LDI  L(VAL)
      23/       0 :                            XPAL P
      24/       0 :                          ENDM
      25/       0 :                     
      26/       0 :                     ;******************************************************
      27/       0 :                     ;*     WE ARE TIED DOWN TO A LANGUAGE WHICH           *
      28/       0 :                     ;*     MAKES UP IN OBSCURITY WHAT IT LACKS            *
      29/       0 :                     ;*     IN STYLE.                                      *
      30/       0 :                     ;*                     - TOM STOPPARD                 *
      31/       0 :                     ;******************************************************
      32/       0 :                     
      33/       0 : =0x20                TSTBIT  =  0x20               ;I.L. INSTRUCTION FLAGS
      34/       0 : =0x40                JMPBIT  =  0x40
      35/       0 : =0x80                CALBIT  =  0x80
      36/       0 : =0x1                 P1      =  1                  ;SC/MP POINTER ASSIGNMENTS
      37/       0 : =0x2                 P2      =  2
      38/       0 : =0x3                 P3      =  3
      39/       0 : =0xFFFFFFFFFFFFFF80  EREG    =  -128               ;THE EXTENSION REGISTER
      40/       0 :                      
      41/       0 :                     ; DISPLACEMENTS FOR RAM VARIABLES USED BY INTERPRETER
      42/       0 :                      
      43/       0 : =0xFFFFFFFFFFFFFFFF  DOPTR   =  -1                 ;DO-STACK POINTER
      44/       0 : =0xFFFFFFFFFFFFFFFE  FORPTR  =  -2                 ;FOR-STACK POINTER
      45/       0 : =0xFFFFFFFFFFFFFFFD  LSTK    =  -3                 ;ARITHMETIC STACK POINTER
      46/       0 : =0xFFFFFFFFFFFFFFFC  SBRPTR  =  -4                 ;GOSUB STACK POINTER
      47/       0 : =0xFFFFFFFFFFFFFFFB  PCLOW   =  -5                 ;I.L. PROGRAM COUNTER
      48/       0 : =0xFFFFFFFFFFFFFFFA  PCHIGH  =  -6
      49/       0 : =0xFFFFFFFFFFFFFFF9  PCSTK   =  -7                 ;I.L. CALL STACK POINTER
      50/       0 : =0xFFFFFFFFFFFFFFF8  LOLINE  =  -8                 ;CURRENT LINE NUMBER
      51/       0 : =0xFFFFFFFFFFFFFFF7  HILINE  =  -9
      52/       0 : =0xFFFFFFFFFFFFFFF6  PAGE    =  -10                ;VALUE OF CURRENT PAGE
      53/       0 : =0xFFFFFFFFFFFFFFF5  LISTNG  =  -11                ;LISTING FLAG
      54/       0 : =0xFFFFFFFFFFFFFFF4  RUNMOD  =  -12                ;RUN/EDIT FLAG
      55/       0 : =0xFFFFFFFFFFFFFFF3  LABLLO  =  -13
      56/       0 : =0xFFFFFFFFFFFFFFF2  LABLHI  =  -14
      57/       0 : =0xFFFFFFFFFFFFFFF1  P1LOW   =  -15                ;SPACE TO SAVE CURSOR
      58/       0 : =0xFFFFFFFFFFFFFFF0  P1HIGH  =  -16
      59/       0 : =0xFFFFFFFFFFFFFFEF  LO      =  -17
      60/       0 : =0xFFFFFFFFFFFFFFEE  HI      =  -18
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 2 - 07.07.2023 12:00:44


      61/       0 : =0xFFFFFFFFFFFFFFED  FAILLO  =  -19
      62/       0 : =0xFFFFFFFFFFFFFFEC  FAILHI  =  -20
      63/       0 : =0xFFFFFFFFFFFFFFEB  NUM     =  -21
      64/       0 : =0xFFFFFFFFFFFFFFEA  TEMP    =  -22
      65/       0 : =0xFFFFFFFFFFFFFFE9  TEMP2   =  -23
      66/       0 : =0xFFFFFFFFFFFFFFE8  TEMP3   =  -24
      67/       0 : =0xFFFFFFFFFFFFFFE7  CHRNUM  =  -25
      68/       0 : =0xFFFFFFFFFFFFFFE6  RNDF    =  -26
      69/       0 : =0xFFFFFFFFFFFFFFE5  RNDX    =  -27                ;SEEDS FOR RANDOM NUMBER
      70/       0 : =0xFFFFFFFFFFFFFFE4  RNDY    =  -28
      71/       0 :                      
      72/       0 :                     ; ALLOCATION OF RAM FOR NIBL VARIABLES, STACKS,
      73/       0 :                     ;  AND LINE BUFFER
      74/       0 :                     
      75/       0 : =0x201C              VARS      =  0x2000 +28             ;NIBL VARIABLES A-Z
      76/       0 : =0x2050              AESTK:    =  VARS   +52             ;ARITHMETIC STACK  
      77/       0 : =0x206A              SBRSTK:   =  AESTK  +26             ;G0SUB STACK   
      78/       0 : =0x207A              DOSTAK:   =  SBRSTK +16             ;DO/UNTIL  STACK   
      79/       0 : =0x208A              FORSTK:   =  DOSTAK +16             ;FOR/NEXT  STACK    
      80/       0 : =0x20A6              PCSTAK:   =  FORSTK +28             ;I.L. CALL STACK    
      81/       0 : =0x20D6              LBUF:     =  PCSTAK +48             ;LINE BUFFER     
      82/       0 : =0x2120              PGM:      =  LBUF   +74             ;USER'S PROGRAM            
      83/       0 :                     
      84/    1000 :                             ORG 0x1000
      85/    1000 :                     ;*************************************
      86/    1000 :                     ;*      INITIALIZATION OF NIBL       *
      87/    1000 :                     ;*************************************
      88/    1000 :                     
      89/    1000 :                     
      90/    1000 : 08                          NOP
      91/    1001 : 08                          NOP
      92/    1002 : 08                          NOP
      93/    1003 : (MACRO)                      LDPI    P2,VARS       ;POINT P2 AT VARIABLES
      93/    1003 : C4 20                      LDI  H(VARS)
      93/    1005 : 36                         XPAH P2
      93/    1006 : C4 1C                      LDI  L(VARS)
      93/    1008 : 32                         XPAL P2
      94/    1009 : (MACRO)                      LDPI    P1,PGM        ;POINT P1 AT PAGE ONE PROGRAM
      94/    1009 : C4 21                      LDI  H(PGM)
      94/    100B : 35                         XPAH P1
      94/    100C : C4 20                      LDI  L(PGM)
      94/    100E : 31                         XPAL P1
      95/    100F : C4 FF                       LDI     -1            ;STORE -1 AT START OF PROGRAM
      96/    1011 : C9 00                       ST      0(P1)
      97/    1013 : C9 01                       ST      1(P1)
      98/    1015 : C4 03                       LDI     3             ;POINT P2 AT PAGE 2,
      99/    1017 : CA F6                       ST      PAGE(P2)      ;INITIALLY SET PAGE TO 2
     100/    1019 : C4 02                       LDI     2
     101/    101B : 31                          XPAL    P1
     102/    101C : C4 30                       LDI     0x30
     103/    101E : 35                          XPAH    P1
     104/    101F : B9 02                       DLD     2(P1)         ;CHECK IF THERE IS REALLY
     105/    1021 : 01                          XAE                   ;A PROGRAM IN PAGE 2:
     106/    1022 : A9 02                       ILD     2(P1)
     107/    1024 : C1 80                       LD      EREG(P1)      ;IF FIRST LINE LENGTH
     108/    1026 : E4 0D                       XRI     0x0D          ;POINTS TO CARR. RETURN
     109/    1028 : 98 19                       JZ      LOOP1         ;AT END OF LINE
     110/    102A : BA F6                       DLD     PAGE(P2)      ;IF NOT, PAGE = 1
     111/    102C : C4 FF               LOOP0:  LDI     -1            ;STORE -1 IN 2 CONSECUTIVE
     112/    102E : C9 00                       ST      (P1)          ;LOCATIONS AT START OF PAGE
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 3 - 07.07.2023 12:00:44


     113/    1030 : C9 01                       ST      1(P1)
     114/    1032 : C4 0D                       LDI     0x0D          ;ALSO PUT A DUMMY END-OF-LINE
     115/    1034 : C9 FF                       ST      -1(P1)        ;JUST BEFORE TEXT
     116/    1036 : 35                          XPAH    P1            ;UPDATE P1 TO POINT TO
     117/    1037 : 02                          CCL                   ;NEXT PAGE (UNTIL PAGE=8)
     118/    1038 : F4 10                       ADI     0x10          ;REPEAT INITIALIZATION
     119/    103A : E4 40                       XRI     0x40          ;FOR PAGES 2-7
     120/    103C : 98 05                       JZ      LOOP1
     121/    103E : E4 40                       XRI     0x40
     122/    1040 : 35                          XPAH    P1
     123/    1041 : 90 E9                       JMP     LOOP0
     124/    1043 : C4 00               LOOP1:  LDI     0             ;CLEAR SOME FLAGS
     125/    1045 : CA F4                       ST      RUNMOD(P2)
     126/    1047 : CA F5                       ST      LISTNG(P2)
     127/    1049 : C4 58                       LDI     L(BEGIN)      ;INITIALIZE IL PC SO THAT
     128/    104B : CA FB                       ST      PCLOW(P2)     ;NIBL PROGRAM
     129/    104D : C4 1C                       LDI     H(BEGIN)      ;IS EXECUTED IMMEDIATELY
     130/    104F : CA FA                       ST      PCHIGH(P2)
     131/    1051 : C4 00               CLEAR:  LDI     0
     132/    1053 : CA EA                       ST      TEMP(P2)
     133/    1055 : 01                          XAE
     134/    1056 : C4 00               CLEAR1: LDI     0             ;SET ALL VARIABLES
     135/    1058 : CA 80                       ST      EREG(P2)      ;TO ZERO
     136/    105A : AA EA                       ILD     TEMP(P2)
     137/    105C : 01                          XAE
     138/    105D : C4 34                       LDI     52
     139/    105F : 60                          XRE
     140/    1060 : 9C F4                       JNZ     CLEAR1
     141/    1062 : C4 50                       LDI     L(AESTK)      ;INITIALIZE SOME STACKS:
     142/    1064 : CA FD                       ST      LSTK(P2)      ;ARITHMETIC STACK,
     143/    1066 : C4 7A                       LDI     L(DOSTAK)
     144/    1068 : CA FF                       ST      DOPTR(P2)     ;DO/UNTIL STACK,
     145/    106A : C4 6A                       LDI     L(SBRSTK)
     146/    106C : CA FC                       ST      SBRPTR(P2)    ;GOSUB STACK,
     147/    106E : C4 A6                       LDI     L(PCSTAK)
     148/    1070 : CA F9                       ST      PCSTK(P2)     ;I.L. CALL STACK,
     149/    1072 : C4 8A                       LDI     L(FORSTK)
     150/    1074 : CA FE                       ST      FORPTR(P2)    ;FOR/NEXT STACK
     151/    1076 :                      
     152/    1076 :                      
     153/    1076 :                     ;*************************************
     154/    1076 :                     ;*   INTERMEDIATE LANGUAGE EXECUTOR  *
     155/    1076 :                     ;*************************************
     156/    1076 :                      
     157/    1076 : C2 FB               EXECIL: LD      PCLOW(P2)     ;SET P3 TO CURRENT
     158/    1078 : 33                          XPAL    P3            ;IL PC.
     159/    1079 : C2 FA                       LD      PCHIGH(P2)
     160/    107B : 37                          XPAH    P3
     161/    107C : C7 01               CHEAT:  LD      @1(P3)
     162/    107E : 01                          XAE                   ;GET NEW I.L. INSTRUCTION
     163/    107F : C7 01                       LD      @1(P3)        ;INTO P3 THROUGH
     164/    1081 : 33                          XPAL    P3            ;OBSCURE METHODS
     165/    1082 : CA FB                       ST      PCLOW(P2)     ;SIMULTANEOUSLY, INCREMENT
     166/    1084 : 40                          LDE                   ;THE I.L. PC BY 2
     167/    1085 : D4 1F                       ANI     0x1F          ;REMOVE FLAG FROM INSTRUCTION
     168/    1087 : DC 10                       ORI     $/256         ;TURN INTO ACTUAL ADDRESS,
     169/    1089 : 37                          XPAH    P3            ;PUT BACK INTO P3
     170/    108A : CA FA                       ST      PCHIGH(P2)
     171/    108C : 40                          LDE
     172/    108D : D4 E0                       ANI     0xE0          ;CHECK IF I.L. INSTRUCTION
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 4 - 07.07.2023 12:00:44


     173/    108F : E4 20                       XRI     TSTBIT        ;IS A 'TEST'
     174/    1091 : 98 2F                       JZ      TST
     175/    1093 : E4 A0                       XRI     CALBIT!TSTBIT ;CHECK FOR I.L. CALL
     176/    1095 : 98 07                       JZ      ILCALL
     177/    1097 : E4 C0                       XRI     JMPBIT!CALBIT ;CHECK FOR I.L. JUMP
     178/    1099 : 98 E1                       JZ      CHEAT         ;I.L. JUMP IS TRIVIAL
     179/    109B : 3F                  NOJUMP: XPPC    P3            ;MUST BE AN ML SUBROUTINE
     180/    109C : 90 D8                       JMP     EXECIL        ;IF NONE OF THE ABOVE
     181/    109E :                      
     182/    109E :                      
     183/    109E :                     ;*************************************
     184/    109E :                     ;*     INTERMEDIATE LANGUAGE CALL    *
     185/    109E :                     ;*************************************
     186/    109E :                      
     187/    109E : C2 F9               ILCALL: LD      PCSTK(P2)
     188/    10A0 : E4 D6                       XRI     L(LBUF)       ;CHECK FOR STACK OVERFLOW
     189/    10A2 : 9C 04                       JNZ     ILC1
     190/    10A4 : C4 0A                       LDI     10         
     191/    10A6 : 90 60                       JMP     E0A
     192/    10A8 : E4 D6               ILC1:   XRI     L(LBUF)       ;RESTORE ACCUMULATOR
     193/    10AA : 33                          XPAL    P3            ;SAVE LOW BYTE OF NEW
     194/    10AB : CA EA                       ST      TEMP(P2)      ;I.L. PC IN TEMP
     195/    10AD : C4 20                       LDI     H(PCSTAK)     ;POINT P3 AT I.L.
     196/    10AF : 37                          XPAH    P3            ;SUBROUTINE STACK
     197/    10B0 : 01                          XAE                   ;SAVE NEW I.L. PC HIGH IN EX
     198/    10B1 : C2 FB                       LD      PCLOW(P2)     ;SAVE OLD I.L. PC ON STACK
     199/    10B3 : CF 01                       ST      @1(P3)
     200/    10B5 : C2 FA                       LD      PCHIGH(P2)
     201/    10B7 : CF 01                       ST      @1(P3)
     202/    10B9 : C2 EA                       LD      TEMP(P2)      ;GET LOW BYTE OF NEW
     203/    10BB : 33                          XPAL    P3            ;I.L. PC INTO P3 LOW
     204/    10BC : CA F9                       ST      PCSTK(P2)     ;UPDATE I.L. STACK POINTER
     205/    10BE : 40                          LDE                   ;GET HIGH BYTE OF NEW P3
     206/    10BF : 37                          XPAH    P3            ;I.L. PC INTO P3 HIGH
     207/    10C0 : 90 BA               CHEAT1: JMP     CHEAT
     208/    10C2 :                      
     209/    10C2 :                      
     210/    10C2 :                     ;*************************************
     211/    10C2 :                     ;*      I.L. 'TEST' INSTRUCTION      *
     212/    10C2 :                     ;*************************************
     213/    10C2 :                      
     214/    10C2 :                     ;   .LOCAL
     215/    10C2 : CA E7               TST:    ST      CHRNUM(P2)    ;CLEAR NUMBER OF CHARS SCANNED
     216/    10C4 : C5 01               SCAN0:  LD      @1(P1)        ;SLEW OFF SPACES
     217/    10C6 : E4 20                       XRI     ' '
     218/    10C8 : 98 FA                       JZ      SCAN0
     219/    10CA : C5 FF                       LD      @-1(P1)       ;REPOSITION CURSOR
     220/    10CC : C2 FA                       LD      PCHIGH(P2)    ;POINT P3 AT IL TABLE
     221/    10CE : 37                          XPAH    P3
     222/    10CF : CA EC                       ST      FAILHI(P2)    ;FAIL ADDRESS <- OLD P3
     223/    10D1 : C2 FB                       LD      PCLOW(P2)
     224/    10D3 : 33                          XPAL    P3
     225/    10D4 : CA ED                       ST      FAILLO(P2)
     226/    10D6 : C7 01               LOOP2:  LD      @1(P3)
     227/    10D8 : 01                          XAE                   ;SAVE CHAR FROM TABLE
     228/    10D9 : BA E7                       DLD     CHRNUM(P2)    ;DECREMENT CHAR COUNT
     229/    10DB : 40                          LDE                   ;GET CHAR BACK
     230/    10DC : D4 7F                       ANI     0x7F          ;SCRUB OFF FLAG (IF ANY)
     231/    10DE : E5 01                       XOR     @1(P1)        ;IS CHAR EQUAL TO TEXT CHAR?
     232/    10E0 : 9C 07                       JNZ     NEQ0          ;NO - END TEST
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 5 - 07.07.2023 12:00:44


     233/    10E2 : 40                          LDE                   ;YES - BUT IS IT LAST CHAR?
     234/    10E3 : 94 F1                       JP      LOOP2         ;IF NOT, CONTINUE TO COMPARE
     235/    10E5 : 90 95                       JMP     CHEAT         ;IF SO, GET NEXT I. L.  
     236/    10E7 : 90 8D               X0:     JMP     EXECIL        ;INSTRUCTION
     237/    10E9 : C2 E7               NEQ0:   LD      CHRNUM(P2)      ;RESTORE P1 TO
     238/    10EB : 01                          XAE                     ; ORIGINAL VALUE         
     239/    10EC : C5 80                       LD      @EREG(P1)
     240/    10EE : C2 ED                       LD      FAILLO(P2)      ;LOAD TEST-FAIL ADDRESS
     241/    10F0 : 33                          XPAL    P3              ; INTO P3
     242/    10F1 : C2 EC                       LD      FAILHI(P2)
     243/    10F3 : 37                          XPAH    P3
     244/    10F4 : 90 CA                       JMP     CHEAT1          ;GET NEXT IL INSTRUCTION
     245/    10F6 :                      
     246/    10F6 :                      
     247/    10F6 :                     ;*************************************
     248/    10F6 :                     ;*       I.L. SUBROUTINE RETURN      *
     249/    10F6 :                     ;*************************************
     250/    10F6 :                      
     251/    10F6 : C4 20               RTN:    LDI     H(PCSTAK)     ;POINT P3 AT I.L. PC STACK
     252/    10F8 : 37                          XPAH    P3
     253/    10F9 : C2 F9                       LD      PCSTK(P2)
     254/    10FB : 33                          XPAL    P3
     255/    10FC : C7 FF                       LD      @-1(P3)       ;GET HIGH PART OF OLD PC
     256/    10FE : 01                          XAE
     257/    10FF : C7 FF                       LD      @-1(P3)       ;GET LOW PART OF OLD PC
     258/    1101 : 33                          XPAL    P3
     259/    1102 : CA F9                       ST      PCSTK(P2)     ;UPDATE IL STACK POINTER
     260/    1104 : 40                          LDE
     261/    1105 : 37                          XPAH    P3            ;P3 NOW HAS OLD IL PC
     262/    1106 : 90 B8                       JMP     CHEAT1
     263/    1108 : 90 41               E0A:    JMP     E0
     264/    110A :                     
     265/    110A :                      
     266/    110A :                     ;*************************************
     267/    110A :                     ;*     SAVE GOSUB RETURN ADDRESS     *
     268/    110A :                     ;*************************************
     269/    110A :                      
     270/    110A : C2 FC               SAV:    LD      SBRPTR(P2)
     271/    110C : E4 7A                       XRI     L(DOSTAK)     ;CHECK FOR MORE
     272/    110E : 98 1C                       JZ      SAV2          ;THAN 8 SAVES
     273/    1110 : AA FC                       ILD     SBRPTR(P2)
     274/    1112 : AA FC                       ILD     SBRPTR(P2)
     275/    1114 : 33                          XPAL    P3            ;SET P3 TO
     276/    1115 : C4 20                       LDI     H(SBRSTK)     ;SUBROUTINE STACK TOP.
     277/    1117 : 37                          XPAH    P3
     278/    1118 : C2 F4                       LD      RUNMOD(P2)    ;IF IMMEDIATE MODE,
     279/    111A : 98 0A                       JZ      SAV1          ;SAVE NEGATIVE ADDRESS.
     280/    111C : 35                          XPAH    P1            ;SAVE HIGH PORTION
     281/    111D : CB FF                       ST      -1(P3)        ;OF CURSOR
     282/    111F : 35                          XPAH    P1
     283/    1120 : 31                          XPAL    P1            ;SAVE LOW PORTION
     284/    1121 : CB FE                       ST      -2(P3)        ;OF CURSOR
     285/    1123 : 31                          XPAL    P1
     286/    1124 : 90 C1                       JMP     X0            ;RETURN
     287/    1126 : C4 FF               SAV1:   LDI     -1            ;IMMEDIATE MODE
     288/    1128 : CB FF                       ST      -1(P3)        ;RETURN ADDRESS IS
     289/    112A : 90 BB                       JMP     X0            ;NEGATIVE.
     290/    112C : C4 0A               SAV2:   LDI     10            ;ERROR: MORE THAN
     291/    112E : 90 1B                       JMP     E0            ;EIGHT GOSUBS
     292/    1130 :                     
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 6 - 07.07.2023 12:00:44


     293/    1130 :                      
     294/    1130 :                     ;*************************************
     295/    1130 :                     ;*     CHECK STATEMENT FINISHED      *                      
     296/    1130 :                     ;*************************************
     297/    1130 :                      
     298/    1130 : C5 01               DONE:   LD      @1(P1)        ;SKIP SPACES  
     299/    1132 : E4 20                       XRI     ' '
     300/    1134 : 98 FA                       JZ      DONE
     301/    1136 : E4 2D                       XRI     ' ' ! 0x0D    ;IS IT CARRIAGE RETURN?
     302/    1138 : 98 04                       JZ      DONE1         ;YES - RETURN
     303/    113A : E4 37                       XRI     0x37          ;IS CHAR A ':' ?
     304/    113C : 9C 01                       JNZ     DONE2         ;NO - ERROR
     305/    113E : 3F                  DONE1:  XPPC    P3            ;YES - RETURN
     306/    113F : C4 04               DONE2:  LDI     4
     307/    1141 : 90 08                       JMP     E0
     308/    1143 :                      
     309/    1143 :                      
     310/    1143 :                     ;*************************************
     311/    1143 :                     ;*     RETURN FROM GOSUB             *
     312/    1143 :                     ;*************************************
     313/    1143 :                      
     314/    1143 : C2 FC               RSTR:   LD      SBRPTR(P2)
     315/    1145 : E4 6A                       XRI     L(SBRSTK)     ;CHECK FOR RETURN
     316/    1147 : 9C 04                       JNZ     RSTR1         ;W/O GOSUB
     317/    1149 : C4 09                       LDI     9
     318/    114B : 90 40               E0:     JMP     E1            ;GOTO ERROR.
     319/    114D : BA FC               RSTR1:  DLD     SBRPTR(P2)
     320/    114F : BA FC                       DLD     SBRPTR(P2)    ;POP GOSUB STACK,
     321/    1151 : 33                          XPAL    P3            ; PUT PTR INTO P3
     322/    1152 : C4 20                       LDI     H(SBRSTK)
     323/    1154 : 37                          XPAH    P3
     324/    1155 : C3 01                       LD      1(P3)         ;IF ADDRESS NEGATIVE,
     325/    1157 : 94 06                       JP      RSTR2         ;SUBROUTINE WAS CALLED
     326/    1159 : C4 00                       LDI     0             ;IN IMMEDIATE MODE,
     327/    115B : CA F4                       ST      RUNMOD(P2)    ;SO FINISH UP EXECUTING
     328/    115D : 90 88               X1:     JMP     X0
     329/    115F : 35                  RSTR2:  XPAH    P1            ;RESTORE CURSOR HIGH
     330/    1160 : C3 00                       LD      0(P3)
     331/    1162 : 31                          XPAL    P1              ;RESTORE CURSOR LOW
     332/    1163 : C4 01                       LDI     1               ;SET RUN MODE
     333/    1165 : CA F4                       ST      RUNMOD(P2)
     334/    1167 : 90 F4                       JMP     X1
     335/    1169 :                      
     336/    1169 :                      
     337/    1169 :                     ;*************************************
     338/    1169 :                     ;*     TRANSFER TO NEW STATEMENT     *
     339/    1169 :                     ;*************************************
     340/    1169 :                      
     341/    1169 : C2 F2               XFER:   LD       LABLHI(P2)   ;CHECK FOR NON-EXISTENT LINE
     342/    116B : 94 04                       JP       XFER1
     343/    116D : C4 08                       LDI      8
     344/    116F : 90 1C                       JMP      E1
     345/    1171 : C4 01               XFER1:  LDI      1            ;SET RUN MODE TO 1
     346/    1173 : CA F4                       ST       RUNMOD(P2)
     347/    1175 : 3F                          XPPC     P3
     348/    1176 :                      
     349/    1176 :                      
     350/    1176 :                     ;*************************************
     351/    1176 :                     ;*     PRINT STRING IN TEXT          *
     352/    1176 :                     ;*************************************
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 7 - 07.07.2023 12:00:44


     353/    1176 :                      
     354/    1176 : (MACRO)              PRS:    LDPI     P3,PUTC-1    ;POINT P3 AT PUTC ROUTINE
     354/    1176 : C4 1F                      LDI  H(PUTC-1)
     354/    1178 : 37                         XPAH P3
     354/    1179 : C4 C1                      LDI  L(PUTC-1)
     354/    117B : 33                         XPAL P3
     355/    117C : C5 01                       LD       @1(P1)       ;L0AD NEXT CHAR
     356/    117E : E4 22                       XRI      '"'          ;IF ", END OF
     357/    1180 : 98 DB                       JZ       X1           ;STRING
     358/    1182 : E4 2F                       XRI      0x2F         ;IF CR, ERROR
     359/    1184 : 98 05                       JZ       PRS1
     360/    1186 : E4 0D                       XRI      0x0D         ;RESTORE CHAR
     361/    1188 : 3F                          XPPC     P3           ;PRINT CHAR
     362/    1189 : 90 EB                       JMP      PRS          ;GET NEXT CHAR
     363/    118B : C4 07               PRS1:   LDI      7            ;SYNTAX ERROR
     364/    118D : 90 35               E1:     JMP      E2
     365/    118F :                      
     366/    118F :                      
     367/    118F :                     ;*************************************
     368/    118F :                     ;*     PRINT NUMBER ON STACK         *
     369/    118F :                     ;*************************************
     370/    118F :                      
     371/    118F :                     ; THIS ROUTINE IS BASED ON DENNIS ALLISON'S BINARY TO DECIMAL
     372/    118F :                     ; CONVERSION ROUTINE IN VOL. 1, #1 OF "DR. DOBB'S JOURNAL",
     373/    118F :                     ; BUT IS MUCH MORE OBSCURE BECAUSE OF THE STACK MANIPULATION.
     374/    118F :                     
     375/    118F :                     ;   .LOCAL 
     376/    118F : C4 20               PRN:    LDI     H(AESTK)      ;POINT P3 AT A.E. STACK
     377/    1191 : 37                          XPAH    P3
     378/    1192 : AA FD                       ILD     LSTK(P2)
     379/    1194 : AA FD                       ILD     LSTK(P2)
     380/    1196 : 33                          XPAL    P3
     381/    1197 : C4 0A                       LDI     10            ;PUT 10 ON STACK (WE'LL BE
     382/    1199 : CB FE                       ST      -2(P3)        ;DIVIDING BY IT LATER)
     383/    119B : C4 00                       LDI     0     
     384/    119D : CB FF                       ST      -1(P3)
     385/    119F : C4 05                       LDI     5             ;SET CHRNUM TO POINT TO PLACE
     386/    11A1 : CA E7                       ST      CHRNUM(P2)    ;IN STACK WHERE WE STORE
     387/    11A3 : C4 FF                       LDI     -1            ;THE CHARACTERS TO PRINT
     388/    11A5 : CB 05                       ST      5(P3)         ;FIRST CHAR IS A FLAG (-1)
     389/    11A7 : C3 FD                       LD      -3(P3)        ;CHECK IF NUMBER IS NEGATIVE
     390/    11A9 : 94 13                       JP      PRN0
     391/    11AB : C4 2D                       LDI     '-'           ;PUT '-' ON STACK, AND NEGATE
     392/    11AD : CB 04                       ST      4(P3)         ;THE NUMBER
     393/    11AF : C4 00                       LDI     0
     394/    11B1 : 03                          SCL
     395/    11B2 : FB FC                       CAD     -4(P3)
     396/    11B4 : CB FC                       ST      -4(P3)
     397/    11B6 : C4 00                       LDI     0
     398/    11B8 : FB FD                       CAD     -3(P3)
     399/    11BA : CB FD                       ST      -3(P3)
     400/    11BC : 90 9F                       JMP     X1            ;GO DO DIVISION BY  10
     401/    11BE : C4 20               PRN0:   LDI     ' '           ;IF POSITIVE, PUT ' ' ON
     402/    11C0 : CB 04                       ST      4(P3)         ;STACK BEFORE DIVISION
     403/    11C2 : 90 99               X4:     JMP     X1
     404/    11C4 : 90 57               E2:     JMP     ERR1
     405/    11C6 :                                                                                    
     406/    11C6 :                     ; THE DIVISION IS PERFORMED, THEN CONTROL IS TRANSFERRED
     407/    11C6 :                     ; TO PRN1, WHICH FOLLOWS.
     408/    11C6 :                      
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 8 - 07.07.2023 12:00:44


     409/    11C6 : AA FD               PRN1:   ILD     LSTK(P2)      ;POINT P1 AT A.E. STACK
     410/    11C8 : AA FD                       ILD     LSTK(P2)
     411/    11CA : 31                          XPAL    P1
     412/    11CB : C4 20                       LDI     H(AESTK)
     413/    11CD : 35                          XPAH    P1
     414/    11CE : AA E7                       ILD     CHRNUM(P2)    ;INCREMENT CHARACTER STACK
     415/    11D0 : 01                          XAE                   ; POINTER, PUT IN EX. REG.
     416/    11D1 : C1 01                       LD      1(P1)         ;GET REMAINDER FROM DIVIDE,
     417/    11D3 : DC 30                       ORI     '0'
     418/    11D5 : C9 80                       ST      EREG(P1)      ; PUT IT ON THE STACK
     419/    11D7 : C1 FD                       LD      -3(P1)        ;IS THE QUOTIENT ZERO YET?
     420/    11D9 : D9 FC                       OR      -4(P1)
     421/    11DB : 98 0A                       JZ      PRN2          ;YES - GO PRINT THE NUMBER
     422/    11DD : C4 1F                       LDI     H(PRNUM1)     ;NO - CHANGE THE I.L. PC
     423/    11DF : CA FA                       ST      PCHIGH(P2)    ;SO THAT DIVIDE IS
     424/    11E1 : C4 33                       LDI     L(PRNUM1)     ;PERFORMED AGAIN
     425/    11E3 : CA FB                       ST      PCLOW(P2)
     426/    11E5 : 90 DB                       JMP     X4            ;GO DO DIVISION BY 10 AGAIN
     427/    11E7 : (MACRO)              PRN2:   LDPI    P3,PUTC-1     ;POINT P3 AT PUTC ROUTINE
     427/    11E7 : C4 1F                      LDI  H(PUTC-1)
     427/    11E9 : 37                         XPAH P3
     427/    11EA : C4 C1                      LDI  L(PUTC-1)
     427/    11EC : 33                         XPAL P3
     428/    11ED : C2 F5                       LD      LISTNG(P2)    ;IF LISTING, SKIP PRINTING
     429/    11EF : 9C 06                       JNZ     PRN3          ; LEADING SPACE
     430/    11F1 : C1 04                       LD      4(P1)         ;PRINT EITHER '-'
     431/    11F3 : 3F                          XPPC    P3            ; OR LEADING SPACE
     432/    11F4 : C2 E7                       LD      CHRNUM(P2)    ;GET EX. REG. VALUE BACK
     433/    11F6 : 01                          XAE
     434/    11F7 : C5 80               PRN3:     LD      @EREG(P1)     ;POINT P3 AT FIRST CHAR
     435/    11F9 : C1 00                       LD      (P1)          ;TO BE PRINTED
     436/    11FB : 3F                  LOOP3:  XPPC    P3            ;PRINT THE CHARACTER
     437/    11FC : C5 FF                       LD      @-1(P1)       ;GET NEXT CHARACTER
     438/    11FE : 94 FB                       JP      LOOP3         ;REPEAT UNTIL = -1
     439/    1200 : C4 50                       LDI     L(AESTK)
     440/    1202 : CA FD                       ST      LSTK(P2)      ;CLEAR THE A.E. STACK
     441/    1204 : C2 F5                       LD      LISTNG(P2)    ;PRINT A TRAILING SPACE
     442/    1206 : 9C BA                       JNZ     X4            ; IF NOT LISTING PROGRAM
     443/    1208 : C4 20                       LDI     ' '
     444/    120A : 3F                          XPPC    P3
     445/    120B : 90 B5                       JMP     X4
     446/    120D :                      
     447/    120D :                      
     448/    120D :                     ;*************************************
     449/    120D :                     ;*     CARRIAGE RETURN/LINE FEED     *
     450/    120D :                     ;*************************************
     451/    120D :                      
     452/    120D : (MACRO)              NLINE:  LDPI    P3,PUTC-1     ;POINT P3 AT PUTC ROUTINE
     452/    120D : C4 1F                      LDI  H(PUTC-1)
     452/    120F : 37                         XPAH P3
     452/    1210 : C4 C1                      LDI  L(PUTC-1)
     452/    1212 : 33                         XPAL P3
     453/    1213 : C4 0D                       LDI     0x0D          ;CARRIAGE RETURN
     454/    1215 : 3F                          XPPC    P3
     455/    1216 : C4 0A                       LDI     0x0A          ;LINE FEED
     456/    1218 : 3F                          XPPC    P3
     457/    1219 : 90 A7               X5:     JMP     X4
     458/    121B :                                                                                   
     459/    121B :                      
     460/    121B :                     ;****************************
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 9 - 07.07.2023 12:00:44


     461/    121B :                     ;*      ERROR ROUTINE       *
     462/    121B :                     ;****************************
     463/    121B :                     
     464/    121B :                     ;   .LOCAL 
     465/    121B : C4 05               ERR:    LDI     5             ;SYNTAX ERROR
     466/    121D : CA EB               ERR1:   ST      NUM(P2)       ;SAVE ERROR #
     467/    121F : C2 EB               ERR2:   LD      NUM(P2)
     468/    1221 : CA EA                       ST      TEMP(P2)
     469/    1223 : (MACRO)                      LDPI    P3,PUTC-1     ;POINT P3 AT PUTC
     469/    1223 : C4 1F                      LDI  H(PUTC-1)
     469/    1225 : 37                         XPAH P3
     469/    1226 : C4 C1                      LDI  L(PUTC-1)
     469/    1228 : 33                         XPAL P3
     470/    1229 : C4 0D                       LDI     0x0D          ;PRINT CR/LF
     471/    122B : 3F                          XPPC    P3
     472/    122C : C4 0A                       LDI     0x0A
     473/    122E : 3F                          XPPC    P3
     474/    122F : (MACRO)                      LDPI    P1,MESGS      ;P1 -> ERROR MESSAGES
     474/    122F : C4 1F                      LDI  H(MESGS)
     474/    1231 : 35                         XPAH P1
     474/    1232 : C4 3B                      LDI  L(MESGS)
     474/    1234 : 31                         XPAL P1
     475/    1235 : BA EB               NMSG:   DLD     NUM(P2)       ;IS THIS THE RIGHT MESSAGE?
     476/    1237 : 98 06                       JZ      MSG0          ;YES - GO PRINT IT
     477/    1239 : C5 01               LOOP4:  LD      @1(P1)        ;NO - SCAN THROUGH TO
     478/    123B : 94 FC                       JP      LOOP4         ;NEXT MESSAGE
     479/    123D : 90 F6                       JMP     NMSG
     480/    123F : C5 01               MSG0:   LD      @1(P1)        ;GET MESSAGE CHAR
     481/    1241 : 3F                          XPPC    P3            ;PRINT IT
     482/    1242 : C1 FF                       LD      -1(P1)        ;IS MESSAGE DONE?
     483/    1244 : 94 F9                       JP      MSG0          ;NO - GET NEXT CHAR
     484/    1246 : C2 EA                       LD      TEMP(P2)      ;WAS THIS A BREAK MESSAGE?
     485/    1248 : E4 0E                       XRI     14
     486/    124A : 98 0D                       JZ      SKIP0         ;YES - SKIP PRINTING 'ERROR'
     487/    124C : (MACRO)                      LDPI    P1,MESGS      ;NO - PRINT ERROR
     487/    124C : C4 1F                      LDI  H(MESGS)
     487/    124E : 35                         XPAH P1
     487/    124F : C4 3B                      LDI  L(MESGS)
     487/    1251 : 31                         XPAL P1
     488/    1252 : C5 01               AGAIN:  LD      @1(P1)        ;GET CHARACTER
     489/    1254 : 3F                          XPPC    P3            ;PRINT IT
     490/    1255 : C1 FF                       LD      -1(P1)        ;DONE?
     491/    1257 : 94 F9                       JP      AGAIN         ;NO - REPEAT LOOP
     492/    1259 : C2 F4               SKIP0:  LD      RUNMOD(P2)    ;DON'T PRINT LINE #
     493/    125B : 98 4D                       JZ      FIN           ;IF IMMEDIATE MODE
     494/    125D : C4 20                       LDI     ' '
     495/    125F : 3F                          XPPC    P3            ;SPACE
     496/    1260 : C4 41                       LDI     'A'           ;AT
     497/    1262 : 3F                          XPPC    P3
     498/    1263 : C4 54                       LDI     'T'
     499/    1265 : 3F                          XPPC    P3
     500/    1266 : C4 20                       LDI     H(AESTK)      ;POINT P3 AT A.E. STACK
     501/    1268 : 37                          XPAH    P3
     502/    1269 : AA FD                       ILD     LSTK(P2)
     503/    126B : AA FD                       ILD     LSTK(P2)
     504/    126D : 33                          XPAL    P3
     505/    126E : C2 F7                       LD      HILINE(P2)    ;GET HIGH BYTE OF LINE #
     506/    1270 : CB FF                       ST      -1(P3)        ;PUT ON STACK
     507/    1272 : C2 F8                       LD      LOLINE(P2)    ;GET LOW BYTE OF LINE #
     508/    1274 : CB FE                       ST      -2(P3)        ;PUT ON STACK
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 10 - 07.07.2023 12:00:44


     509/    1276 : C4 31                       LDI     L(ERRNUM)     ;GO TO PRN
     510/    1278 : CA FB                       ST      PCLOW(P2)
     511/    127A : C4 1E                       LDI     H(ERRNUM)                                  
     512/    127C : CA FA                       ST      PCHIGH(P2)
     513/    127E : 90 99               X5A:    JMP     X5
     514/    1280 :                      
     515/    1280 :                      
     516/    1280 :                     ;*************************************
     517/    1280 :                     ;*      BREAK, NXT, FIN, & STRT      *
     518/    1280 :                     ;*************************************
     519/    1280 :                      
     520/    1280 : C4 0E               BREAK:  LDI     14            ;*** CAUSE A BREAK ***
     521/    1282 : 90 99               E3A:    JMP     ERR1
     522/    1284 :                                                   ;*** NEXT STATEMENT ***
     523/    1284 : C2 F4               NXT:    LD      RUNMOD(P2)    ;IF IN IMMED. MODE,
     524/    1286 : 98 22                       JZ      FIN           ;STOP EXECUTION
     525/    1288 : C1 00                       LD      (P1)          ;IF WE HIT END OF FILE,
     526/    128A : D4 80                       ANI     0x80          ;FINISH UP THINGS
     527/    128C : 9C 1C                       JNZ     FIN
     528/    128E : 06                          CSA                   ;BREAK IF SOMEONE IS
     529/    128F : D4 20                       ANI     0x20          ;TYPING ON THE CONSOLE
     530/    1291 : 98 ED                       JZ      BREAK
     531/    1293 : C1 FF                       LD      -1(P1)        ;GET LAST CHARACTER SCANNED
     532/    1295 : E4 0D                       XRI     0x0D          ;WAS IT CARRIAGE RETURN?
     533/    1297 : 9C 08                       JNZ     NXT1          ;YES - SKIP FOLLOWING UPDATES
     534/    1299 : C5 01                       LD      @1(P1)        ;GET HIGH BYTE OF NEXT LINE #
     535/    129B : CA F7                       ST      HILINE(P2)    ;SAVE IT
     536/    129D : C5 02                       LD      @2(P1)        ;GET LOW BYTE OF LINE #, SKIP
     537/    129F : CA F8                       ST      LOLINE(P2)    ; LINE LENGTH BYTE
     538/    12A1 : C4 1C               NXT1:   LDI     H(STMT)       ;GO TO 'STMT' IN IL TABLE
     539/    12A3 : CA FA                       ST      PCHIGH(P2)
     540/    12A5 : C4 86                       LDI     L(STMT)
     541/    12A7 : CA FB                       ST      PCLOW(P2)
     542/    12A9 : 3F                          XPPC    P3
     543/    12AA :                      
     544/    12AA : C4 00               FIN:    LDI     0             ;*** FINISH EXECUTION ***
     545/    12AC : CA F4                       ST      RUNMOD(P2)    ;CLEAR RUN MODE
     546/    12AE : C4 50                       LDI     L(AESTK)      ;CLEAR ARITHMETIC STACK
     547/    12B0 : CA FD                       ST      LSTK(P2)
     548/    12B2 : C4 1C                       LDI     L(START)      ;SET IL PC TO GETTING LINES
     549/    12B4 : CA FB                       ST      PCLOW(P2)     ; TO PROMPT FOR COMMAND
     550/    12B6 : C4 1C                       LDI     H(START)
     551/    12B8 : CA FA                       ST      PCHIGH(P2)
     552/    12BA : C4 A6                       LDI     L(PCSTAK)
     553/    12BC : CA F9                       ST      PCSTK(P2)
     554/    12BE : 90 BE                       JMP     X5A
     555/    12C0 :                                                   ;*** START EXECUTION ***
     556/    12C0 : AA F4               STRT:   ILD     RUNMOD(P2)    ;RUN MODE = 1
     557/    12C2 : C2 E9                       LD      TEMP2(P2)     ;POINT CURSOR TO
     558/    12C4 : 35                          XPAH    P1            ; START OF NIBL PROGRAM
     559/    12C5 : C2 E8                       LD      TEMP3(P2)
     560/    12C7 : 31                          XPAL    P1
     561/    12C8 : C4 6A                       LDI     L(SBRSTK)     ;EMPTY SOME STACKS:
     562/    12CA : CA FC                       ST      SBRPTR(P2)    ; GOSUB STACK,
     563/    12CC : C4 8A                       LDI     L(FORSTK)
     564/    12CE : CA FE                       ST      FORPTR(P2)    ; FOR STACK
     565/    12D0 : C4 7A                       LDI     L(DOSTAK)
     566/    12D2 : CA FF                       ST      DOPTR(P2)     ; & DO/UNTIL STACK
     567/    12D4 : 3F                          XPPC    P3            ;RETURN
     568/    12D5 : 90 A7               X6:     JMP     X5A
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 11 - 07.07.2023 12:00:44


     569/    12D7 : 90 A9               E4:     JMP     E3A
     570/    12D9 :                      
     571/    12D9 :                      
     572/    12D9 :                     ;*************************************
     573/    12D9 :                     ;*        LIST NIBL PROGRAM          *
     574/    12D9 :                     ;*************************************
     575/    12D9 :                      
     576/    12D9 : C1 00               LST:    LD      (P1)          ;CHECK FOR END OF FILE
     577/    12DB : E4 80                       XRI     0x80
     578/    12DD : 94 18                       JP      LST2
     579/    12DF : C4 20                       LDI     H(AESTK)      ;GET LINE NUMBER ONTO STACK
     580/    12E1 : 37                          XPAH    P3
     581/    12E2 : AA FD                       ILD     LSTK(P2)
     582/    12E4 : AA FD                       ILD     LSTK(P2)
     583/    12E6 : 33                          XPAL    P3
     584/    12E7 : C5 01                       LD      @1(P1)
     585/    12E9 : CB FF                       ST      -1(P3)   
     586/    12EB : C5 01                       LD      @1(P1)
     587/    12ED : CB FE                       ST      -2(P3)
     588/    12EF : C5 01                       LD      @1(P1)        ;SKIP OVER LINE LENGTH
     589/    12F1 : C4 01                       LDI     1
     590/    12F3 : CA F5                       ST      LISTNG(P2)    ;SET LISTING FLAG
     591/    12F5 : 90 DE                       JMP     X6            ;GO PRINT LINE NUMBER
     592/    12F7 : C4 00               LST2:   LDI     0
     593/    12F9 : CA F5                       ST      LISTNG(P2)    ;CLEAR LISTING FLAG
     594/    12FB : (MACRO)                      JS      P3,NXT        ;GO TO NXT
     594/    12FB : C4 12                      LDI  H(NXT-1)
     594/    12FD : 37                         XPAH P3
     594/    12FE : C4 83                      LDI  L(NXT-1)
     594/    1300 : 33                         XPAL P3
     594/    1301 : 3F                         XPPC P3
     595/    1302 : 90 D1               X6A:    JMP     X6
     596/    1304 : 90 D1               E5:     JMP     E4
     597/    1306 : (MACRO)              LST3:   LDPI    P3,PUTC-1     ;POINT P3 AT PUTC
     597/    1306 : C4 1F                      LDI  H(PUTC-1)
     597/    1308 : 37                         XPAH P3
     597/    1309 : C4 C1                      LDI  L(PUTC-1)
     597/    130B : 33                         XPAL P3
     598/    130C : 06                  LST4:   CSA
     599/    130D : D4 20                       ANI     0x20
     600/    130F : 98 E6                       JZ      LST2          ;IF TYPING, STOP
     601/    1311 : C5 01                       LD      @1(P1)        ;GET NEXT CHAR
     602/    1313 : E4 0D                       XRI     0x0D          ;TEST FOR CR
     603/    1315 : 98 05                       JZ      LST5
     604/    1317 : E4 0D                       XRI     0x0D          ;GET CHARACTER
     605/    1319 : 3F                          XPPC    P3            ;PRINT CHARACTER
     606/    131A : 90 F0                       JMP     LST4
     607/    131C : C4 0D               LST5:   LDI     0x0D          ;CARRIAGE RETURN
     608/    131E : 3F                          XPPC    P3
     609/    131F : C4 0A                       LDI     0x0A          ;LINE FEED
     610/    1321 : 3F                          XPPC    P3
     611/    1322 : 02                          CCL
     612/    1323 : C4 4B                       LDI     L(LIST3)
     613/    1325 : CA FB                       ST      PCLOW(P2)
     614/    1327 : C4 1C                       LDI     H(LIST3)
     615/    1329 : CA FA                       ST      PCHIGH(P2)
     616/    132B : 90 AC                       JMP     LST           ;GET NEXT LINE
     617/    132D :                      
     618/    132D :                      
     619/    132D :                     ;*************************************
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 12 - 07.07.2023 12:00:44


     620/    132D :                     ;*          ADD AND SUBTRACT         *
     621/    132D :                     ;*************************************
     622/    132D :                      
     623/    132D : C4 20               ADD:    LDI     H(AESTK)      ;SET P3 TO CURRENT-
     624/    132F : 37                          XPAH    P3            ; STACK LOCATION
     625/    1330 : BA FD                       DLD     LSTK(P2)
     626/    1332 : BA FD                       DLD     LSTK(P2)
     627/    1334 : 33                          XPAL    P3
     628/    1335 : 02                          CCL
     629/    1336 : C3 FE                       LD      -2(P3)        ;REPLACE TWO TOP ITEMS
     630/    1338 : F3 00                       ADD     0(P3)         ; ON STACK BY THEIR SUM
     631/    133A : CB FE                       ST      -2(P3)
     632/    133C : C3 FF                       LD      -1(P3)
     633/    133E : F3 01                       ADD     1(P3)
     634/    1340 : CB FF                       ST      -1(P3)
     635/    1342 : 90 BE               X7:     JMP     X6A
     636/    1344 :                      
     637/    1344 : C4 20               SUB:    LDI     H(AESTK)      ;SET P3 TO CURRENT
     638/    1346 : 37                          XPAH    P3            ; STACK LOCATION
     639/    1347 : BA FD                       DLD     LSTK(P2)
     640/    1349 : BA FD                       DLD     LSTK(P2)
     641/    134B : 33                          XPAL    P3
     642/    134C : 03                          SCL
     643/    134D : C3 FE                       LD      -2(P3)        ;REPLACE TWO TOP ITEMS
     644/    134F : FB 00                       CAD     0(P3)         ;ON STACK BY THEIR DIFFERENCE
     645/    1351 : CB FE                       ST      -2(P3)
     646/    1353 : C3 FF                       LD      -1(P3)
     647/    1355 : FB 01                       CAD     1(P3)
     648/    1357 : CB FF                       ST      -1(P3)
     649/    1359 : 90 A7                       JMP     X6A
     650/    135B :                      
     651/    135B :                      
     652/    135B :                     ;*************************************
     653/    135B :                     ;*          NEGATE                   *
     654/    135B :                     ;*************************************
     655/    135B :                      
     656/    135B : C4 20               NEG:    LDI     H(AESTK)      ;SET P3 TO CURRENT
     657/    135D : 37                          XPAH    P3            ;STACK LOCATION
     658/    135E : C2 FD                       LD      LSTK(P2)
     659/    1360 : 33                          XPAL    P3
     660/    1361 : 03                          SCL
     661/    1362 : C4 00                       LDI     0
     662/    1364 : FB FE                       CAD     -2(P3)        ;NEGATE TOP ITEM ON STACK
     663/    1366 : CB FE                       ST      -2(P3)
     664/    1368 : C4 00                       LDI     0
     665/    136A : FB FF                       CAD     -1(P3)
     666/    136C : CB FF                       ST      -1(P3)
     667/    136E : 90 D2               X8:     JMP     X7
     668/    1370 : 90 92               E6:     JMP     E5
     669/    1372 :                      
     670/    1372 :                      
     671/    1372 :                     ;*************************************
     672/    1372 :                     ;*        MULTIPLY                   *
     673/    1372 :                     ;*************************************
     674/    1372 :                     
     675/    1372 :                     ;   .LOCAL 
     676/    1372 : C4 20               MUL:    LDI     H(AESTK)      ;SET P3 TO CURRENT
     677/    1374 : 37                          XPAH    P3            ;STACK LOCATION
     678/    1375 : C2 FD                       LD      LSTK(P2)
     679/    1377 : 33                          XPAL    P3            ;DETERMINE SIGN OF PRODUCT, 
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 13 - 07.07.2023 12:00:44


     680/    1378 : C3 FF                       LD      -1(P3)        ;SAVE IN TEMP(P2)
     681/    137A : E3 FD                       XOR     -3(P3)
     682/    137C : CA EA                       ST      TEMP(P2)
     683/    137E : C3 FF                       LD      -1(P3)        ;CHECK FOR NEGATIVE
     684/    1380 : 94 0D                       JP      MPOS          ;MULTIPLIER
     685/    1382 : 03                          SCL
     686/    1383 : C4 00                       LDI     0             ;IF NEGATIVE,
     687/    1385 : FB FE                       CAD     -2(P3)        ;NEGATE
     688/    1387 : CB FE                       ST      -2(P3)
     689/    1389 : C4 00                       LDI     0
     690/    138B : FB FF                       CAD     -1(P3)
     691/    138D : CB FF                       ST      -1(P3)
     692/    138F : C3 FD               MPOS:   LD      -3(P3)        ;CHECK FOR NEGATIVE
     693/    1391 : 94 0D                       JP      MPOS1         ;MULTIPLICAND
     694/    1393 : 03                          SCL
     695/    1394 : C4 00                       LDI     0             ;IF NEGATIVE,
     696/    1396 : FB FC                       CAD     -4(P3)        ;NEGATE
     697/    1398 : CB FC                       ST      -4(P3)
     698/    139A : C4 00                       LDI     0
     699/    139C : FB FD                       CAD     -3(P3)
     700/    139E : CB FD                       ST      -3(P3)
     701/    13A0 : C4 00               MPOS1:  LDI     0             ;CLEAR WORKSPACE
     702/    13A2 : CB 00                       ST      0(P3)
     703/    13A4 : CB 01                       ST      1(P3)
     704/    13A6 : CB 02                       ST      2(P3)
     705/    13A8 : CB 03                       ST      3(P3)
     706/    13AA : C4 10                       LDI     16            ;SET COUNTER TO 16
     707/    13AC : CA EB                       ST      NUM(P2)
     708/    13AE : C3 FF               LOOP5:  LD      -1(P3)        ;ROTATE MULTIPLIER
     709/    13B0 : 1F                          RRL                   ;RIGHT ONE BIT
     710/    13B1 : CB FF                       ST      -1(P3)
     711/    13B3 : C3 FE                       LD      -2(P3)
     712/    13B5 : 1F                          RRL
     713/    13B6 : CB FE                       ST      -2(P3)
     714/    13B8 : 06                          CSA                   ;CHECK FOR CARRY BIT
     715/    13B9 : 94 11                       JP      MM3           ;IF NOT SET, DON'T DO ADD
     716/    13BB : 02                          CCL
     717/    13BC : C3 02                       LD      2(P3)         ;ADD MULTIPLICAND
     718/    13BE : F3 FC                       ADD     -4(P3)        ;INTO WORKSPACE
     719/    13C0 : CB 02                       ST      2(P3)
     720/    13C2 : C3 03                       LD      3(P3)
     721/    13C4 : F3 FD                       ADD     -3(P3)
     722/    13C6 : CB 03                       ST      3(P3)
     723/    13C8 : 90 02                       JMP     MM3
     724/    13CA : 90 A4               E6A:    JMP     E6
     725/    13CC : 02                  MM3:    CCL
     726/    13CD : C3 03                       LD      3(P3)         ;SHIFT WORKSPACE RIGHT BY 1
     727/    13CF : 1F                          RRL
     728/    13D0 : CB 03                       ST      3(P3)
     729/    13D2 : C3 02                       LD      2(P3)
     730/    13D4 : 1F                          RRL
     731/    13D5 : CB 02                       ST      2(P3)
     732/    13D7 : C3 01                       LD      1(P3)
     733/    13D9 : 1F                          RRL
     734/    13DA : CB 01                       ST      1(P3)
     735/    13DC : C3 00                       LD      0(P3)
     736/    13DE : 1F                          RRL
     737/    13DF : CB 00                       ST      0(P3)
     738/    13E1 : BA EB                       DLD     NUM(P2)       ;DECREMENT COUNTER
     739/    13E3 : 9C C9                       JNZ     LOOP5         ;LOOP IF NOT ZERO
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 14 - 07.07.2023 12:00:44


     740/    13E5 : 90 02                       JMP     MM4
     741/    13E7 : 90 85               X9:     JMP     X8
     742/    13E9 : C2 EA               MM4:    LD      TEMP(P2)      ;CHECK SIGN WORD
     743/    13EB : 94 0D                       JP      EXIT0         ;IF BIT7 = 1, NEGATE PRODUCT
     744/    13ED : 03                          SCL
     745/    13EE : C4 00                       LDI     0
     746/    13F0 : FB 00                       CAD     0(P3)
     747/    13F2 : CB 00                       ST      0(P3)
     748/    13F4 : C4 00                       LDI     0
     749/    13F6 : FB 01                       CAD     1(P3)
     750/    13F8 : CB 01                       ST      1(P3)
     751/    13FA : C3 00               EXIT0:  LD      0(P3)         ;PUT PRODUCT ON TOP
     752/    13FC : CB FC                       ST      -4(P3)        ;OF STACK
     753/    13FE : C3 01                       LD      1(P3)
     754/    1400 : CB FD                       ST      -3(P3)
     755/    1402 : BA FD                       DLD     LSTK(P2)      ;SUBTRACT 2 FROM
     756/    1404 : BA FD                       DLD     LSTK(P2)      ;LSTK
     757/    1406 : 90 DF                       JMP     X9
     758/    1408 :                     
     759/    1408 :                      
     760/    1408 :                     ;*************************************
     761/    1408 :                     ;*            DIVIDE                 *
     762/    1408 :                     ;*************************************
     763/    1408 :                     
     764/    1408 :                     ;   .LOCAL 
     765/    1408 : C4 20               DIV:    LDI     H(AESTK)
     766/    140A : 37                          XPAH    P3
     767/    140B : C2 FD                       LD      LSTK(P2)  
     768/    140D : 33                          XPAL    P3
     769/    140E : C3 FF                       LD      -1(P3)        ;CHECK FOR DIVISION BY 0
     770/    1410 : DB FE                       OR      -2(P3)
     771/    1412 : 9C 04                       JNZ     QD0
     772/    1414 : C4 0D                       LDI     13
     773/    1416 : 90 B2                       JMP     E6A
     774/    1418 : C3 FD               QD0:    LD      -3(P3)
     775/    141A : E3 FF                       XOR     -1(P3)
     776/    141C : CA EA                       ST      TEMP(P2)      ;SAVE SIGN OF QUOTIENT
     777/    141E : C3 FD                       LD      -3(P3)        ;IS DIVIDEND POSITIVE?
     778/    1420 : 94 11                       JP      DPOS          ;YES - JUMP
     779/    1422 : C4 00                       LDI     0
     780/    1424 : 03                          SCL
     781/    1425 : FB FC                       CAD     -4(P3)        ;NO - NEGATE DIVIDEND,
     782/    1427 : CB 03                       ST      3(P3)         ;STORE IN RIGHT HALF
     783/    1429 : C4 00                       LDI     0             ;OF 32-BIT ACCUMULATOR
     784/    142B : FB FD                       CAD     -3(P3)
     785/    142D : CB 02                       ST      2(P3)
     786/    142F : 90 0A                       JMP     QD1
     787/    1431 : 90 B4               X9A:    JMP     X9
     788/    1433 : C3 FD               DPOS:   LD      -3(P3)        ;STORE NON-NEGATED DIVIDEND
     789/    1435 : CB 02                       ST      2(P3)         ;IN 32-BIT ACCUMULATOR
     790/    1437 : C3 FC                       LD      -4(P3)
     791/    1439 : CB 03                       ST      3(P3)
     792/    143B : C3 FF               QD1:    LD      -1(P3)        ;CHECK FOR NEGATIVE DIVISOR
     793/    143D : 94 0D                       JP      QD2
     794/    143F : C4 00                       LDI     0             ;NEGATE DIVISOR
     795/    1441 : 03                          SCL
     796/    1442 : FB FE                       CAD     -2(P3)
     797/    1444 : CB FE                       ST      -2(P3)
     798/    1446 : C4 00                       LDI     0
     799/    1448 : FB FF                       CAD     -1(P3)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 15 - 07.07.2023 12:00:44


     800/    144A : CB FF                       ST      -1(P3)
     801/    144C : C4 00               QD2:    LDI     0             ;PUT ZERO IN:
     802/    144E : CB 01                       ST      1(P3)         ;LEFT HALF OF 32-BIT ACC,
     803/    1450 : CB 00                       ST      0(P3)
     804/    1452 : CA EB                       ST      NUM(P2)       ;THE COUNTER, AND
     805/    1454 : CB FD                       ST      -3(P3)        ;IN THE DIVIDEND, NOW USED
     806/    1456 : CB FC                       ST      -4(P3)        ;STORE THE QUOTIENT
     807/    1458 : 02                  LOOP6:  CCL                   ;BEGIN MAIN DIVIDE LOOP:
     808/    1459 : C3 FC                       LD      -4(P3)        ;SHIFT QUOTIENT LEFT,
     809/    145B : F3 FC                       ADD     -4(P3)
     810/    145D : CB FC                       ST      -4(P3)                       
     811/    145F : C3 FD                       LD      -3(P3)
     812/    1461 : F3 FD                       ADD     -3(P3)
     813/    1463 : CB FD                       ST      -3(P3)
     814/    1465 : 02                          CCL                   ;SHIFT 32-BIT ACC LEFT,
     815/    1466 : C3 03                       LD      3(P3)
     816/    1468 : F3 03                       ADD     3(P3)
     817/    146A : CB 03                       ST      3(P3)                                    
     818/    146C : C3 02                       LD      2(P3)
     819/    146E : F3 02                       ADD     2(P3)
     820/    1470 : CB 02                       ST      2(P3)
     821/    1472 : C3 01                       LD      1(P3)
     822/    1474 : F3 01                       ADD     1(P3)
     823/    1476 : CB 01                       ST      1(P3)
     824/    1478 : C3 00                       LD      (P3)
     825/    147A : F3 00                       ADD     (P3)
     826/    147C : CB 00                       ST      (P3)
     827/    147E : 03                          SCL
     828/    147F : C3 01                       LD      1(P3)         ;SUBTRACT DIVISOR INTO
     829/    1481 : FB FE                       CAD     -2(P3)        ;LEFT HALF OF ACC,   
     830/    1483 : CB 01                       ST      1(P3)
     831/    1485 : C3 00                       LD      (P3)
     832/    1487 : FB FF                       CAD     -1(P3)
     833/    1489 : CB 00                       ST      (P3)
     834/    148B : 94 11                       JP      QDENT1         ;IF RESULT IS NEGATIVE,
     835/    148D : 02                          CCL                   ;RESTORE ORIGINAL CONTENTS
     836/    148E : C3 01                       LD      1(P3)         ;OF ACC BY ADDING DIVISOR
     837/    1490 : F3 FE                       ADD     -2(P3)
     838/    1492 : CB 01                       ST      1(P3)
     839/    1494 : C3 00                       LD      (P3)
     840/    1496 : F3 FF                       ADD     -1(P3)
     841/    1498 : CB 00                       ST      (P3)
     842/    149A : 90 08                       JMP     QD3
     843/    149C : 90 93               X9B:    JMP     X9A
     844/    149E : C3 FC               QDENT1: LD      -4(P3)        ;ELSE IF RESULT POSITIVE,
     845/    14A0 : DC 01                       ORI     1             ;RECORD A 1 IN QUOTIENT
     846/    14A2 : CB FC                       ST      -4(P3)        ;W/O RESTORING THE ACC
     847/    14A4 : AA EB               QD3:    ILD     NUM(P2)       ;INCREMENT THE COUNTER
     848/    14A6 : E4 10                       XRI     16            ;ARE WE DONE?
     849/    14A8 : 9C AE                       JNZ     LOOP6         ;LOOP IF NOT DONE
     850/    14AA : C2 EA                       LD      TEMP(P2)      ;CHECK THE QUOTIENT'S SIGN,
     851/    14AC : 94 0D                       JP      QDEND          ;NEGATING IF NECESSARY
     852/    14AE : C4 00                       LDI     0
     853/    14B0 : 03                          SCL
     854/    14B1 : FB FC                       CAD     -4(P3) 
     855/    14B3 : CB FC                       ST      -4(P3)
     856/    14B5 : C4 00                       LDI     0
     857/    14B7 : FB FD                       CAD     -3(P3)
     858/    14B9 : CB FD                       ST      -3(P3)
     859/    14BB : BA FD               QDEND:  DLD     LSTK(P2)      ;DECREMENT THE STACK POINTER,
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 16 - 07.07.2023 12:00:44


     860/    14BD : BA FD                       DLD     LSTK(P2)
     861/    14BF : 90 DB                       JMP     X9B           ;AND EXIT
     862/    14C1 :                      
     863/    14C1 :                      
     864/    14C1 :                     ;*************************************
     865/    14C1 :                     ;*         STORE VARIABLE            *
     866/    14C1 :                     ;*************************************
     867/    14C1 :                      
     868/    14C1 : C4 20               STORE:  LDI     H(AESTK)      ;SET P3 TO STACK
     869/    14C3 : 37                          XPAH    P3
     870/    14C4 : C2 FD                       LD      LSTK(P2)
     871/    14C6 : 33                          XPAL    P3
     872/    14C7 : C7 FD                       LD      @-3(P3)       ;GET VARIABLE INDEX
     873/    14C9 : 01                          XAE                   ;PUT IN E REG
     874/    14CA : C3 01                       LD      1(P3)
     875/    14CC : CA 80                       ST      EREG(P2)      ;STORE LOWER 8 BITS
     876/    14CE : 02                          CCL                   ;INTO VARIABLE
     877/    14CF : 40                          LDE                   ;INCREMENT INDEX
     878/    14D0 : F4 01                       ADI     1
     879/    14D2 : 01                          XAE
     880/    14D3 : C3 02                       LD      2(P3)
     881/    14D5 : CA 80                       ST      EREG(P2)      ;STORE UPPER 8 BITS
     882/    14D7 : 33                          XPAL    P3            ; INTO VARIABLE
     883/    14D8 : CA FD                       ST      LSTK(P2)      ;UPDATE STACK POINTER
     884/    14DA : (MACRO)              X10:    JS      P3,EXECIL
     884/    14DA : C4 10                      LDI  H(EXECIL-1)
     884/    14DC : 37                         XPAH P3
     884/    14DD : C4 75                      LDI  L(EXECIL-1)
     884/    14DF : 33                         XPAL P3
     884/    14E0 : 3F                         XPPC P3
     885/    14E1 :                      
     886/    14E1 :                      
     887/    14E1 :                     ;*************************************
     888/    14E1 :                     ;*     TEST FOR VARIABLE IN TEXT     *
     889/    14E1 :                     ;*************************************
     890/    14E1 :                      
     891/    14E1 : C5 01               TSTVAR: LD      @1(P1)
     892/    14E3 : E4 20                       XRI     ' '           ;SLEW OFF SPACES
     893/    14E5 : 98 FA                       JZ      TSTVAR 
     894/    14E7 : C1 FF                       LD      -1(P1)        ;CHARACTER IN QUESTION
     895/    14E9 : 03                          SCL
     896/    14EA : FC 5B                       CAI     'Z'+1         ;SUBTRACT 'Z'+l
     897/    14EC : 94 05                       JP      TVFAIL        ;NOT VARIABLE IF POSITIVE
     898/    14EE : 03                          SCL
     899/    14EF : FC E6                       CAI     'A'-'Z'-1     ;SUBTRACT 'A'
     900/    14F1 : 94 12                       JP      TVMAY         ;IF POS, MAY BE VARIABLE
     901/    14F3 : C5 FF               TVFAIL: LD      @-1(P1)       ;BACKSPACE CURSOR
     902/    14F5 : C2 FB                       LD      PCLOW(P2)     ;GET TEST-FAIL ADDRESS
     903/    14F7 : 33                          XPAL    P3            ;FROM I.L. TABLE, PUT IT
     904/    14F8 : C2 FA                       LD      PCHIGH(P2)    ;INTO I.L. PROGRAM COUNTER
     905/    14FA : 37                          XPAH    P3
     906/    14FB : C3 00                       LD      (P3)
     907/    14FD : CA FA                       ST      PCHIGH(P2)
     908/    14FF : C3 01                       LD      1(P3)
     909/    1501 : CA FB                       ST      PCLOW(P2)
     910/    1503 : 90 D5                       JMP     X10
     911/    1505 : 01                  TVMAY:  XAE                   ;SAVE VALUE (0-25)
     912/    1506 : C1 00                       LD      (P1)          ;CHECK FOLLOWING CHAR
     913/    1508 : 03                          SCL                   ;MUST NOT BE A LETTER
     914/    1509 : FC 5B                       CAI     'Z'+1         ;OTHERWISE WE'D BE LOOKING
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 17 - 07.07.2023 12:00:44


     915/    150B : 94 05                       JP      TVOK          ;AT A KEYWORD, NOT A VARIABLE
     916/    150D : 03                          SCL
     917/    150E : FC E6                       CAI     'A'-'Z'-1
     918/    1510 : 94 E1                       JP      TVFAIL
     919/    1512 : C4 20               TVOK:   LDI     H(AESTK)      ;SET P3 TO CURRENT
     920/    1514 : 37                          XPAH    P3            ;STACK LOCATION
     921/    1515 : AA FD                       ILD     LSTK(P2)      ;INCR STACK POINTER
     922/    1517 : 33                          XPAL    P3
     923/    1518 : 02                          CCL                   ;DOUBLE VARIABLE INDEX
     924/    1519 : 40                          LDE
     925/    151A : 70                          ADE
     926/    151B : CB FF                       ST      -1(P3)        ;PUT INDEX ON STACK
     927/    151D : C4 02                       LDI     2             ;INCREMENT I.L. PC, SKIPPING
     928/    151F : 02                          CCL                   ;OVER TEST-FAIL ADDRESS
     929/    1520 : F2 FB                       ADD     PCLOW(P2)
     930/    1522 : CA FB                       ST      PCLOW(P2)
     931/    1524 : C4 00                       LDI     0
     932/    1526 : F2 FA                       ADD     PCHIGH(P2)
     933/    1528 : CA FA                       ST      PCHIGH(P2)
     934/    152A : 90 AE                       JMP     X10
     935/    152C :                      
     936/    152C :                      
     937/    152C :                     ;*************************************
     938/    152C :                     ;*    IND - EVALUATE A VARIABLE      *
     939/    152C :                     ;*************************************
     940/    152C :                      
     941/    152C : C4 20               IND:    LDI     H(AESTK)      ;SET P3 TO STACK
     942/    152E : 37                          XPAH    P3
     943/    152F : AA FD                       ILD     LSTK(P2)
     944/    1531 : 33                          XPAL    P3
     945/    1532 : C3 FE                       LD      -2(P3)        ;GET INDEX OFF TOP
     946/    1534 : 01                          XAE                   ;PUT INDEX IN E REG
     947/    1535 : C2 80                       LD      EREG(P2)      ;GET LOWER 8 BITS
     948/    1537 : CB FE                       ST      -2(P3)        ;SAVE ON STACK
     949/    1539 : 02                          CCL
     950/    153A : 40                          LDE                   ;INCREMENT E REG
     951/    153B : F4 01                       ADI     1
     952/    153D : 01                          XAE                  
     953/    153E : C2 80                       LD      EREG(P2)      ;GET UPPER 8 BITS
     954/    1540 : CB FF                       ST      -1(P3)        ;SAVE ON STACK
     955/    1542 : 90 96               X11:    JMP     X10
     956/    1544 :                      
     957/    1544 :                      
     958/    1544 :                     ;*************************************
     959/    1544 :                     ;*      RELATIONAL OPERATORS        *
     960/    1544 :                     ;*************************************
     961/    1544 :                      
     962/    1544 : C4 01               EQ:     LDI     1             ;EACH RELATIONAL OPERATOR
     963/    1546 : 90 12                       JMP     CMP           ;LOADS A NUMBER USED LATER
     964/    1548 : C4 02               NEQ:    LDI     2             ;AS A CASE SELECTOR, AFTER
     965/    154A : 90 0E                       JMP     CMP           ;THE TWO OPERANDS ARE COM-
     966/    154C : C4 03               LSS:    LDI     3             ;PARED. BASED ON THE COM-
     967/    154E : 90 0A                       JMP     CMP           ;PARISON, FLAGS ARE SET THAT
     968/    1550 : C4 04               LEQ:    LDI     4             ;ARE EQUIVALENT TO THOSE SET
     969/    1552 : 90 06                       JMP     CMP           ;BY THE 'CMP' INSTRUCTION IN
     970/    1554 : C4 05               GTR:    LDI     5             ;THE PDP-11. THESE PSEUDO-
     971/    1556 : 90 02                       JMP     CMP           ;FLAGS ARE USED TO DETERMINE
     972/    1558 : C4 06               GEQ:    LDI     6             ;WHETHER THE PARTICULAR
     973/    155A :                                                   ;RELATION IS SATISFIED OR NOT
     974/    155A : CA EB               CMP:    ST      NUM(P2)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 18 - 07.07.2023 12:00:44


     975/    155C : C4 20                       LDI     H(AESTK)      ;SET P3 -> ARITH STACK
     976/    155E : 37                          XPAH    P3
     977/    155F : BA FD                       DLD     LSTK(P2)
     978/    1561 : BA FD                       DLD     LSTK(P2)
     979/    1563 : 33                          XPAL    P3
     980/    1564 : 03                          SCL
     981/    1565 : C3 FE                       LD      -2(P3)         ;SUBTRACT THE TWO OPERANDS,
     982/    1567 : FB 00                       CAD     (P3)           ;STORING RESULT IN LO & HI
     983/    1569 : CA EF                       ST      LO(P2)
     984/    156B : C3 FF                       LD      -1(P3)
     985/    156D : FB 01                       CAD     1(P3)
     986/    156F : CA EE                       ST      HI(P2)
     987/    1571 : E3 FF                       XOR     -1(P3)         ;OVERFLOW OCCURS IF SIGNS OF
     988/    1573 : 01                          XAE                    ;RESULT AND 1ST OPERAND
     989/    1574 : C3 FF                       LD      -1(P3)         ;DIFFER, AND SIGNS OF THE
     990/    1576 : E3 01                       XOR     1(P3)          ;TWO OPERANDS DIFFER
     991/    1578 : 50                          ANE                    ;BIT 7 EQUIVALENT TO V FLAG
     992/    1579 : E2 EE                       XOR     HI(P2)         ;BIT 7 EQUIVALENT TO N XOR V
     993/    157B : CA EA                       ST      TEMP(P2)       ;STORE IN TEMP
     994/    157D : C2 EE                       LD      HI(P2)         ;DETERMINE IF RESULT WAS ZERO
     995/    157F : DA EF                       OR      LO(P2)
     996/    1581 : 98 02                       JZ      SETZ           ;IF RESULT=0, SET Z FLAG
     997/    1583 : C4 80                       LDI     0x80           ;ELSE CLEAR Z FLAG
     998/    1585 : E4 80               SETZ:   XRI     0x80
     999/    1587 : 01                          XAE                    ;BIT 7 OF EX = Z FLAG
    1000/    1588 : BA EB                       DLD     NUM(P2)        ;TEST FOR =
    1001/    158A : 9C 05                       JNZ     NEQ1
    1002/    158C : 40                          LDE                    ;EQUAL IF Z = 1
    1003/    158D : 90 2B                       JMP     CMP1
    1004/    158F : 90 B1               X12:    JMP     X11
    1005/    1591 : BA EB               NEQ1:   DLD     NUM(P2)        ;TEST FOR <>
    1006/    1593 : 9C 05                       JNZ     LSS1
    1007/    1595 : 40                          LDE                    ;NOT EQUAL IF Z = 0
    1008/    1596 : E4 80                       XRI     0x80
    1009/    1598 : 90 20                       JMP     CMP1
    1010/    159A : BA EB               LSS1:   DLD     NUM(P2)        ;TEST FOR <                  
    1011/    159C : 9C 04                       JNZ     LEQ1
    1012/    159E : C2 EA                       LD      TEMP(P2)       ;LESS THAN IF (N XOR V)=l
    1013/    15A0 : 90 18                       JMP     CMP1
    1014/    15A2 : BA EB               LEQ1:   DLD     NUM(P2)        ;TEST FOR <=
    1015/    15A4 : 9C 05                       JNZ     GTR1
    1016/    15A6 : 40                          LDE                    ;LESS THAN OR EQUAL
    1017/    15A7 : DA EA                       OR      TEMP(P2)       ;IF (Z OR (N XOR V))=l
    1018/    15A9 : 90 0F                       JMP     CMP1
    1019/    15AB : BA EB               GTR1:   DLD     NUM(P2)        ;TEST FOR >
    1020/    15AD : 9C 07                       JNZ     GEQ1
    1021/    15AF : 40                          LDE                    ; GREATER THAN
    1022/    15B0 : DA EA                       OR      TEMP(P2)       ;  IF (Z OR (N XOR V))=0
    1023/    15B2 : E4 80                       XRI     0x80
    1024/    15B4 : 90 04                       JMP     CMP1
    1025/    15B6 : C2 EA               GEQ1:   LD      TEMP(P2)       ;GREATER THAN OR EQUAL
    1026/    15B8 : E4 80                       XRI     0x80           ;IF (N XOR V)=0
    1027/    15BA : 94 04               CMP1:   JP      FALSE_         ;IS RELATION SATISFIED?
    1028/    15BC : C4 01                       LDI     1              ;YES - PUSH 1 ON STACK
    1029/    15BE : 90 02                       JMP     CMP2
    1030/    15C0 : C4 00               FALSE_: LDI     0              ;NO - PUSH 0 ON STACK
    1031/    15C2 : CB FE               CMP2:   ST      -2(P3)
    1032/    15C4 : C4 00                       LDI     0 
    1033/    15C6 : CB FF                       ST      -1(P3)
    1034/    15C8 : (MACRO)                      JS      P3,RTN         ;DO AN I.L. RETURN
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 19 - 07.07.2023 12:00:44


    1034/    15C8 : C4 10                      LDI  H(RTN-1)
    1034/    15CA : 37                         XPAH P3
    1034/    15CB : C4 F5                      LDI  L(RTN-1)
    1034/    15CD : 33                         XPAL P3
    1034/    15CE : 3F                         XPPC P3
    1035/    15CF : 90 BE                       JMP     X12
    1036/    15D1 :                      
    1037/    15D1 :                      
    1038/    15D1 :                     ;*************************************
    1039/    15D1 :                     ;*   IF STATEMENT TEST FOR ZERO      *
    1040/    15D1 :                     ;*************************************
    1041/    15D1 :                                                                
    1042/    15D1 : C2 EF               CMPR:   LD      LO(P2)        ;GET LOW & HI BYTES OF EXPR.
    1043/    15D3 : DA EE                       OR      HI(P2)        ;TEST IF EXPRESSION IS ZERO
    1044/    15D5 : 98 02                       JZ      FAIL          ;YES - IT IS
    1045/    15D7 : 90 B6                       JMP     X12           ;NO  - IT ISN'T SO CONTINUE
    1046/    15D9 : C5 01               FAIL:   LD      @1(P1)        ;SKIP TO NEXT LINE IN PROGRAM
    1047/    15DB : E4 0D                       XRI     0x0D            ;(I.E. TIL NEXT CR)
    1048/    15DD : 9C FA                       JNZ     FAIL
    1049/    15DF : (MACRO)                      JS      P3,NXT        ;CALL NXT AND RETURN
    1049/    15DF : C4 12                      LDI  H(NXT-1)
    1049/    15E1 : 37                         XPAH P3
    1049/    15E2 : C4 83                      LDI  L(NXT-1)
    1049/    15E4 : 33                         XPAL P3
    1049/    15E5 : 3F                         XPPC P3
    1050/    15E6 : 90 A7               X12A:   JMP     X12
    1051/    15E8 :                      
    1052/    15E8 :                      
    1053/    15E8 :                     ;*************************************
    1054/    15E8 :                     ;*        AND, OR, & NOT             *
    1055/    15E8 :                     ;*************************************
    1056/    15E8 :                     
    1057/    15E8 :                     ;   .LOCAL 
    1058/    15E8 : C4 01               ANDOP:  LDI     1             ;EACH OPERATION HAS ITS
    1059/    15EA : 90 06                       JMP     LOGAND        ;OWN CASE SELECTOR.
    1060/    15EC : C4 02               OROP:   LDI     2
    1061/    15EE : 90 02                       JMP     LOGAND
    1062/    15F0 : C4 03               NOTOP:  LDI     3
    1063/    15F2 : CA EB               LOGAND: ST      NUM(P2)
    1064/    15F4 : C4 20                       LDI     H(AESTK)      ;SET P3 -> ARITH. STACK
    1065/    15F6 : 37                          XPAH    P3
    1066/    15F7 : BA FD                       DLD     LSTK(P2)
    1067/    15F9 : BA FD                       DLD     LSTK(P2)
    1068/    15FB : 33                          XPAL    P3
    1069/    15FC : BA EB                       DLD     NUM(P2)       ;TEST FOR 'AND'
    1070/    15FE : 9C 0E                       JNZ     LOGOR
    1071/    1600 : C3 01                       LD      1(P3)         ;REPLACE TWO TOP ITEMS ON
    1072/    1602 : D3 FF                       AND     -1(P3)        ;STACK BY THEIR 'AND'
    1073/    1604 : CB FF                       ST      -1(P3)
    1074/    1606 : C3 00                       LD      0(P3)
    1075/    1608 : D3 FE                       AND     -2(P3)
    1076/    160A : CB FE                       ST      -2(P3)
    1077/    160C : 90 D8                       JMP     X12A
    1078/    160E : BA EB               LOGOR:  DLD     NUM(P2)       ;TEST FOR 'OR'
    1079/    1610 : 9C 0E                       JNZ     LOGNOT
    1080/    1612 : C3 01                       LD      1(P3)         ;REPLACE TWO TOP ITEMS ON
    1081/    1614 : DB FF                       OR      -1(P3)        ;STACK BY THEIR 'OR'
    1082/    1616 : CB FF                       ST      -1(P3)
    1083/    1618 : C3 00                       LD      0(P3)
    1084/    161A : DB FE                       OR      -2(P3)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 20 - 07.07.2023 12:00:44


    1085/    161C : CB FE                       ST      -2(P3)
    1086/    161E : 90 C6                       JMP     X12A
    1087/    1620 : C7 01               LOGNOT: LD      @1(P3)        ;'NOT' OPERATION
    1088/    1622 : E4 FF                       XRI     0xFF
    1089/    1624 : CB FF                       ST      -1(P3)        ;REPLACE TOP ITEM ON STACK
    1090/    1626 : C7 01                       LD      @1(P3)        ; BY ITS ONE'S COMPLEMENT
    1091/    1628 : E4 FF                       XRI     0xFF
    1092/    162A : CB FF                       ST      -1(P3)
    1093/    162C : 33                          XPAL    P3
    1094/    162D : CA FD                       ST      LSTK(P2)      ;STACK POINTER FIXUP
    1095/    162F : 90 B5               X12B:   JMP     X12A
    1096/    1631 :                      
    1097/    1631 :                      
    1098/    1631 :                     ;*************************************
    1099/    1631 :                     ;*     EXCHANGE CURSOR WITH RAM      *
    1100/    1631 :                     ;*************************************
    1101/    1631 :                      
    1102/    1631 : C2 F1               XCHGP1: LD      P1LOW(P2)     ;THIS ROUTINE IS HANDY WHEN
    1103/    1633 : 31                          XPAL    P1            ;EXECUTING AN 'INPUT' STMT
    1104/    1634 : CA F1                       ST      P1LOW(P2)     ;IT EXCHANGES THE CURRENT
    1105/    1636 : C2 F0                       LD      P1HIGH(P2)    ;TEXT CURSOR WITH ONE SAVED
    1106/    1638 : 35                          XPAH    P1            ;IN RAM
    1107/    1639 : CA F0                       ST      P1HIGH(P2)
    1108/    163B : 3F                          XPPC    P3
    1109/    163C :                      
    1110/    163C :                      
    1111/    163C :                     ;*************************************
    1112/    163C :                     ;*        CHECK RUN MODE             *
    1113/    163C :                     ;*************************************
    1114/    163C :                      
    1115/    163C : C2 F4               CKMODE: LD      RUNMOD(P2)    ;THIS ROUTINE CAUSES AN ERROR
    1116/    163E : 98 01                       JZ      CK1           ;IF CURRENTLY IN EDIT MODE
    1117/    1640 : 3F                          XPPC    P3
    1118/    1641 : C4 03               CK1:    LDI     3
    1119/    1643 : CA EB               E8:     ST      NUM(P2)       ;ERROR IF RUN MODE = 0
    1120/    1645 : (MACRO)                      JS      P3,ERR2       ;MINOR KLUGE
    1120/    1645 : C4 12                      LDI  H(ERR2-1)
    1120/    1647 : 37                         XPAH P3
    1120/    1648 : C4 1E                      LDI  L(ERR2-1)
    1120/    164A : 33                         XPAL P3
    1120/    164B : 3F                         XPPC P3
    1121/    164C :                      
    1122/    164C :                      
    1123/    164C :                     ;*************************************
    1124/    164C :                     ;*      GET HEXADECIMAL NUMBER       *
    1125/    164C :                     ;*************************************
    1126/    164C :                     
    1127/    164C :                     ;   .LOCAL 
    1128/    164C : AA FD               HEX:    ILD     LSTK(P2)      ;POINT P3 AT ARITH STACK
    1129/    164E : AA FD                       ILD     LSTK(P2)
    1130/    1650 : 33                          XPAL    P3
    1131/    1651 : C4 20                       LDI     H(AESTK)
    1132/    1653 : 37                          XPAH    P3
    1133/    1654 : C4 00                       LDI      0            ;NUMBER INITIALLY ZERO
    1134/    1656 : CB FF                       ST      -1(P3)        ;PUT IT ON STACK
    1135/    1658 : CB FE                       ST      -2(P3)
    1136/    165A : CA EB                       ST      NUM(P2)       ;ZERO NUMBER OF DIGITS
    1137/    165C : C5 01               HSKIP:  LD      @1(P1)        ;SKIP ANY SPACES
    1138/    165E : E4 20                       XRI     ' '
    1139/    1660 : 98 FA                       JZ      HSKIP
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 21 - 07.07.2023 12:00:44


    1140/    1662 : C5 FF                       LD      @-1(P1)
    1141/    1664 : C1 00               LOOP7:  LD      (P1)          ;GET A CHARACTER
    1142/    1666 : 03                          SCL
    1143/    1667 : FC 3A                       CAI     '9'+1         ;CHECK FOR A NUMERIC CHAR
    1144/    1669 : 94 09                       JP      HLETR
    1145/    166B : 03                          SCL
    1146/    166C : FC F6                       CAI     '0'-'9'-1     ;IF NUMERIC, SHIFT NUMBER
    1147/    166E : 94 13                       JP      HENTER        ;AND ADD NEW HEX DIGIT
    1148/    1670 : 90 32                       JMP     HEND
    1149/    1672 : 90 BB               X12C:   JMP     X12B
    1150/    1674 : 03                  HLETR:  SCL                   ;CHECK FOR HEX LETTER
    1151/    1675 : FC 0D                       CAI     'G'-'9'-1
    1152/    1677 : 94 2B                       JP      HEND
    1153/    1679 : 03                          SCL
    1154/    167A : FC FA                       CAI     'A'-'G'
    1155/    167C : 94 02                       JP      HXOK
    1156/    167E : 90 24                       JMP     HEND
    1157/    1680 : 02                  HXOK:   CCL                   ;ADD 10 TO GET TRUE VALUE
    1158/    1681 : F4 0A                       ADI     10            ;OF LETTER
    1159/    1683 : 01                  HENTER: XAE                   ;NEW DIGIT IN EX REG
    1160/    1684 : C4 04                       LDI     4             ;SET SHIFT COUNTER
    1161/    1686 : CA EA                       ST      TEMP(P2)
    1162/    1688 : CA EB                       ST      NUM(P2)       ;DIGIT COUNT IS NON-ZERO
    1163/    168A : C3 FE               HSHIFT: LD      -2(P3)        ;SHIFT NUMBER LEFT BY 4
    1164/    168C : 02                          CCL
    1165/    168D : F3 FE                       ADD     -2(P3)
    1166/    168F : CB FE                       ST      -2(P3)
    1167/    1691 : C3 FF                       LD      -1(P3)
    1168/    1693 : F3 FF                       ADD     -1(P3)
    1169/    1695 : CB FF                       ST      -1(P3)
    1170/    1697 : BA EA                       DLD     TEMP(P2)
    1171/    1699 : 9C EF                       JNZ     HSHIFT
    1172/    169B : C3 FE                       LD      -2(P3)        ;ADD NEW DIGIT
    1173/    169D : 58                          ORE                   ; INTO NUMBER
    1174/    169E : CB FE                       ST      -2(P3)
    1175/    16A0 : C5 01                       LD      @1(P1)        ;ADVANCE THE CURSOR
    1176/    16A2 : 90 C0                       JMP     LOOP7         ;GET NEXT CHAR
    1177/    16A4 : C2 EB               HEND:   LD      NUM(P2)       ;CHECK IF THERE WERE
    1178/    16A6 : 9C 87                       JNZ     X12B          ; MORE THAN 0 CHARACTERS
    1179/    16A8 : C4 05                       LDI     5             ;ERROR IF THERE WERE NONE
    1180/    16AA : 90 97               E8B:    JMP     E8
    1181/    16AC :                      
    1182/    16AC :                      
    1183/    16AC :                     ;*************************************
    1184/    16AC :                     ;*      TEST FOR NUMBER IN TEXT      *
    1185/    16AC :                     ;*************************************
    1186/    16AC :                      
    1187/    16AC :                     ; THIS ROUTINE TESTS FOR A NUMBER IN THE TEXT.  IF NO
    1188/    16AC :                     ; NUMBER IS FOUND, I.L. CONTROL PASSES TO THE ADDRESS
    1189/    16AC :                     ; INDICATED IN THE 'TSTN' INSTRUCTION.  OTHERWISE, THE
    1190/    16AC :                     ; NUMBER IS SCANNED AND PUT ON THE ARITHMETIC STACK,
    1191/    16AC :                     ; WITH I.L. CONTROL PASSING TO THE NEXT INSTRUCTION.
    1192/    16AC :                     
    1193/    16AC :                     ;   .LOCAL 
    1194/    16AC : C5 01               TSTNUM: LD      @1(P1)
    1195/    16AE : E4 20                       XRI     ' '           ;SKIP OVER ANY SPACES
    1196/    16B0 : 98 FA                       JZ      TSTNUM
    1197/    16B2 : C5 FF                       LD      @-1(P1)       ;GET FIRST CHAR
    1198/    16B4 : 03                          SCL                   ;TEST FOR DIGIT
    1199/    16B5 : FC 3A                       CAI     '9'+1
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 22 - 07.07.2023 12:00:44


    1200/    16B7 : 94 05                       JP      TNABRT
    1201/    16B9 : 03                          SCL
    1202/    16BA : FC F6                       CAI     '0'-'9'-1
    1203/    16BC : 94 21                       JP      TN1
    1204/    16BE : C2 FB               TNABRT: LD      PCLOW(P2)     ;GET TEST-FAIL ADDRESS
    1205/    16C0 : 33                          XPAL    P3            ;FROM I.L. TABLE
    1206/    16C1 : C2 FA                       LD      PCHIGH(P2)
    1207/    16C3 : 37                          XPAH    P3
    1208/    16C4 : C3 00                       LD      (P3)          ;PUT TEST-FAIL ADDRESS
    1209/    16C6 : CA FA                       ST      PCHIGH(P2)    ;INTO I.L. PC
    1210/    16C8 : C3 01                       LD      1(P3)
    1211/    16CA : CA FB                       ST      PCLOW(P2)
    1212/    16CC : 90 A4                       JMP     X12C
    1213/    16CE : C4 02               TNRET:  LDI     2             ;SKIP OVER ONE IL INSTRUCTION
    1214/    16D0 : 02                          CCL                   ; IF NUMBER IS DONE
    1215/    16D1 : F2 FB                       ADD     PCLOW(P2)
    1216/    16D3 : CA FB                       ST      PCLOW(P2)
    1217/    16D5 : C4 00                       LDI     0
    1218/    16D7 : F2 FA                       ADD     PCHIGH(P2)
    1219/    16D9 : CA FA                       ST      PCHIGH(P2)
    1220/    16DB : 90 95               X13:    JMP     X12C
    1221/    16DD : 90 CB               ESA:    JMP     E8B
    1222/    16DF : 01                  TN1:    XAE                   ;SAVE DIGIT IN EX REG
    1223/    16E0 : C4 20                       LDI     H(AESTK)      ;POINT P3 AT AE STACK
    1224/    16E2 : 37                          XPAH    P3
    1225/    16E3 : AA FD                       ILD     LSTK(P2)
    1226/    16E5 : AA FD                       ILD     LSTK(P2)
    1227/    16E7 : 33                          XPAL    P3
    1228/    16E8 : C4 00                       LDI     0
    1229/    16EA : CB FF                       ST      -1(P3)
    1230/    16EC : 40                          LDE
    1231/    16ED : CB FE                       ST      -2(P3)
    1232/    16EF : C5 01               LOOP8:  LD      @1(P1)        ;GET NEXT CHAR
    1233/    16F1 : C1 00                       LD      (P1)
    1234/    16F3 : 03                          SCL                   ;TEST IF IT IS DIGIT
    1235/    16F4 : FC 3A                       CAI     '9'+1
    1236/    16F6 : 94 D6                       JP      TNRET          ;RETURN IF IT ISN'T
    1237/    16F8 : 03                          SCL
    1238/    16F9 : FC F6                       CAI     '0'-'9'-1
    1239/    16FB : 94 02                       JP      TN2
    1240/    16FD : 90 CF                       JMP     TNRET
    1241/    16FF : 01                  TN2:    XAE                   ;SAVE DIGIT
    1242/    1700 : C3 FF                       LD      -1(P3)        ;PUT RESULT IN SCRATCH SPACE
    1243/    1702 : CB 01                       ST      1(P3)
    1244/    1704 : C3 FE                       LD      -2(P3)
    1245/    1706 : CB 00                       ST      (P3)
    1246/    1708 : C4 02                       LDI     2
    1247/    170A : CA EA                       ST      TEMP(P2)      ;MULTIPLY RESULT BY 10
    1248/    170C : 02                  TNSHFT: CCL                   ;FIRST MULTIPLY BY 4
    1249/    170D : C3 FE                       LD      -2(P3)
    1250/    170F : F3 FE                       ADD     -2(P3)
    1251/    1711 : CB FE                       ST      -2(P3)
    1252/    1713 : C3 FF                       LD      -1(P3)
    1253/    1715 : F3 FF                       ADD     -1(P3)
    1254/    1717 : CB FF                       ST      -1(P3)
    1255/    1719 : D4 80                       ANI     0x80          ;MAKE SURE NO OVERFLOW
    1256/    171B : 9C 34                       JNZ     TNERR         ;OCCURRED
    1257/    171D : BA EA                       DLD     TEMP(P2)
    1258/    171F : 9C EB                       JNZ     TNSHFT
    1259/    1721 : 02                          CCL                   ;THEN ADD OLD RESULT,
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 23 - 07.07.2023 12:00:44


    1260/    1722 : C3 FE                       LD       -2(P3)       ;SO WE HAVE RESULT * 5
    1261/    1724 : F3 00                       ADD     (P3)
    1262/    1726 : CB FE                       ST       -2(P3)
    1263/    1728 : C3 FF                       LD       -1(P3)
    1264/    172A : F3 01                       ADD     1(P3)
    1265/    172C : CB FF                       ST       -1(P3)
    1266/    172E : D4 80                       ANI     0x80          ;MAKE SURE NO OVERFLOW
    1267/    1730 : 9C 1F                       JNZ     TNERR         ;OCCURRED
    1268/    1732 : 02                          CCL                   ;THEN MULTIPLY BY TWO
    1269/    1733 : C3 FE                       LD      -2(P3)
    1270/    1735 : F3 FE                       ADD     -2(P3)
    1271/    1737 : CB FE                       ST      -2(P3)
    1272/    1739 : C3 FF                       LD      -1(P3)
    1273/    173B : F3 FF                       ADD     -1(P3)
    1274/    173D : CB FF                       ST      -1(P3)
    1275/    173F : D4 80                       ANI     0x80          ;MAKE SURE NO OVERFLOW
    1276/    1741 : 9C 0E                       JNZ     TNERR         ;OCCURRED
    1277/    1743 : 02                          CCL                   ;THEN ADD IN NEW DIGIT
    1278/    1744 : 40                          LDE
    1279/    1745 : F3 FE                       ADD     -2(P3)
    1280/    1747 : CB FE                       ST      -2(P3)
    1281/    1749 : C4 00                       LDI     0
    1282/    174B : F3 FF                       ADD     -1(P3)
    1283/    174D : CB FF                       ST      -1(P3)
    1284/    174F : 94 9E                       JP      LOOP8         ;REPEAT IF NO OVERFLOW
    1285/    1751 : C4 06               TNERR:  LDI     6
    1286/    1753 : 90 88               E9:     JMP     ESA           ;ELSE REPORT ERROR
    1287/    1755 : 90 84               X14:    JMP     X13
    1288/    1757 :                      
    1289/    1757 :                      
    1290/    1757 :                     ;*************************************
    1291/    1757 :                     ;*    GET LINE FROM TELETYPE         *
    1292/    1757 :                     ;*************************************
    1293/    1757 :                     
    1294/    1757 :                     ;   .LOCAL 
    1295/    1757 : (MACRO)              GETL:   LDPI    P1,LBUF       ;SET P1 TO LBUF
    1295/    1757 : C4 20                      LDI  H(LBUF)
    1295/    1759 : 35                         XPAH P1
    1295/    175A : C4 D6                      LDI  L(LBUF)
    1295/    175C : 31                         XPAL P1
    1296/    175D : C4 00                       LDI     0             ;CLEAR NO. OF CHAR
    1297/    175F : CA E7                       ST      CHRNUM(P2)
    1298/    1761 : (MACRO)                      LDPI    P3,PUTC-1     ;POINT P3 AT PUTC ROUTINE
    1298/    1761 : C4 1F                      LDI  H(PUTC-1)
    1298/    1763 : 37                         XPAH P3
    1298/    1764 : C4 C1                      LDI  L(PUTC-1)
    1298/    1766 : 33                         XPAL P3
    1299/    1767 : C2 F4                       LD      RUNMOD(P2)    ;PRINT '? ' IF RUNNING
    1300/    1769 : 98 08                       JZ      GETL0         ; (I.E. DURING 'INPUT')
    1301/    176B : C4 3F                       LDI     '?'
    1302/    176D : 3F                          XPPC     P3
    1303/    176E : C4 20                       LDI     ' '
    1304/    1770 : 3F                          XPPC    P3
    1305/    1771 : 90 03                       JMP     GETL1
    1306/    1773 : C4 3C               GETL0:  LDI     '<'           ;OTHERWISE PRINT '<'
    1307/    1775 : 3F                          XPPC    P3   
    1308/    1776 : (MACRO)              GETL1:  JS      P3,GECO       ;GET CHARACTER
    1308/    1776 : C4 1F                      LDI  H(GECO-1)
    1308/    1778 : 37                         XPAH P3
    1308/    1779 : C4 76                      LDI  L(GECO-1)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 24 - 07.07.2023 12:00:44


    1308/    177B : 33                         XPAL P3
    1308/    177C : 3F                         XPPC P3
    1309/    177D : C4 C1                       LDI     L(PUTC)-1     ;POINT P3 AT PUTC AGAIN
    1310/    177F : 33                          XPAL    P3
    1311/    1780 : 40                          LDE                   ;GET TYPED CHAR
    1312/    1781 : 98 F3                       JZ      GETL1            ;IGNORE NULLS
    1313/    1783 : E4 0A                       XRI     0x0A            ;IGNORE LINE FEED
    1314/    1785 : 98 EF                       JZ      GETL1
    1315/    1787 : 40                          LDE
    1316/    1788 : E4 0D                       XRI     0x0D            ;CHECK FOR CR
    1317/    178A : 98 50                       JZ      GETLCR
    1318/    178C : 40                          LDE
    1319/    178D : E4 5F                       XRI     'O'+0x10       ;CHECK FOR SHIFT/O
    1320/    178F : 98 41                       JZ      GETRUB
    1321/    1791 : 40                          LDE                   ;CHECK FOR CTRL/H
    1322/    1792 : E4 08                       XRI     8
    1323/    1794 : 98 36                       JZ      GXH
    1324/    1796 : 40                          LDE
    1325/    1797 : E4 15                       XRI     0x15          ;CHECK FOR CTRL/U
    1326/    1799 : 98 0F                       JZ      GXU
    1327/    179B : 40                          LDE
    1328/    179C : E4 03                       XRI     3             ;CHECK FOR CTRL/C
    1329/    179E : 9C 1A                       JNZ     GENTER
    1330/    17A0 : C4 5E                       LDI     '^'           ;ECHO CONTROL/C AS ^C
    1331/    17A2 : 3F                          XPPC    P3
    1332/    17A3 : C4 43                       LDI     'C'
    1333/    17A5 : 3F                          XPPC    P3
    1334/    17A6 : C4 0E                       LDI     14            ;CAUSE A BREAK
    1335/    17A8 : 90 A9                       JMP     E9
    1336/    17AA : C4 5E               GXU:    LDI     '^'           ;ECHO CONTROL/U AS ^U
    1337/    17AC : 3F                          XPPC    P3
    1338/    17AD : C4 55                       LDI     'U'
    1339/    17AF : 3F                          XPPC    P3
    1340/    17B0 : C4 0D                       LDI     0x0D            ;PRINT CR/LF
    1341/    17B2 : 3F                          XPPC    P3                                          
    1342/    17B3 : C4 0A                       LDI     0x0A
    1343/    17B5 : 3F                          XPPC    P3
    1344/    17B6 : 90 9F                       JMP     GETL          ;GO GET ANOTHER LINE
    1345/    17B8 : 90 9B               X15:    JMP     X14
    1346/    17BA : 40                  GENTER: LDE
    1347/    17BB : CD 01                       ST      @1(P1)        ;PUT CHAR IN LBUF
    1348/    17BD : AA E7                       ILD     CHRNUM(P2)    ;INCREMENT CHRNUM
    1349/    17BF : E4 48                       XRI     72            ;IF=72, LINE FULL
    1350/    17C1 : 9C B3                       JNZ     GETL1
    1351/    17C3 : C4 0D                       LDI     0x0D
    1352/    17C5 : 01                          XAE                   ;SAVE CARRIAGE RET
    1353/    17C6 : 40                          LDE
    1354/    17C7 : 3F                          XPPC    P3            ;PRINT IT
    1355/    17C8 : 90 12                       JMP     GETLCR        ;STORE IT IN LBUF
    1356/    17CA : 90 87               E10:    JMP     E9                                              
    1357/    17CC : C4 20               GXH:    LDI     ' '           ;BLANK OUT THE CHARACTER
    1358/    17CE : 3F                          XPPC    P3
    1359/    17CF : C4 08                       LDI     8             ;PRINT ANOTHER BACKSPACE
    1360/    17D1 : 3F                          XPPC    P3
    1361/    17D2 : C2 E7               GETRUB: LD      CHRNUM(P2)
    1362/    17D4 : 98 A0                       JZ      GETL1
    1363/    17D6 : BA E7                       DLD     CHRNUM(P2)    ;ONE LESS CHAR
    1364/    17D8 : C5 FF                       LD      @-1(P1)       ;BACKSPACE CURSOR
    1365/    17DA : 90 9A                       JMP     GETL1
    1366/    17DC : 40                  GETLCR: LDE
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 25 - 07.07.2023 12:00:44


    1367/    17DD : CD 01                       ST      @1(P1)        ;STORE CR IN LBUF
    1368/    17DF : C4 0A                       LDI     0x0A            ;PRINT LINE FEED
    1369/    17E1 : 3F                          XPPC    P3
    1370/    17E2 : C4 20                       LDI     H(LBUF)       ;SET P1 TO BEGIN-
    1371/    17E4 : 35                          XPAH    P1            ;  NING OF LBUF
    1372/    17E5 : C4 D6                       LDI     L(LBUF)
    1373/    17E7 : 31                          XPAL    P1
    1374/    17E8 : 90 CE               X16:    JMP     X15
    1375/    17EA :                      
    1376/    17EA :                      
    1377/    17EA :                     ;*************************************
    1378/    17EA :                     ;*     EVAL -- GET MEMORY CONTENTS   *
    1379/    17EA :                     ;*************************************
    1380/    17EA :                      
    1381/    17EA :                     ; THIS ROUTINE IMPLEMENTS THE '@' OPERATOR IN EXPRESSIONS
    1382/    17EA :                      
    1383/    17EA : C4 20               EVAL:   LDI     H(AESTK)
    1384/    17EC : 37                          XPAH    P3
    1385/    17ED : C2 FD                       LD      LSTK(P2)
    1386/    17EF : 33                          XPAL    P3            ;P3 -> ARITH STACK  
    1387/    17F0 : C3 FF                       LD      -1(P3)        ;GET ADDR OFF STACK,
    1388/    17F2 : 35                          XPAH    P1            ; AND INTO P1,
    1389/    17F3 : 01                          XAE                   ; SAVING OLD P1 IN EX & LO
    1390/    17F4 : C3 FE                       LD      -2(P3)                                       
    1391/    17F6 : 31                          XPAL    P1
    1392/    17F7 : CA EF                       ST      LO(P2)
    1393/    17F9 : C1 00                       LD      0(P1)         ;GET MEMORY CONTENTS,
    1394/    17FB : CB FE                       ST      -2(P3)        ;SHOVE ONTO STACK
    1395/    17FD : C4 00                       LDI     0
    1396/    17FF : CB FF                       ST      -1(P3)        ;HIGH ORDER 8 BITS ZEROED
    1397/    1801 : C2 EF                       LD      LO(P2)
    1398/    1803 : 31                          XPAL    P1            ;RESTORE ORIGINAL P1
    1399/    1804 : 40                          LDE
    1400/    1805 : 35                          XPAH    P1
    1401/    1806 : 90 B0                       JMP     X15
    1402/    1808 :                      
    1403/    1808 :                      
    1404/    1808 :                     ;*************************************
    1405/    1808 :                     ;*    MOVE -- STORE INTO MEMORY      *
    1406/    1808 :                     ;*************************************
    1407/    1808 :                      
    1408/    1808 :                     ; THIS ROUTINE IMPLEMENTS THE STATEMENT:
    1409/    1808 :                     ;    '@' FACTOR '=' REL-EXP
    1410/    1808 :                      
    1411/    1808 : C4 20               MOVE:   LDI     H(AESTK)
    1412/    180A : 37                          XPAH    P3
    1413/    180B : C2 FD                       LD      LSTK(P2)
    1414/    180D : 33                          XPAL    P3            ;P3 -> ARITH STACK
    1415/    180E : C7 FE                       LD      @-2(P3)       ;GET BYTE TO BE MOVED
    1416/    1810 : 01                          XAE                                                    
    1417/    1811 : C7 FF                       LD      @-1(P3)       ;NOW GET ADDRESS INTO P3
    1418/    1813 : CA EA                       ST      TEMP(P2)
    1419/    1815 : C7 FF                       LD      @-1(P3)
    1420/    1817 : 33                          XPAL    P3
    1421/    1818 : CA FD                       ST      LSTK(P2)      ;STACK PTR UPDATED NOW
    1422/    181A : C2 EA                       LD      TEMP(P2)
    1423/    181C : 37                          XPAH    P3
    1424/    181D : 40                          LDE
    1425/    181E : CB 00                       ST      0(P3)         ;MOVE THE  BYTE INTO MEMORY
    1426/    1820 : 90 C6               X17:    JMP     X16
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 26 - 07.07.2023 12:00:44


    1427/    1822 : 90 A6               Ell:    JMP     E10
    1428/    1824 :                      
    1429/    1824 :                     ;*************************************
    1430/    1824 :                     ;*            TEXT EDITOR            *
    1431/    1824 :                     ;*************************************
    1432/    1824 :                                                                  
    1433/    1824 :                     ;INPUTS TO THIS ROUTINE: POINTER TO LINE BUFFER IN P1LOW &
    1434/    1824 :                     ; P1HIGH.  P1 POINTS TO THE INSERTION POINT IN THE TEXT.
    1435/    1824 :                     ; THE A.E. STACK HAS THE LINE NUMBER ON IT (STACK POINTER
    1436/    1824 :                     ; IS ALREADY POPPED).
    1437/    1824 :                      
    1438/    1824 :                     ;EACH LINE IN THE NIBL TEXT IS STORED IN THE FOLLOWING
    1439/    1824 :                     ; FORMAT: TWO BYTES CONTAINING THE LINE NUMBER (IN BINARY,
    1440/    1824 :                     ; HIGH ORDER BYTE FIRST), THEN ONE BYTE CONTAINING THE
    1441/    1824 :                     ; LENGTH OF THE LINE, AND FINALLY THE LINE ITSELF FOLLOWED
    1442/    1824 :                     ; BY A CARRIAGE RETURN.  THE LAST LINE IN THE TEXT IS
    1443/    1824 :                     ; FOLLOWED BY TWO CONSECUTIVE BYTES OF X'FF.
    1444/    1824 :                     
    1445/    1824 :                     ;   .LOCAL                      
    1446/    1824 : C4 20               INSRT:  LDI     H(AESTK)      ;POINT P3 AT AE STACK,
    1447/    1826 : 37                          XPAH    P3            ;WHICH HAS THE LINE #
    1448/    1827 : C2 FD                       LD      LSTK(P2)      ;ON IT
    1449/    1829 : 33                          XPAL    P3
    1450/    182A : C3 01                       LD      1(P3)         ;SAVE NEW LINE'S NUMBER
    1451/    182C : CA F7                       ST      HILINE(P2)
    1452/    182E : C3 00                       LD      0(P3)
    1453/    1830 : CA F8                       ST      LOLINE(P2)
    1454/    1832 : C2 F1                       LD      P1LOW(P2)     ;PUT POINTER TO LBUF INTO P3
    1455/    1834 : 33                          XPAL    P3
    1456/    1835 : C2 F0                       LD      P1HIGH(P2)
    1457/    1837 : 37                          XPAH    P3
    1458/    1838 : C4 04                       LDI     4             ;INITIALLY LENGTH OF NEW LINE
    1459/    183A : CA E7                       ST      CHRNUM(P2)    ; = 4. ADD 1 TO LENGTH FOR
    1460/    183C : C7 01               INSRT1: LD      @1(P3)        ; EACH CHAR IN LINE UP TO, BUT
    1461/    183E : E4 0D                       XRI     0x0D            ; NOT INCLUDING, CARR. RETURN
    1462/    1840 : 98 04                       JZ      INSRT2
    1463/    1842 : AA E7                       ILD     CHRNUM(P2)
    1464/    1844 : 90 F6                       JMP     INSRT1
    1465/    1846 : C2 E7               INSRT2: LD      CHRNUM(P2)    ;IF LENGTH STILL 4, WE'LL DELETE
    1466/    1848 : E4 04                       XRI     4             ; A LINE, SO SET LENGTH = 0
    1467/    184A : 9C 02                       JNZ     INSRT3
    1468/    184C : CA E7                       ST      CHRNUM(P2)
    1469/    184E : C2 E7               INSRT3: LD      CHRNUM(P2)    ;PUT NEW LINE LENGTH IN EX
    1470/    1850 : 01                          XAE
    1471/    1851 : C2 F2                       LD      LABLHI(P2)    ;IS NEW LINE REPLACING OLD?
    1472/    1853 : 94 06                       JP      INSRT4            ;YES - DO REPLACE
    1473/    1855 : D4 7F                       ANI     0x7F           ;NO - WE'LL INSERT LINE HERE,
    1474/    1857 : CA F2                       ST      LABLHI(P2)    ;WHERE FNDLBL GOT US
    1475/    1859 : 90 18                       JMP     AMOVE         ;BUT FIRST MAKE ROOM
    1476/    185B : C5 03               INSRT4: LD      @3(P1)        ;SKIP LINE # AND LENGTH
    1477/    185D : 40                          LDE                   ;EX, NOW HOLDING NEW LINE
    1478/    185E : 02                          CCL                   ; LENGTH, WILL SOON HOLD
    1479/    185F : F4 FC                       ADI     -4            ; DISPLACEMENT OF LINES
    1480/    1861 : 01                          XAE                   ; TO BE MOVED
    1481/    1862 : C5 01               INSRT5: LD      @1(P1)        ;SUBTRACT 1 FROM DISPLACEMENT
    1482/    1864 : E4 0D                       XRI     0x0D            ; FOR EACH CHAR IN LINE BEING
    1483/    1866 : 98 0B                       JZ      AMOVE         ; REPLACED
    1484/    1868 : 40                          LDE
    1485/    1869 : 02                          CCL
    1486/    186A : F4 FF                       ADI     -1
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 27 - 07.07.2023 12:00:44


    1487/    186C : 01                          XAE
    1488/    186D : 90 F3                       JMP     INSRT5
    1489/    186F : 90 AF               X19:    JMP     X17
    1490/    1871 : 90 AF               E12:    JMP     Ell
    1491/    1873 : 40                  AMOVE:  LDE                   ;IF DISPLACEMENT AND LENGTH
    1492/    1874 : DA E7                       OR      CHRNUM(P2)    ; OF NEW LINE ARE 0, RETURN
    1493/    1876 : 98 F7                       JZ      X19
    1494/    1878 : C4 7A                       LDI     L(DOSTAK)     ;CLEAR SOME STACKS
    1495/    187A : CA FF                       ST      DOPTR(P2)
    1496/    187C : C4 6A                       LDI     L(SBRSTK)
    1497/    187E : CA FC                       ST      SBRPTR(P2)
    1498/    1880 : C4 8A                       LDI     L(FORSTK)                                    
    1499/    1882 : CA FE                       ST      FORPTR(P2)
    1500/    1884 : 40                          LDE
    1501/    1885 : 98 60                       JZ      INSAD0        ;DON'T NEED TO MOVE LINES
    1502/    1887 : 94 10                       JP      INSUP0        ;SKIP IF DISPLACEMENT POSITIVE
    1503/    1889 : C1 00               ADOWN:  LD      0(P1)         ;NEGATIVE DISPLACEMENT:
    1504/    188B : C9 80                       ST      EREG(P1)      ;DO;
    1505/    188D : C5 01                       LD      @1(P1)        ;   M(P1+DISP) = M(P1);
    1506/    188F : 94 F8                       JP      ADOWN         ;   P1 = P1+1;
    1507/    1891 : C1 00                       LD      0(P1)         ;UNTIL M(P1)<0 & M(P1-1)<0;
    1508/    1893 : 94 F4                       JP      ADOWN
    1509/    1895 : C9 80                       ST      EREG(P1)      ;M(P1+DISP) = M(P1);
    1510/    1897 : 90 4E                       JMP     INSAD0
    1511/    1899 : C1 FE               INSUP0: LD      -2(P1)        ;POSITIVE DISPLACEMENT:
    1512/    189B : CA EA                       ST      TEMP(P2)      ;FLAG BEGINNING OF MOVE WITH
    1513/    189D : C4 FF                       LDI     -1            ;A -1 FOLLOWED BY 80, WHICH
    1514/    189F : C9 FE                       ST      -2(P1)        ;CAN NEVER APPEAR IN A
    1515/    18A1 : C4 50                       LDI     80            ;NIBL TEXT
    1516/    18A3 : C9 FF                       ST      -1(P1)
    1517/    18A5 : C5 01               INSUP1: LD      @1(P1)        ;ADVANCE P1 TO END OF TEXT
    1518/    18A7 : 94 FC                       JP      INSUP1
    1519/    18A9 : C1 00                       LD      0(P1)
    1520/    18AB : 94 F8                       JP      INSUP1
    1521/    18AD : 35                          XPAH    P1            ;SAVE P1 IN LO, HI
    1522/    18AE : CA EE                       ST      HI(P2)
    1523/    18B0 : 35                          XPAH    P1   
    1524/    18B1 : 31                          XPAL    P1
    1525/    18B2 : CA EF                       ST      LO(P2)
    1526/    18B4 : 31                          XPAL    P1
    1527/    18B5 : C2 EF                       LD      LO(P2)        ;ADD DISPLACEMENT TO
    1528/    18B7 : 02                          CCL                   ;VALUE OF P1, TO CHECK
    1529/    18B8 : 70                          ADE                   ;WHETHER WE'RE OUT OF
    1530/    18B9 : C4 00                       LDI     0             ;RAM FOR USER'S PROGRAM
    1531/    18BB : F2 EE                       ADD     HI(P2)
    1532/    18BD : E2 EE                       XOR     HI(P2)
    1533/    18BF : D4 F0                       ANI     0xF0
    1534/    18C1 : 98 03                       JZ      INSUP2
    1535/    18C3 : C4 00                       LDI     0             ;IF OUT OF RAM, CHANGE
    1536/    18C5 : 01                          XAE                   ;DISPLACEMENT TO ZERO
    1537/    18C6 : C4 FF               INSUP2: LDI     -1
    1538/    18C8 : C9 80               INSUP3: ST      EREG(P1)      ;MOVE TEXT UP UNTIL WE REACH
    1539/    18CA : C5 FF                       LD      @-1(P1)       ;THE FLAGS SET ABOVE
    1540/    18CC : 94 FA                       JP      INSUP3
    1541/    18CE : C1 01                       LD      1(P1)
    1542/    18D0 : E4 50                       XRI     80
    1543/    18D2 : 98 04                       JZ      INSUP4
    1544/    18D4 : C1 00                       LD      0(P1)
    1545/    18D6 : 90 F0                       JMP     INSUP3
    1546/    18D8 : C2 EA               INSUP4: LD      TEMP(P2)      ;RESTORE THE FLAGGED LOCATION
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 28 - 07.07.2023 12:00:44


    1547/    18DA : C9 00                       ST      0(P1)         ;TO THEIR ORIGINAL VALUES
    1548/    18DC : C4 0D                       LDI     0x0D
    1549/    18DE : C9 01                       ST      1(P1)
    1550/    18E0 : 40                          LDE                   ;IF DISPLACEMENT = 0, WE'RE
    1551/    18E1 : 9C 04                       JNZ     INSAD0        ;OUT OF RAM, SO REPORT ERROR
    1552/    18E3 : C4 02                       LDI     2
    1553/    18E5 : 90 8A               E12A:   JMP     E12
    1554/    18E7 : C2 E7               INSAD0: LD      CHRNUM(P2)    ;INSERT NEW LINE
    1555/    18E9 : 98 84               X19A:   JZ      X19           ;UNLESS LENGTH IS ZERO
    1556/    18EB : C2 F1                       LD      P1LOW(P2)     ;POINT P1 AT LINE BUFFER
    1557/    18ED : 31                          XPAL    P1
    1558/    18EE : C2 F0                       LD      P1HIGH(P2)
    1559/    18F0 : 35                          XPAH    P1
    1560/    18F1 : C2 F3                       LD      LABLLO(P2)    ;POINT P3 AT INSERTION PLACE
    1561/    18F3 : 33                          XPAL    P3
    1562/    18F4 : C2 F2                       LD      LABLHI(P2)
    1563/    18F6 : 37                          XPAH    P3
    1564/    18F7 : C2 F7                       LD      HILINE(P2)    ;PUT LINE NUMBER INTO TEXT
    1565/    18F9 : CF 01                       ST      @1(P3)
    1566/    18FB : C2 F8                       LD      LOLINE(P2)
    1567/    18FD : CF 01                       ST      @1(P3)
    1568/    18FF : C2 E7                       LD      CHRNUM(P2)    ;STORE LINE LENGTH IN TEXT
    1569/    1901 : CF 01                       ST      @1(P3)
    1570/    1903 : C5 01               INSAD1: LD      @1(P1)        ;PUT REST OF CHARS
    1571/    1905 : CF 01                       ST      @1(P3)        ;(INCLUDING OR) INTO TEXT
    1572/    1907 : E4 0D                       XRI     0x0D
    1573/    1909 : 9C F8                       JNZ     INSAD1
    1574/    190B : 90 DC                       JMP     X19A          ;RETURN
    1575/    190D : (MACRO)              X20:    JS      P3,EXECIL
    1575/    190D : C4 10                      LDI  H(EXECIL-1)
    1575/    190F : 37                         XPAH P3
    1575/    1910 : C4 75                      LDI  L(EXECIL-1)
    1575/    1912 : 33                         XPAL P3
    1575/    1913 : 3F                         XPPC P3
    1576/    1914 : 90 CF               E13:    JMP     E12A
    1577/    1916 :                      
    1578/    1916 :                      
    1579/    1916 :                     ;************************************
    1580/    1916 :                     ;*       POP ARITHMETIC STACK       *
    1581/    1916 :                     ;************************************
    1582/    1916 :                      
    1583/    1916 : BA FD               POPAE:  DLD     LSTK(P2)      ;THIS ROUTINE POP THE A.E.
    1584/    1918 : BA FD                       DLD     LSTK(P2)      ;STACK, AND PUTS THE RESULT
    1585/    191A : 33                          XPAL    P3            ;INTO LO(P2) AND HI(P2)
    1586/    191B : C4 20                       LDI     H(AESTK)
    1587/    191D : 37                          XPAH    P3
    1588/    191E : C3 00                       LD      (P3)
    1589/    1920 : CA EF                       ST      LO(P2)
    1590/    1922 : C3 01                       LD      1(P3)
    1591/    1924 : CA EE                       ST      HI(P2)
    1592/    1926 : 90 E5                       JMP     X20
    1593/    1928 :                      
    1594/    1928 :                      
    1595/    1928 :                     ;*************************************
    1596/    1928 :                     ;*              UNTIL                *
    1597/    1928 :                     ;*************************************
    1598/    1928 :                     
    1599/    1928 :                     ;   .LOCAL 
    1600/    1928 : C2 FF               UNTIL:  LD      DOPTR(P2)     ;CHECK FOR DO-STACK UNDERFLOW
    1601/    192A : 01                          XAE
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 29 - 07.07.2023 12:00:44


    1602/    192B : 40                          LDE 
    1603/    192C : E4 7A                       XRI     L(DOSTAK)
    1604/    192E : 9C 04                       JNZ     UNTL1
    1605/    1930 : C4 0F                       LDI     15
    1606/    1932 : 90 E0                       JMP     E13                                         
    1607/    1934 : C2 EF               UNTL1:  LD      LO(P2)        ;CHECK FOR EXPRESSION = 0
    1608/    1936 : DA EE                       OR      HI(P2)
    1609/    1938 : 98 06                       JZ      SREDO         ;IF ZERO, REPEAT DO-LOOP
    1610/    193A : BA FF                       DLD     DOPTR(P2)     ;ELSE POP SAVE STACK
    1611/    193C : BA FF                       DLD     DOPTR(P2)
    1612/    193E : 90 CD                       JMP     X20           ;CONTINUE TO NEXT STMT
    1613/    1940 : 40                  SREDO:  LDE                   ;POINT P3 AT DO-STACK
    1614/    1941 : 33                          XPAL    P3
    1615/    1942 : C4 20                       LDI     H(DOSTAK)
    1616/    1944 : 37                          XPAH    P3
    1617/    1945 : C3 FF                       LD      -1(P3)        ;LOAD P1 FROM DO STACK
    1618/    1947 : 35                          XPAH    P1
    1619/    1948 : C3 FE                       LD      -2(P3)
    1620/    194A : 31                          XPAL    P1            ;CURSOR NOW POINTS TO FIRST
    1621/    194B : 90 C0                       JMP     X20           ;STATEMENT OF DO-LOOP
    1622/    194D :                     
    1623/    194D :                      
    1624/    194D :                     ;*************************************
    1625/    194D :                     ;*     STORE INTO STATUS REGISTER    *
    1626/    194D :                     ;*************************************
    1627/    194D :                      
    1628/    194D :                     ; THIS ROUTINE IMPLEMENTS THE STATEMENT:
    1629/    194D :                     ;     'STAT' '=' REL-EXP
    1630/    194D :                      
    1631/    194D : C2 EF               MOVESR:  LD      LO(P2)         ;LOW BYTE GOES TO STATUS
    1632/    194F : D4 F7                        ANI     0xF7            ;BUT WITH IEN BIT CLEARED
    1633/    1951 : 07                           CAS
    1634/    1952 : 90 B9               X21:     JMP     X20
    1635/    1954 : 90 BE               E14:     JMP     E13
    1636/    1956 :                      
    1637/    1956 :                      
    1638/    1956 :                     ;*************************************
    1639/    1956 :                     ;*         STAT FUNCTION             *
    1640/    1956 :                     ;*************************************
    1641/    1956 :                      
    1642/    1956 : C4 20               STATUS: LDI     H(AESTK)
    1643/    1958 : 37                          XPAH    P3            ;POINT P3 AT AE STACK
    1644/    1959 : AA FD                       ILD     LSTK(P2)
    1645/    195B : AA FD                       ILD     LSTK(P2)
    1646/    195D : 33                          XPAL    P3
    1647/    195E : 06                          CSA
    1648/    195F : CB FE                       ST      -2(P3)        ;STATUS REG IS LOW BYTE
    1649/    1961 : C4 00                       LDI     0
    1650/    1963 : CB FF                       ST      -1(P3)        ;ZERO IS HIGH BYTE
    1651/    1965 : 90 EB                       JMP     X21
    1652/    1967 :                      
    1653/    1967 :                      
    1654/    1967 :                     ;*************************************
    1655/    1967 :                     ;*    MACHINE LANGUAGE SUBROUTINE    *
    1656/    1967 :                     ;*************************************
    1657/    1967 :                      
    1658/    1967 :                     ; THIS ROUTINE IMPLEMENTS THE 'LINK' STATEMENT
    1659/    1967 :                      
    1660/    1967 : C2 EE               CALLML: LD      HI(P2)        ;GET HIGH BYTE OF ADDRESS
    1661/    1969 : 37                          XPAH    P3
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 30 - 07.07.2023 12:00:44


    1662/    196A : C2 EF                       LD      LO(P2)        ;GET LOW BYTE
    1663/    196C : 33                          XPAL    P3            ;P3 -> USER'S ROUTINE
    1664/    196D : C7 FF                       LD      @-1(P3)       ;CORRECT P3
    1665/    196F : 3F                          XPPC    P3            ;CALL ROUTINE (PRAY IT WORKS)
    1666/    1970 : (MACRO)              REST:   LDPI    P2,VARS       ;RESTORE RAM POINTER
    1666/    1970 : C4 20                      LDI  H(VARS)
    1666/    1972 : 36                         XPAH P2
    1666/    1973 : C4 1C                      LDI  L(VARS)
    1666/    1975 : 32                         XPAL P2
    1667/    1976 : 90 DA                       JMP     X21           ;RETURN
    1668/    1978 :                      
    1669/    1978 :                      
    1670/    1978 :                     ;*************************************
    1671/    1978 :                     ;*        SAVE DO LOOP ADDRESS       *
    1672/    1978 :                     ;*************************************
    1673/    1978 :                      
    1674/    1978 :                     ; THIS ROUTINE IMPLEMENTS THE 'DO' STATEMENT.
    1675/    1978 :                     
    1676/    1978 :                     ;   .LOCAL 
    1677/    1978 : C2 FF               SAVEDO: LD      DOPTR(P2)     ;CHECK FOR STACK OVERFLOW
    1678/    197A : E4 8A                       XRI     L(FORSTK)
    1679/    197C : 9C 04                       JNZ     SAVED1
    1680/    197E : C4 0A                       LDI     10
    1681/    1980 : 90 D2               E15:    JMP     E14
    1682/    1982 : AA FF               SAVED1: ILD     DOPTR(P2)
    1683/    1984 : AA FF                       ILD     DOPTR(P2)
    1684/    1986 : 33                          XPAL    P3
    1685/    1987 : C4 20                       LDI     H(DOSTAK)
    1686/    1989 : 37                          XPAH    P3            ;P3 -> TOP OF DO STACK
    1687/    198A : 35                          XPAH    P1            ;SAVE CURSOR ON THE STACK
    1688/    198B : CB FF                       ST      -1(P3)
    1689/    198D : 35                          XPAH    P1
    1690/    198E : 31                          XPAL    P1
    1691/    198F : CB FE                       ST      -2(P3)
    1692/    1991 : 31                          XPAL    P1
    1693/    1992 : 90 BE               X22:    JMP     X21
    1694/    1994 :                      
    1695/    1994 :                      
    1696/    1994 :                     ;*************************************
    1697/    1994 :                     ;*        TOP OF RAM FUNCTION        *
    1698/    1994 :                     ;*************************************
    1699/    1994 :                     
    1700/    1994 :                     ;   .LOCAL 
    1701/    1994 : C2 E9               TOP:    LD      TEMP2(P2)     ;SET P3 TO POINT TO
    1702/    1996 : 37                          XPAH    P3            ;START OF NIBL TEXT
    1703/    1997 : C2 E8                       LD      TEMP3(P2)
    1704/    1999 : 33                          XPAL    P3
    1705/    199A : C3 00               TOP0:   LD      (P3)          ;HAVE WE HIT END OF TEXT?
    1706/    199C : 94 02                       JP      TOP1          ;NO - SKIP TO NEXT LINE
    1707/    199E : 90 07                       JMP     TOP2          ;YES - PUT CURSOR ON STACK
    1708/    19A0 : C3 02               TOP1:   LD      2(P3)         ;GET LENGTH OF LINE
    1709/    19A2 : 01                          XAE
    1710/    19A3 : C7 80                       LD      @EREG(P3)     ;SKIP TO NEXT LINE
    1711/    19A5 : 90 F3                       JMP     TOP0          ;GO CHECK FOR EOF
    1712/    19A7 : C7 02               TOP2:   LD      @2(P3)        ;P3 := P3 + 2
    1713/    19A9 : AA FD                       ILD     LSTK(P2)      ;SET P3 TO STACK, SAVING
    1714/    19AB : AA FD                       ILD     LSTK(P2)      ;OLD P3 (WHICH CONTAINS TOP)
    1715/    19AD : 33                          XPAL    P3            ;ON IT SOMEHOW
    1716/    19AE : 01                          XAE
    1717/    19AF : C4 20                       LDI     H(AESTK)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 31 - 07.07.2023 12:00:44


    1718/    19B1 : 37                          XPAH    P3
    1719/    19B2 : CB FF                       ST      -1(P3)
    1720/    19B4 : 40                          LDE
    1721/    19B5 : CB FE                       ST      -2(P3)
    1722/    19B7 : 90 D9                       JMP     X22
    1723/    19B9 :                      
    1724/    19B9 :                      
    1725/    19B9 :                     ;*************************************
    1726/    19B9 :                     ;*       SKIP TO NEXT NIBL LINE      *
    1727/    19B9 :                     ;*************************************
    1728/    19B9 :                      
    1729/    19B9 : C5 01               IGNORE: LD      @1(P1)        ;SCAN TIL WE'RE PAST
    1730/    19BB : E4 0D                       XRI     0x0D            ;CARRIAGE RETURN
    1731/    19BD : 9C FA                       JNZ     IGNORE
    1732/    19BF : 3F                          XPPC    P3            ;YES - RETURN
    1733/    19C0 :                      
    1734/    19C0 :                      
    1735/    19C0 :                     ;*************************************
    1736/    19C0 :                     ;*          MODULO FUNCTION          *
    1737/    19C0 :                     ;*************************************
    1738/    19C0 :                      
    1739/    19C0 : C2 FD               MODULO: LD      LSTK(P2)      ;THIS ROUTINE MUST BE
    1740/    19C2 : 33                          XPAL    P3            ;IMMEDIATELY AFTER A
    1741/    19C3 : C4 20                       LDI     H(AESTK)      ;DIVIDE TO WORK CORRECTLY
    1742/    19C5 : 37                          XPAH    P3
    1743/    19C6 : C3 03                       LD      3(P3)         ;GET LOW BYTE OF REMAINDER
    1744/    19C8 : CB FE                       ST      -2(P3)        ;PUT ON STACK
    1745/    19CA : C3 02                       LD      2(P3)         ;GET HIGH BYTE OF REMAINDER
    1746/    19CC : CB FF                       ST      -1(P3)        ;PUT ON STACK
    1747/    19CE : 90 C2               X23:    JMP     X22
    1748/    19D0 : 90 AE               E16:    JMP     E15
    1749/    19D2 :                      
    1750/    19D2 :                      
    1751/    19D2 :                     ;*************************************
    1752/    19D2 :                     ;*          RANDOM FUNCTION          *
    1753/    19D2 :                     ;*************************************
    1754/    19D2 :                     
    1755/    19D2 :                     ;   .LOCAL 
    1756/    19D2 : C4 08               RANDOM: LDI     8             ;LOOP COUNTER FOR MULTIPLY
    1757/    19D4 : CA EB                       ST      NUM(P2)
    1758/    19D6 : C2 E5                       LD      RNDX(P2)
    1759/    19D8 : 01                          XAE
    1760/    19D9 : C2 E4                       LD      RNDY(P2)
    1761/    19DB : CA E9                       ST      TEMP2(P2)
    1762/    19DD : C2 E5               LOOP9:  LD      RNDX(P2)      ;MULTIPLY THE SEEDS BY 9
    1763/    19DF : 02                          CCL
    1764/    19E0 : 70                          ADE
    1765/    19E1 : 01                          XAE
    1766/    19E2 : C2 E4                       LD      RNDY(P2)
    1767/    19E4 : 02                          CCL
    1768/    19E5 : F2 E9                       ADD     TEMP2(P2)
    1769/    19E7 : CA E4                       ST      RNDY(P2)
    1770/    19E9 : BA EB                       DLD     NUM(P2)
    1771/    19EB : 9C F0                       JNZ     LOOP9
    1772/    19ED : 40                          LDE                   ;ADD 7 TO SEEDS
    1773/    19EE : 02                          CCL
    1774/    19EF : F4 07                       ADI     7
    1775/    19F1 : 01                          XAE
    1776/    19F2 : C2 E4                       LD      RNDY(P2)
    1777/    19F4 : 02                          CCL
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 32 - 07.07.2023 12:00:44


    1778/    19F5 : F4 07                       ADI     7
    1779/    19F7 : 1E                          RR
    1780/    19F8 : CA E4                       ST      RNDY(P2)
    1781/    19FA : AA E6                       ILD     RNDF(P2)      ;HAVE WE GONE THROUGH
    1782/    19FC : 98 03                       JZ      RND1          ;256 GENERATIONS?
    1783/    19FE : 40                          LDE                   ;IF SO, SKIP GENERATING
    1784/    19FF : CA E5                       ST      RNDX(P2)      ;THE NEW RNDX
    1785/    1A01 : C2 FD               RND1:   LD      LSTK(P2)      ;START MESSING WITH THE STACK
    1786/    1A03 : 33                          XPAL    P3
    1787/    1A04 : C4 20                       LDI     H(AESTK)
    1788/    1A06 : 37                          XPAH    P3
    1789/    1A07 : C4 01                       LDI     1             ;FIRST PUT 1 ON STACK
    1790/    1A09 : CB 00                       ST      (P3)
    1791/    1A0B : C4 00                       LDI     0
    1792/    1A0D : CB 01                       ST      1(P3)
    1793/    1A0F : C3 FE                       LD      -2(P3)        ;PUT EXPR2 ON STACK
    1794/    1A11 : CB 02                       ST      2(P3)
    1795/    1A13 : C3 FF                       LD      -1(P3)
    1796/    1A15 : CB 03                       ST      3(P3)
    1797/    1A17 : C3 FC                       LD      -4(P3)        ;PUT EXPR1 ON STACK
    1798/    1A19 : CB 04                       ST      4(P3)
    1799/    1A1B : C3 FD                       LD      -3(P3)
    1800/    1A1D : CB 05                       ST      5(P3)
    1801/    1A1F : C2 E4                       LD      RNDY(P2)      ;PUT RANDOM # ON STACK
    1802/    1A21 : CB FE                       ST      -2(P3)
    1803/    1A23 : C2 E5                       LD      RNDX(P2)
    1804/    1A25 : E4 FF                       XRI     0xFF
    1805/    1A27 : D4 7F                       ANI     0x7F
    1806/    1A29 : CB FF                       ST      -1(P3)
    1807/    1A2B : C7 06                       LD      @6(P3)        ;ADD 6 TO STACK POINTER
    1808/    1A2D : 33                          XPAL    P3
    1809/    1A2E : CA FD                       ST      LSTK(P2)
    1810/    1A30 : 90 9C               X24:    JMP     X23
    1811/    1A32 : 90 9C               E16A:   JMP     E16
    1812/    1A34 :                      
    1813/    1A34 :                      
    1814/    1A34 :                     ;*************************************
    1815/    1A34 :                     ;*     PUSH 1 ON ARITHMETIC STACK    *
    1816/    1A34 :                     ;*************************************
    1817/    1A34 :                      
    1818/    1A34 : AA FD               LIT1:   ILD     LSTK(P2)
    1819/    1A36 : AA FD                       ILD     LSTK(P2)
    1820/    1A38 : 33                          XPAL    P3
    1821/    1A39 : C4 20                       LDI     H(AESTK)
    1822/    1A3B : 37                          XPAH    P3
    1823/    1A3C : C4 00                       LDI     0
    1824/    1A3E : CB FF                       ST      -1(P3)
    1825/    1A40 : C4 01                       LDI     1
    1826/    1A42 : CB FE                       ST      -2(P3)
    1827/    1A44 : 90 EA                       JMP     X24
    1828/    1A46 :                      
    1829/    1A46 :                      
    1830/    1A46 :                     ;*************************************
    1831/    1A46 :                     ;*      FOR-LOOP INITIALIZATION      *
    1832/    1A46 :                     ;*************************************
    1833/    1A46 :                     
    1834/    1A46 :                     ;   .LOCAL 
    1835/    1A46 : C2 FE               SAVFOR: LD      FORPTR(P2)    ;CHECK FOR FOR STACK
    1836/    1A48 : E4 A6                       XRI     L(PCSTAK)     ; OVERFLOW
    1837/    1A4A : 9C 04                       JNZ     SFOR1
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 33 - 07.07.2023 12:00:44


    1838/    1A4C : C4 0A                       LDI     10
    1839/    1A4E : 90 E2               E17:    JMP     E16A
    1840/    1A50 : E4 A6               SFOR1:  XRI     L(PCSTAK)
    1841/    1A52 : 31                          XPAL    P1            ;POINT P1 AT FOR STACK
    1842/    1A53 : CA F1                       ST      P1LOW(P2)     ; SAVING OLD P1
    1843/    1A55 : C4 20                       LDI     H(FORSTK)
    1844/    1A57 : 35                          XPAH    P1
    1845/    1A58 : CA F0                       ST      P1HIGH(P2)
    1846/    1A5A : C2 FD                       LD      LSTK(P2)      ;POINT P3 AT AE STACK
    1847/    1A5C : 33                          XPAL    P3
    1848/    1A5D : C4 20                       LDI     H(AESTK)
    1849/    1A5F : 37                          XPAH    P3
    1850/    1A60 : C3 F9                       LD      -7(P3)        ;GET VARIABLE INDEX
    1851/    1A62 : CD 01                       ST      @1(P1)        ;SAVE ON FOR-STACK
    1852/    1A64 : C3 FC                       LD      -4(P3)        ;GET L(LIMIT)
    1853/    1A66 : CD 01                       ST      @1(P1)        ;SAVE
    1854/    1A68 : C3 FD                       LD      -3(P3)        ;GET H(LIMIT)
    1855/    1A6A : CD 01                       ST      @1(P1)        ;SAVE
    1856/    1A6C : C3 FE                       LD      -2(P3)        ;GET L(STEP)
    1857/    1A6E : CD 01                       ST      @1(P1)        ;SAVE
    1858/    1A70 : C3 FF                       LD      -1(P3)        ;GET H(STEP)
    1859/    1A72 : CD 01                       ST      @1(P1)        ;SAVE
    1860/    1A74 : C2 F1                       LD      P1LOW(P2)     ;GET L(P1)
    1861/    1A76 : CD 01                       ST      @1(P1)        ;SAVE
    1862/    1A78 : C2 F0                       LD      P1HIGH(P2)    ;GET H(P1)
    1863/    1A7A : CD 01                       ST      @1(P1)        ;SAVE
    1864/    1A7C : 35                          XPAH    P1            ;RESTORE OLD P1
    1865/    1A7D : C2 F1                       LD      P1LOW(P2)
    1866/    1A7F : 31                          XPAL    P1
    1867/    1A80 : CA FE                       ST      FORPTR(P2)    ;UPDATE POR STACK PTR
    1868/    1A82 : C7 FC                       LD      @-4(P3)
    1869/    1A84 : 33                          XPAL    P3
    1870/    1A85 : CA FD                       ST      LSTK(P2)      ;UPDATE AE STACK PTR
    1871/    1A87 : 90 A7               X25:    JMP     X24
    1872/    1A89 :                      
    1873/    1A89 :                      
    1874/    1A89 :                     ;*************************************
    1875/    1A89 :                     ;*     FIRST PART OF 'NEXT VAR'      *
    1876/    1A89 :                     ;*************************************
    1877/    1A89 :                     
    1878/    1A89 :                     ;   .LOCAL 
    1879/    1A89 : C2 FE               NEXTV:  LD      FORPTR(P2)    ;POINT P1 AT FOR STACK,
    1880/    1A8B : E4 8A                       XRI     L(FORSTK)     ;CHECKING FOR UNDERFLOW
    1881/    1A8D : 9C 04                       JNZ     QNXTV1
    1882/    1A8F : C4 0B                       LDI     11            ;REPORT ERROR
    1883/    1A91 : 90 BB                       JMP     E17
    1884/    1A93 : E4 8A               QNXTV1: XRI     L(FORSTK)
    1885/    1A95 : 31                          XPAL    P1
    1886/    1A96 : CA F1                       ST      P1LOW(P2)     ;SAVE OLD P1
    1887/    1A98 : C4 20                       LDI     H(FORSTK)
    1888/    1A9A : 35                          XPAH    P1
    1889/    1A9B : CA F0                       ST      P1HIGH(P2) 
    1890/    1A9D : C2 FD                       LD      LSTK(P2)      ;POINT P3 AT AE STACK
    1891/    1A9F : 33                          XPAL    P3
    1892/    1AA0 : C4 20                       LDI     H(AESTK)
    1893/    1AA2 : 37                          XPAH    P3
    1894/    1AA3 : C7 FF                       LD      @-1(P3)       ;GET VARIABLE INDEX
    1895/    1AA5 : E1 F9                       XOR     -7(P1)        ;COMPARE WITH INDEX
    1896/    1AA7 : 98 04                       JZ      NXTV10        ;ON FOR STACK: ERROR
    1897/    1AA9 : C4 0C                       LDI     12            ;IF NOT EQUAL
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 34 - 07.07.2023 12:00:44


    1898/    1AAB : 90 A1               E18:    JMP     E17
    1899/    1AAD : E1 F9               NXTV10: XOR     -7(P1)        ;RESTORE INDEX
    1900/    1AAF : 01                          XAE                   ;SAVE IN EREG
    1901/    1AB0 : C2 80                       LD      EREG(P2)      ;GET L(VARIABLE)
    1902/    1AB2 : 02                          CCL
    1903/    1AB3 : F1 FC                       ADD     -4(P1)        ;ADD L(STEP)
    1904/    1AB5 : CA 80                       ST      EREG(P2)      ;STORE IN VARIABLE
    1905/    1AB7 : CB 00                       ST      (P3)          ;AND ON STACK
    1906/    1AB9 : C6 01                       LD      @1(P2)        ;INCREMENT RAM PTR
    1907/    1ABB : C2 80                       LD      EREG(P2)      ;GET H(VARIABLE)
    1908/    1ABD : F1 FD                       ADD     -3(P1)        ;ADD H(STEP)
    1909/    1ABF : CA 80                       ST      EREG(P2)      ;STORE IN VARIABLE
    1910/    1AC1 : CB 01                       ST      1(P3)         ;AND ON STACK
    1911/    1AC3 : C6 FF                       LD      @-1(P2)       ;RESTORE RAM POINTER
    1912/    1AC5 : C1 FA                       LD      -6(P1)        ;GET L(LIMIT)
    1913/    1AC7 : CB 02                       ST      2(P3)         ;PUT ON STACK
    1914/    1AC9 : C1 FB                       LD      -5(P1)        ;GET H(LIMIT)
    1915/    1ACB : CB 03                       ST      3(P3)         ;PUT ON STACK
    1916/    1ACD : C1 FD                       LD      -3(P1)        ;GET H(STEP)
    1917/    1ACF : 94 10                       JP      NXTV2         ;IF NEGATIVE, INVERT
    1918/    1AD1 : C4 04                       LDI     4             ;ITEMS ON A.E. STACK
    1919/    1AD3 : CA EB                       ST      NUM(P2)       ;NUM = LOOP COUNTER
    1920/    1AD5 : C7 01               LOOP10: LD      @1(P3)        ;GET BYTE FROM STACK
    1921/    1AD7 : E4 FF                       XRI     0xFF           ;INVERT IT
    1922/    1AD9 : CB FF                       ST      -1(P3)        ;PUT BACK ON STACK
    1923/    1ADB : BA EB                       DLD     NUM(P2)       ;DO UNTIL NUM = 0
    1924/    1ADD : 9C F6                       JNZ     LOOP10
    1925/    1ADF : 90 02                       JMP     NXTV3
    1926/    1AE1 : C7 04               NXTV2:  LD      @4(P3)        ;UPDATE AE STACK POINTER
    1927/    1AE3 : 33                  NXTV3:  XPAL    P3
    1928/    1AE4 : CA FD                       ST      LSTK(P2)
    1929/    1AE6 : C2 F1                       LD      P1LOW(P2)     ; RESTORE OLD P1
    1930/    1AE8 : 31                          XPAL    P1
    1931/    1AE9 : C2 F0                       LD      P1HIGH(P2)
    1932/    1AEB : 35                          XPAH    P1
    1933/    1AEC : 90 99               X26:    JMP     X25
    1934/    1AEE :                      
    1935/    1AEE :                      
    1936/    1AEE :                     ;*************************************
    1937/    1AEE :                     ;*     SECOND PART OF 'NEXT VAR'     *
    1938/    1AEE :                     ;*************************************
    1939/    1AEE :                      
    1940/    1AEE : C2 EF               NEXTV1: LD      LO(P2)        ;IS FOR-LOOP OVER WITH?
    1941/    1AF0 : 98 08                       JZ      LREDO         ;NO - REPEAT LOOP
    1942/    1AF2 : C2 FE                       LD      FORPTR(P2)    ;YES - POP FOR-STACK
    1943/    1AF4 : 02                          CCL
    1944/    1AF5 : F4 F9                       ADI     -7
    1945/    1AF7 : CA FE                       ST      FORPTR(P2)
    1946/    1AF9 : 3F                          XPPC    P3            ;RETURN TO I.L. INTERPRETER
    1947/    1AFA : C2 FE               LREDO:  LD      FORPTR(P2)    ;POINT P3 AT FOR STACK
    1948/    1AFC : 33                          XPAL    P3                                            
    1949/    1AFD : C4 20                       LDI     H(FORSTK)
    1950/    1AFF : 37                          XPAH    P3                              
    1951/    1B00 : C3 FF                       LD      -1(P3)        ;GET OLD P1 OFF STACK
    1952/    1B02 : 35                          XPAH    P1
    1953/    1B03 : C3 FE                       LD      -2(P3)
    1954/    1B05 : 31                          XPAL    P1
    1955/    1B06 : 90 E4                       JMP     X26
    1956/    1B08 : 90 A1               E19:    JMP     E18
    1957/    1B0A :                     
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 35 - 07.07.2023 12:00:44


    1958/    1B0A :                     
    1959/    1B0A :                     ;************************************
    1960/    1B0A :                     ;*      PRINT MEMORY AS STRING      *
    1961/    1B0A :                     ;************************************
    1962/    1B0A :                      
    1963/    1B0A :                     ; THIS ROUTINE IMPLEMENTS THE STATEMENT:
    1964/    1B0A :                     ;     'PRINT' '$' FACTOR
    1965/    1B0A :                      
    1966/    1B0A :                     ;   .LOCAL
    1967/    1B0A : C2 EE               PSTRNG: LD      HI(P2)        ;POINT P1 AT STRING TO PRINT
    1968/    1B0C : 35                          XPAH    P1
    1969/    1B0D : C2 EF                       LD      LO(P2)
    1970/    1B0F : 31                          XPAL    P1
    1971/    1B10 : (MACRO)                      LDPI    P3,PUTC-1     ;POINT P3 AT PUTC ROUTINE
    1971/    1B10 : C4 1F                      LDI  H(PUTC-1)
    1971/    1B12 : 37                         XPAH P3
    1971/    1B13 : C4 C1                      LDI  L(PUTC-1)
    1971/    1B15 : 33                         XPAL P3
    1972/    1B16 : C5 01               PRSTR1: LD      @1(P1)        ;GET A CHARACTER
    1973/    1B18 : E4 0D                       XRI     0x0D            ;IS IT A CARRIAGE RETURN?
    1974/    1B1A : 98 D0                       JZ      X26           ;YES - WE'RE DONE
    1975/    1B1C : E4 0D                       XRI     0x0D            ;NO - PRINT THE CHARACTER
    1976/    1B1E : 3F                          XPPC    P3
    1977/    1B1F : 06                          CSA                   ;MAKE SURE NO ONE IS
    1978/    1B20 : D4 20                       ANI     0x20           ;TYPING ON THE TTY
    1979/    1B22 : 9C F2                       JNZ     PRSTR1        ;BEFORE REPEATING LOOP
    1980/    1B24 : 90 C6                       JMP     X26
    1981/    1B26 :                      
    1982/    1B26 :                      
    1983/    1B26 :                     ;************************************
    1984/    1B26 :                     ;*        INPUT A STRING            *
    1985/    1B26 :                     ;************************************
    1986/    1B26 :                      
    1987/    1B26 :                     ; THIS ROUTINE IMPLEMENTS THE STATEMENT:
    1988/    1B26 :                     ;     'INPUT' '$' FACTOR
    1989/    1B26 :                      
    1990/    1B26 : C2 EE               ISTRNG: LD      HI(P2)        ;GET ADDRESS TO STORE THE
    1991/    1B28 : 37                          XPAH    P3            ; STRING, PUT IT INTO P3
    1992/    1B29 : C2 EF                       LD      LO(P2)
    1993/    1B2B : 33                          XPAL    P3
    1994/    1B2C : C5 01               ISTRG2: LD      @1(P1)        ;GET A BYTE FROM LINE BUFFER
    1995/    1B2E : CF 01                       ST      @1(P3)        ;PUT IT IN SPECIFIED LOCATION
    1996/    1B30 : E4 0D                       XRI     0x0D            ;DO UNTIL CHAR = CARR. RETURN
    1997/    1B32 : 9C F8                       JNZ     ISTRG2
    1998/    1B34 : 90 B6               X27:    JMP     X26
    1999/    1B36 :                      
    2000/    1B36 :                      
    2001/    1B36 :                     ;************************************
    2002/    1B36 :                     ;*   STRING CONSTANT ASSIGNMENT     *
    2003/    1B36 :                     ;************************************
    2004/    1B36 :                      
    2005/    1B36 :                     ; THIS ROUTINE IMPLEMENTS THE STATEMENT:
    2006/    1B36 :                     ;     '$' FACTOR '=' STRING
    2007/    1B36 :                              
    2008/    1B36 :                     ;   .LOCAL
    2009/    1B36 : C2 EF               PUTSTR: LD      LO(P2)        ;GET ADDRESS TO STORE STRING,
    2010/    1B38 : 33                          XPAL    P3            ;PUT IT INTO P3
    2011/    1B39 : C2 EE                       LD      HI(P2)
    2012/    1B3B : 37                          XPAH    P3
    2013/    1B3C : C5 01               LOOP11: LD      @1(P1)        ;GET A BYTE FROM STRING
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 36 - 07.07.2023 12:00:44


    2014/    1B3E : E4 22                       XRI     '"'           ;CHECK FOR END OF STRING
    2015/    1B40 : 98 0E                       JZ      STREND
    2016/    1B42 : E4 2F                       XRI     '"' ! 0x0D    ;MAKE SURE THERE'S NO CR
    2017/    1B44 : 9C 04                       JNZ     PTSTR1
    2018/    1B46 : C4 07                       LDI     7
    2019/    1B48 : 90 BE                       JMP     E19           ;ERROR IF CARRIAGE RETURN
    2020/    1B4A : E4 0D               PTSTR1: XRI     0x0D          ;RESTORE CHARACTER
    2021/    1B4C : CF 01                       ST      @1(P3)        ;PUT IN SPECIFIED LOCATION
    2022/    1B4E : 90 EC                       JMP     LOOP11        ;GET NEXT CHARACTER
    2023/    1B50 : C4 0D               STREND: LDI     0x0D          ;APPEND CARRIAGE RETURN
    2024/    1B52 : CB 00                       ST      (P3)          ;TO STRING
    2025/    1B54 : 90 DE                       JMP     X27
    2026/    1B56 :                      
    2027/    1B56 :                      
    2028/    1B56 :                     ;************************************
    2029/    1B56 :                     ;*           MOVE STRING            *
    2030/    1B56 :                     ;************************************
    2031/    1B56 :                      
    2032/    1B56 :                     ; THIS ROUTINE IMPLEMENTS THE STATEMENT:
    2033/    1B56 :                     ;     '$' FACTOR '=' '$' FACTOR
    2034/    1B56 :                     
    2035/    1B56 :                     ;   .LOCAL 
    2036/    1B56 : C2 FD               MOVSTR: LD      LSTK(P2)      ;POINT P3 AT A.E. STACK
    2037/    1B58 : 33                          XPAL    P3
    2038/    1B59 : C4 20                       LDI     H(AESTK)
    2039/    1B5B : 37                          XPAH    P3
    2040/    1B5C : C7 FF                       LD      @-1(P3)       ;GET ADDRESS OF SOURCE STRING
    2041/    1B5E : 35                          XPAH    P1            ;INTO P1
    2042/    1B5F : C7 FF                       LD      @-1(P3)
    2043/    1B61 : 31                          XPAL    P1
    2044/    1B62 : C7 FF                       LD      @-1(P3)       ;GET ADDRESS OF DESTINATION
    2045/    1B64 : 01                          XAE                   ; STRING INTO P3
    2046/    1B65 : C7 FF                       LD      @-1(P3)
    2047/    1B67 : 33                          XPAL    P3
    2048/    1B68 : CA FD                       ST      LSTK(P2)      ;UPDATE STACK POINTER
    2049/    1B6A : 40                          LDE
    2050/    1B6B : 37                          XPAH    P3
    2051/    1B6C : C5 01               LOOP12: LD      @1(P1)        ;GET A SOURCE CHARACTER
    2052/    1B6E : CF 01                       ST      @1(P3)        ;SEND IT TO DESTINATION
    2053/    1B70 : E4 0D                       XRI     0x0D          ;REPEAT UNTIL CARRIAGE RET.
    2054/    1B72 : 98 C0                       JZ      X27
    2055/    1B74 : 06                          CSA                   ; OR KEYBOARD INTERRUPT
    2056/    1B75 : D4 20                       ANI     0x20
    2057/    1B77 : 9C F3                       JNZ     LOOP12
    2058/    1B79 : 90 B9                       JMP     X27                                           
    2059/    1B7B :                      
    2060/    1B7B :                      
    2061/    1B7B :                     ;************************************
    2062/    1B7B :                     ;*     PUT PAGE NUMBER ON STACK     *
    2063/    1B7B :                     ;************************************
    2064/    1B7B :                      
    2065/    1B7B : AA FD               PUTPGE: ILD     LSTK(P2)
    2066/    1B7D : AA FD                       ILD     LSTK(P2)
    2067/    1B7F : 33                          XPAL    P3
    2068/    1B80 : C4 20                       LDI     H(AESTK)
    2069/    1B82 : 37                          XPAH    P3
    2070/    1B83 : C2 F6                       LD      PAGE(P2)
    2071/    1B85 : CB FE                       ST      -2(P3)
    2072/    1B87 : C4 00                       LDI     0
    2073/    1B89 : CB FF                       ST      -1(P3)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 37 - 07.07.2023 12:00:44


    2074/    1B8B : 90 A7                       JMP     X27
    2075/    1B8D :                      
    2076/    1B8D :                      
    2077/    1B8D :                     ;************************************
    2078/    1B8D :                     ;*        ASSIGN NEW PAGE           *
    2079/    1B8D :                     ;************************************
    2080/    1B8D :                      
    2081/    1B8D :                     ;   .LOCAL
    2082/    1B8D : C2 EF               NUPAGE: LD      LO(P2)        ;GET PAGE # FROM STACK,
    2083/    1B8F : D4 06                       ANI     6             ; GET THE LOW 3 BITS
    2084/    1B91 : 98 04                       JZ      NUPGE0        ;PAGE 0 BECOMES PAGE 1
    2085/    1B93 : C2 EF                       LD      LO(P2)
    2086/    1B95 : CA F6                       ST      PAGE(P2)
    2087/    1B97 : 3F                  NUPGE0: XPPC    P3            ;RETURN
    2088/    1B98 :                     
    2089/    1B98 :                      
    2090/    1B98 :                     ;*************************************
    2091/    1B98 :                     ;*         FIND START OF PAGE        *
    2092/    1B98 :                     ;*************************************
    2093/    1B98 :                      
    2094/    1B98 :                     ; THIS ROUTINE COMPUTES THE START OF THE CURRENT TEXT PAGE,
    2095/    1B98 :                     ; STORING THE ADDRESS IN TEMP2(P2) [THE HIGH BYTE], AND
    2096/    1B98 :                     ; TEMP3(P2) [THE LOW BYTE].
    2097/    1B98 :                      
    2098/    1B98 : C2 F6               FNDPGE:  LD      PAGE(P2)
    2099/    1B9A : E4 02                        XRI     2            ;SPECIAL CASE IS PAGE 2, BUT
    2100/    1B9C : 9C 09                        JNZ     FPGE1        ;OTHERS ARE CONVENTIONAL
    2101/    1B9E : C4 21                        LDI     H(PGM)       ;PAGE 1 STARTS AT 'PGM'
    2102/    1BA0 : CA E9                        ST      TEMP2(P2)
    2103/    1BA2 : C4 20                        LDI     L(PGM)
    2104/    1BA4 : CA E8                        ST      TEMP3(P2)
    2105/    1BA6 : 3F                           XPPC    P3           ;RETURN
    2106/    1BA7 : E4 02               FPGE1:   XRI     2            ;RESTORE PAGE #
    2107/    1BA9 : 01                           XAE                  ;SAVE IT
    2108/    1BAA : C4 04                        LDI     4            ;LOPGMOP COUNTER = 4
    2109/    1BAC : CA EB                        ST      NUM(P2)
    2110/    1BAE : 40                  LOOP13:  LDE                  ;MULTIPLY PAGE# BY 16
    2111/    1BAF : 02                           CCL                                 
    2112/    1BB0 : 70                           ADE
    2113/    1BB1 : 01                           XAE
    2114/    1BB2 : BA EB                        DLD     NUM(P2)
    2115/    1BB4 : 9C F8                        JNZ     LOOP13
    2116/    1BB6 : 40                           LDE
    2117/    1BB7 : CA E9                        ST      TEMP2(P2)    ;TEMP2 HAS HIGH BYTE
    2118/    1BB9 : C4 02                        LDI     2            ;OF ADDRESS NOW
    2119/    1BBB : CA E8                        ST      TEMP3(P2)    ;LOW BYTE IS ALWAYS 2
    2120/    1BBD : 3F                           XPPC    P3
    2121/    1BBE :                     
    2122/    1BBE :                     
    2123/    1BBE :                     ;************************************
    2124/    1BBE :                     ;*      MOVE CURSOR TO NEW PAGE     *
    2125/    1BBE :                     ;************************************
    2126/    1BBE :                      
    2127/    1BBE : C2 E9               CHPAGE: LD      TEMP2(P2)     ;PUT START OF PAGE
    2128/    1BC0 : 35                          XPAH    P1            ;INTO P1. THIS ROUTINE
    2129/    1BC1 : C2 E8                       LD      TEMP3(P2)     ;MUST BE CALLED RIGHT
    2130/    1BC3 : 31                          XPAL    P1            ;AFTER 'FNDPGE'
    2131/    1BC4 : 3F                          XPPC    P3            ;RETURN
    2132/    1BC5 :                      
    2133/    1BC5 :                      
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 38 - 07.07.2023 12:00:44


    2134/    1BC5 :                     ;************************************
    2135/    1BC5 :                     ;*      DETERMINE CURRENT PAGE      *
    2136/    1BC5 :                     ;************************************
    2137/    1BC5 :                      
    2138/    1BC5 : 35                  DETPGE: XPAH    P1            ;CURRENT PAGE IS HIGH
    2139/    1BC6 : 01                          XAE                   ;PART OF CURSOR DIVIDED
    2140/    1BC7 : 40                          LDE                   ;BY 16
    2141/    1BC8 : 35                          XPAH    P1
    2142/    1BC9 : 40                          LDE
    2143/    1BCA : 1C                          SR
    2144/    1BCB : 1C                          SR
    2145/    1BCC : 1C                          SR
    2146/    1BCD : 1C                          SR
    2147/    1BCE : CA F6                       ST      PAGE(P2)
    2148/    1BD0 : 3F                          XPPC    P3            ;RETURN
    2149/    1BD1 :                      
    2150/    1BD1 :                      
    2151/    1BD1 :                     ;************************************
    2152/    1BD1 :                     ;*         CLEAR CURRENT PAGE       *
    2153/    1BD1 :                     ;************************************
    2154/    1BD1 :                      
    2155/    1BD1 : C2 E9               NEWPGM: LD      TEMP2(P2)     ;POINT P1 AT CURRENT PAGE
    2156/    1BD3 : 35                          XPAH    P1
    2157/    1BD4 : C2 E8                       LD      TEMP3(P2)
    2158/    1BD6 : 31                          XPAL    P1
    2159/    1BD7 : C4 0D                       LDI     0x0D          ;PUT DUMMY END-OF-LINE
    2160/    1BD9 : C9 FF                       ST      -1(P1)        ;JUST BEFORE TEXT
    2161/    1BDB : C4 FF                       LDI     -1            ;PUT -1 AT START OF TEXT
    2162/    1BDD : C9 00                       ST      (P1)
    2163/    1BDF : C9 01                       ST      1(P1)
    2164/    1BE1 : 3F                          XPPC    P3            ;RETURN
    2165/    1BE2 :                      
    2166/    1BE2 :                      
    2167/    1BE2 :                     ;*************************************
    2168/    1BE2 :                     ;*      FIND LINE NUMBER IN TEXT     *
    2169/    1BE2 :                     ;*************************************
    2170/    1BE2 :                      
    2171/    1BE2 :                     ;INPUTS: THE START OF THE CURRENT PAGE IN TEMP2 AND TEMPS,
    2172/    1BE2 :                     ;        THE LINE NUMBER TO LOOK FOR IN LO AND HI.
    2173/    1BE2 :                     ;OUPUTS: THE ADDRESS OF THE FIRST LINE IN THE NIBL TEXT
    2174/    1BE2 :                     ;        WHOSE LINE NUMBER IS GREATER THAN OR EQUAL TO THE
    2175/    1BE2 :                     ;        NUMBER IN HI AND LO, RETURNED IN P1 AND ALSO IN
    2176/    1BE2 :                     ;        IN THE RAM VARIABLES LABLLO AND LABLHI.  THE SIGN
    2177/    1BE2 :                     ;        BIT OF LABLHI IS SET IF EXACT LINE IS NOT FOUND.
    2178/    1BE2 :                     
    2179/    1BE2 :                     ;   .LOCAL        
    2180/    1BE2 : C2 E9               FNDLBL: LD      TEMP2(P2)     ;POINT P1 AT START OF TEXT
    2181/    1BE4 : 35                          XPAH    P1
    2182/    1BE5 : C2 E8                       LD      TEMP3(P2)
    2183/    1BE7 : 31                          XPAL    P1
    2184/    1BE8 : C1 00               FNLBL1: LD      (P1)          ;HAVE WE HIT END OF TEXT?
    2185/    1BEA : E4 FF                       XRI     0xFF
    2186/    1BEC : 94 12                       JP      FNLBL2        ;YES - STOP LOOKING
    2187/    1BEE : 03                          SCL                   ;NO - COMPARE LINE NUMBERS
    2188/    1BEF : C1 01                       LD      1(P1)         ;BY SUBTRACTING
    2189/    1BF1 : FA EF                       CAD     LO(P2)
    2190/    1BF3 : C1 00                       LD      0(P1)
    2191/    1BF5 : FA EE                       CAD     HI(P2)        ;IS TEXT LINE # >= LINE #?
    2192/    1BF7 : 94 07                       JP      FNLBL2        ;YES - STOP LOOKING.
    2193/    1BF9 : C1 02                       LD      2(P1)         ;NO - TRY NEXT LINE IN TEXT
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 39 - 07.07.2023 12:00:44


    2194/    1BFB : 01                          XAE
    2195/    1BFC : C5 80                       LD      @EREG(P1)     ; SKIP LENGTH OF LINE
    2196/    1BFE : 90 E8                       JMP     FNLBL1
    2197/    1C00 : 31                  FNLBL2: XPAL    P1            ;SAVE ADDRESS OF FOUND LINE
    2198/    1C01 : CA F3                       ST      LABLLO(P2)    ;IN LABLHI AND LABLLO
    2199/    1C03 : 31                          XPAL    P1
    2200/    1C04 : 35                          XPAH    P1
    2201/    1C05 : CA F2                       ST      LABLHI(P2)
    2202/    1C07 : 35                          XPAH    P1
    2203/    1C08 : C2 EF                       LD      LO(P2)        ;WAS THERE AN EXACT MATCH?
    2204/    1C0A : E1 01                       XOR     1(P1)
    2205/    1C0C : 9C 07                       JNZ     FNLBL3
    2206/    1C0E : C2 EE                       LD      HI(P2)
    2207/    1C10 : E1 00                       XOR     0(P1)
    2208/    1C12 : 9C 01                       JNZ     FNLBL3        ;NO - FLAG THE ADDRESS
    2209/    1C14 : 3F                          XPPC    P3            ;YES - RETURN NORMALLY
    2210/    1C15 : C2 F2               FNLBL3: LD      LABLHI(P2)    ;SET SIGN BIT OF HIGH PART
    2211/    1C17 : DC 80                       ORI     0x80          ;OF ADDRESS TO INDICATE
    2212/    1C19 : CA F2                       ST      LABLHI(P2)    ;INEXACT MATCH OF LINE #'S
    2213/    1C1B : 3F                          XPPC    P3
    2214/    1C1C :                     
    2215/    1C1C :                     
    2216/    1C1C :                     ;   .PAGE   ' I. L. MACROS'
    2217/    1C1C :                     
    2218/    1C1C :                     ;***********************************
    2219/    1C1C :                     ;*          I. L. MACROS           *
    2220/    1C1C :                     ;***********************************
    2221/    1C1C :                     
    2222/    1C1C :                     ;   .LOCAL
    2223/    1C1C :                     
    2224/    1C1C : =0x2000              TSTBITH =         TSTBIT*256
    2225/    1C1C : =0x8000              CALBITH =         CALBIT*256
    2226/    1C1C : =0x4000              JMPBITH =         JMPBIT*256
    2227/    1C1C :                     
    2228/    1C1C :                     TSTR     MACRO   FAIL,A,B 
    2229/    1C1C :                              DB      H((FAIL & 0x0FFF) | TSTBITH)
    2230/    1C1C :                              DB      L((FAIL & 0x0FFF) | TSTBITH)
    2231/    1C1C :                              IFB     B
    2232/    1C1C :                                DB    A|0x80 
    2233/    1C1C :                              ELSE
    2234/    1C1C :                                DB    A 
    2235/    1C1C :                                DB    B|0x80
    2236/    1C1C :                              ENDIF
    2237/    1C1C :                              ENDM
    2238/    1C1C :                      
    2239/    1C1C :                     TSTCR    MACRO   FAIL
    2240/    1C1C :                              DB      H(FAIL & 0x0FFF | TSTBITH)
    2241/    1C1C :                              DB      L(FAIL & 0x0FFF | TSTBITH)
    2242/    1C1C :                              DB      0x0D|0x80
    2243/    1C1C :                              ENDM
    2244/    1C1C :                      
    2245/    1C1C :                     TSTV     MACRO   FAIL
    2246/    1C1C :                              DB      H((TSTVAR-1) & 0x1FFF)
    2247/    1C1C :                              DB      L((TSTVAR-1) & 0x1FFF)
    2248/    1C1C :                              DB      H(FAIL)
    2249/    1C1C :                              DB      L(FAIL)
    2250/    1C1C :                              ENDM
    2251/    1C1C :                      
    2252/    1C1C :                     TSTN     MACRO   FAIL
    2253/    1C1C :                              DB      H((TSTNUM-1) & 0x1FFF)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 40 - 07.07.2023 12:00:44


    2254/    1C1C :                              DB      L((TSTNUM-1) & 0x1FFF)
    2255/    1C1C :                              DB      H(FAIL)
    2256/    1C1C :                              DB      L(FAIL)
    2257/    1C1C :                              ENDM
    2258/    1C1C :                      
    2259/    1C1C :                     JUMP     MACRO   ADR
    2260/    1C1C :                              DB      H(ADR & 0x0FFF | JMPBITH)
    2261/    1C1C :                              DB      L(ADR & 0x0FFF | JMPBITH)
    2262/    1C1C :                              ENDM
    2263/    1C1C :                      
    2264/    1C1C :                     CALL     MACRO   ADR
    2265/    1C1C :                              DB      H(ADR & 0x0FFF | CALBITH)
    2266/    1C1C :                              DB      L(ADR & 0x0FFF | CALBITH)
    2267/    1C1C :                              ENDM
    2268/    1C1C :                     
    2269/    1C1C :                     DO       MACRO   ADR
    2270/    1C1C :                              IFNB    ADR 
    2271/    1C1C :                              DB      H(ADR-1)
    2272/    1C1C :                              DB      L(ADR-1)
    2273/    1C1C :                              SHIFT
    2274/    1C1C :                              DO      ALLARGS
    2275/    1C1C :                              ENDIF
    2276/    1C1C :                              ENDM 
    2277/    1C1C :                      
    2278/    1C1C :                     ;*************************************
    2279/    1C1C :                     ;*            I. L. TABLE            *
    2280/    1C1C :                     ;*************************************
    2281/    1C1C :                      
    2282/    1C1C : (MACRO)              START:  DO       NLINE
    2282/    1C1C : =>NOT BLANK                   IFNB    NLINE 
    2282/    1C1C : 12                           DB      H(NLINE-1)
    2282/    1C1D : 0C                           DB      L(NLINE-1)
    2282/    1C1E :                              SHIFT
    2282/    1C1E :  (MACRO-2)                    DO      
    2282/    1C1E : =>BLANK                       IFNB     
    2282/    1C1E :                              DB      H(-1)
    2282/    1C1E :                              DB      L(-1)
    2282/    1C1E :                              SHIFT
    2282/    1C1E :                              DO      
    2282/    1C1E : [2282]                        ENDIF
    2282/    1C1E : [2282]                        ENDIF
    2283/    1C1E : (MACRO)              PROMPT: DO       GETL
    2283/    1C1E : =>NOT BLANK                   IFNB    GETL 
    2283/    1C1E : 17                           DB      H(GETL-1)
    2283/    1C1F : 56                           DB      L(GETL-1)
    2283/    1C20 :                              SHIFT
    2283/    1C20 :  (MACRO-2)                    DO      
    2283/    1C20 : =>BLANK                       IFNB     
    2283/    1C20 :                              DB      H(-1)
    2283/    1C20 :                              DB      L(-1)
    2283/    1C20 :                              SHIFT
    2283/    1C20 :                              DO      
    2283/    1C20 : [2283]                        ENDIF
    2283/    1C20 : [2283]                        ENDIF
    2284/    1C20 : (MACRO)                      TSTCR    PRMPT1
    2284/    1C20 : 2C                           DB      H(PRMPT1 & 0x0FFF | TSTBITH)
    2284/    1C21 : 25                           DB      L(PRMPT1 & 0x0FFF | TSTBITH)
    2284/    1C22 : 8D                           DB      0x0D|0x80
    2285/    1C23 : (MACRO)                      JUMP     PROMPT
    2285/    1C23 : 4C                           DB      H(PROMPT & 0x0FFF | JMPBITH)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 41 - 07.07.2023 12:00:44


    2285/    1C24 : 1E                           DB      L(PROMPT & 0x0FFF | JMPBITH)
    2286/    1C25 : (MACRO)              PRMPT1: TSTN     LIST
    2286/    1C25 : 16                           DB      H((TSTNUM-1) & 0x1FFF)
    2286/    1C26 : AB                           DB      L((TSTNUM-1) & 0x1FFF)
    2286/    1C27 : 1C                           DB      H(LIST)
    2286/    1C28 : 35                           DB      L(LIST)
    2287/    1C29 : (MACRO)                      DO       FNDPGE,XCHGP1,POPAE,FNDLBL,INSRT
    2287/    1C29 : =>NOT BLANK                   IFNB    FNDPGE 
    2287/    1C29 : 1B                           DB      H(FNDPGE-1)
    2287/    1C2A : 97                           DB      L(FNDPGE-1)
    2287/    1C2B :                              SHIFT
    2287/    1C2B :  (MACRO-2)                    DO      XCHGP1,POPAE,FNDLBL,INSRT
    2287/    1C2B : =>NOT BLANK                   IFNB    XCHGP1 
    2287/    1C2B : 16                           DB      H(XCHGP1-1)
    2287/    1C2C : 30                           DB      L(XCHGP1-1)
    2287/    1C2D :                              SHIFT
    2287/    1C2D :   (MACRO-3)                   DO      POPAE,FNDLBL,INSRT
    2287/    1C2D : =>NOT BLANK                   IFNB    POPAE 
    2287/    1C2D : 19                           DB      H(POPAE-1)
    2287/    1C2E : 15                           DB      L(POPAE-1)
    2287/    1C2F :                              SHIFT
    2287/    1C2F :    (MACRO-4)                  DO      FNDLBL,INSRT
    2287/    1C2F : =>NOT BLANK                   IFNB    FNDLBL 
    2287/    1C2F : 1B                           DB      H(FNDLBL-1)
    2287/    1C30 : E1                           DB      L(FNDLBL-1)
    2287/    1C31 :                              SHIFT
    2287/    1C31 :     (MACRO-5)                 DO      INSRT
    2287/    1C31 : =>NOT BLANK                   IFNB    INSRT 
    2287/    1C31 : 18                           DB      H(INSRT-1)
    2287/    1C32 : 23                           DB      L(INSRT-1)
    2287/    1C33 :                              SHIFT
    2287/    1C33 :      (MACRO-6)                DO      
    2287/    1C33 : =>BLANK                       IFNB     
    2287/    1C33 :                              DB      H(-1)
    2287/    1C33 :                              DB      L(-1)
    2287/    1C33 :                              SHIFT
    2287/    1C33 :                              DO      
    2287/    1C33 : [2287]                        ENDIF
    2287/    1C33 : [2287]                        ENDIF
    2287/    1C33 : [2287]                        ENDIF
    2287/    1C33 : [2287]                        ENDIF
    2287/    1C33 : [2287]                        ENDIF
    2287/    1C33 : [2287]                        ENDIF
    2288/    1C33 : (MACRO)                      JUMP     PROMPT
    2288/    1C33 : 4C                           DB      H(PROMPT & 0x0FFF | JMPBITH)
    2288/    1C34 : 1E                           DB      L(PROMPT & 0x0FFF | JMPBITH)
    2289/    1C35 :                     
    2290/    1C35 : (MACRO)              LIST:   TSTR     RUN,"LIS",'T'
    2290/    1C35 : 2C                           DB      H((RUN & 0x0FFF) | TSTBITH)
    2290/    1C36 : 51                           DB      L((RUN & 0x0FFF) | TSTBITH)
    2290/    1C37 : =>NOT BLANK                   IFB     'T'
    2290/    1C37 :                                DB    "LIS"|0x80 
    2290/    1C37 : =>TRUE                        ELSE
    2290/    1C37 : 4C 49 53                       DB    "LIS" 
    2290/    1C3A : D4                             DB    'T'|0x80
    2290/    1C3B : [2290]                        ENDIF
    2291/    1C3B : (MACRO)                      DO       FNDPGE
    2291/    1C3B : =>NOT BLANK                   IFNB    FNDPGE 
    2291/    1C3B : 1B                           DB      H(FNDPGE-1)
    2291/    1C3C : 97                           DB      L(FNDPGE-1)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 42 - 07.07.2023 12:00:44


    2291/    1C3D :                              SHIFT
    2291/    1C3D :  (MACRO-2)                    DO      
    2291/    1C3D : =>BLANK                       IFNB     
    2291/    1C3D :                              DB      H(-1)
    2291/    1C3D :                              DB      L(-1)
    2291/    1C3D :                              SHIFT
    2291/    1C3D :                              DO      
    2291/    1C3D : [2291]                        ENDIF
    2291/    1C3D : [2291]                        ENDIF
    2292/    1C3D : (MACRO)                      TSTN     LIST1
    2292/    1C3D : 16                           DB      H((TSTNUM-1) & 0x1FFF)
    2292/    1C3E : AB                           DB      L((TSTNUM-1) & 0x1FFF)
    2292/    1C3F : 1C                           DB      H(LIST1)
    2292/    1C40 : 47                           DB      L(LIST1)
    2293/    1C41 : (MACRO)                      DO       POPAE,FNDLBL
    2293/    1C41 : =>NOT BLANK                   IFNB    POPAE 
    2293/    1C41 : 19                           DB      H(POPAE-1)
    2293/    1C42 : 15                           DB      L(POPAE-1)
    2293/    1C43 :                              SHIFT
    2293/    1C43 :  (MACRO-2)                    DO      FNDLBL
    2293/    1C43 : =>NOT BLANK                   IFNB    FNDLBL 
    2293/    1C43 : 1B                           DB      H(FNDLBL-1)
    2293/    1C44 : E1                           DB      L(FNDLBL-1)
    2293/    1C45 :                              SHIFT
    2293/    1C45 :   (MACRO-3)                   DO      
    2293/    1C45 : =>BLANK                       IFNB     
    2293/    1C45 :                              DB      H(-1)
    2293/    1C45 :                              DB      L(-1)
    2293/    1C45 :                              SHIFT
    2293/    1C45 :                              DO      
    2293/    1C45 : [2293]                        ENDIF
    2293/    1C45 : [2293]                        ENDIF
    2293/    1C45 : [2293]                        ENDIF
    2294/    1C45 : (MACRO)                      JUMP     LIST2
    2294/    1C45 : 4C                           DB      H(LIST2 & 0x0FFF | JMPBITH)
    2294/    1C46 : 49                           DB      L(LIST2 & 0x0FFF | JMPBITH)
    2295/    1C47 : (MACRO)              LIST1:  DO       CHPAGE
    2295/    1C47 : =>NOT BLANK                   IFNB    CHPAGE 
    2295/    1C47 : 1B                           DB      H(CHPAGE-1)
    2295/    1C48 : BD                           DB      L(CHPAGE-1)
    2295/    1C49 :                              SHIFT
    2295/    1C49 :  (MACRO-2)                    DO      
    2295/    1C49 : =>BLANK                       IFNB     
    2295/    1C49 :                              DB      H(-1)
    2295/    1C49 :                              DB      L(-1)
    2295/    1C49 :                              SHIFT
    2295/    1C49 :                              DO      
    2295/    1C49 : [2295]                        ENDIF
    2295/    1C49 : [2295]                        ENDIF
    2296/    1C49 : (MACRO)              LIST2:  DO       LST
    2296/    1C49 : =>NOT BLANK                   IFNB    LST 
    2296/    1C49 : 12                           DB      H(LST-1)
    2296/    1C4A : D8                           DB      L(LST-1)
    2296/    1C4B :                              SHIFT
    2296/    1C4B :  (MACRO-2)                    DO      
    2296/    1C4B : =>BLANK                       IFNB     
    2296/    1C4B :                              DB      H(-1)
    2296/    1C4B :                              DB      L(-1)
    2296/    1C4B :                              SHIFT
    2296/    1C4B :                              DO      
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 43 - 07.07.2023 12:00:44


    2296/    1C4B : [2296]                        ENDIF
    2296/    1C4B : [2296]                        ENDIF
    2297/    1C4B : (MACRO)              LIST3:  CALL     PRNUM
    2297/    1C4B : 8F                           DB      H(PRNUM & 0x0FFF | CALBITH)
    2297/    1C4C : 2F                           DB      L(PRNUM & 0x0FFF | CALBITH)
    2298/    1C4D : (MACRO)                      DO       LST3
    2298/    1C4D : =>NOT BLANK                   IFNB    LST3 
    2298/    1C4D : 13                           DB      H(LST3-1)
    2298/    1C4E : 05                           DB      L(LST3-1)
    2298/    1C4F :                              SHIFT
    2298/    1C4F :  (MACRO-2)                    DO      
    2298/    1C4F : =>BLANK                       IFNB     
    2298/    1C4F :                              DB      H(-1)
    2298/    1C4F :                              DB      L(-1)
    2298/    1C4F :                              SHIFT
    2298/    1C4F :                              DO      
    2298/    1C4F : [2298]                        ENDIF
    2298/    1C4F : [2298]                        ENDIF
    2299/    1C4F : (MACRO)                      JUMP     START
    2299/    1C4F : 4C                           DB      H(START & 0x0FFF | JMPBITH)
    2299/    1C50 : 1C                           DB      L(START & 0x0FFF | JMPBITH)
    2300/    1C51 :                     
    2301/    1C51 : (MACRO)              RUN:    TSTR     CLR,"RU",'N'
    2301/    1C51 : 2C                           DB      H((CLR & 0x0FFF) | TSTBITH)
    2301/    1C52 : 60                           DB      L((CLR & 0x0FFF) | TSTBITH)
    2301/    1C53 : =>NOT BLANK                   IFB     'N'
    2301/    1C53 :                                DB    "RU"|0x80 
    2301/    1C53 : =>TRUE                        ELSE
    2301/    1C53 : 52 55                          DB    "RU" 
    2301/    1C55 : CE                             DB    'N'|0x80
    2301/    1C56 : [2301]                        ENDIF
    2302/    1C56 : (MACRO)                      DO       DONE
    2302/    1C56 : =>NOT BLANK                   IFNB    DONE 
    2302/    1C56 : 11                           DB      H(DONE-1)
    2302/    1C57 : 2F                           DB      L(DONE-1)
    2302/    1C58 :                              SHIFT
    2302/    1C58 :  (MACRO-2)                    DO      
    2302/    1C58 : =>BLANK                       IFNB     
    2302/    1C58 :                              DB      H(-1)
    2302/    1C58 :                              DB      L(-1)
    2302/    1C58 :                              SHIFT
    2302/    1C58 :                              DO      
    2302/    1C58 : [2302]                        ENDIF
    2302/    1C58 : [2302]                        ENDIF
    2303/    1C58 : (MACRO)              BEGIN:  DO       FNDPGE,CHPAGE,STRT,NXT
    2303/    1C58 : =>NOT BLANK                   IFNB    FNDPGE 
    2303/    1C58 : 1B                           DB      H(FNDPGE-1)
    2303/    1C59 : 97                           DB      L(FNDPGE-1)
    2303/    1C5A :                              SHIFT
    2303/    1C5A :  (MACRO-2)                    DO      CHPAGE,STRT,NXT
    2303/    1C5A : =>NOT BLANK                   IFNB    CHPAGE 
    2303/    1C5A : 1B                           DB      H(CHPAGE-1)
    2303/    1C5B : BD                           DB      L(CHPAGE-1)
    2303/    1C5C :                              SHIFT
    2303/    1C5C :   (MACRO-3)                   DO      STRT,NXT
    2303/    1C5C : =>NOT BLANK                   IFNB    STRT 
    2303/    1C5C : 12                           DB      H(STRT-1)
    2303/    1C5D : BF                           DB      L(STRT-1)
    2303/    1C5E :                              SHIFT
    2303/    1C5E :    (MACRO-4)                  DO      NXT
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 44 - 07.07.2023 12:00:44


    2303/    1C5E : =>NOT BLANK                   IFNB    NXT 
    2303/    1C5E : 12                           DB      H(NXT-1)
    2303/    1C5F : 83                           DB      L(NXT-1)
    2303/    1C60 :                              SHIFT
    2303/    1C60 :     (MACRO-5)                 DO      
    2303/    1C60 : =>BLANK                       IFNB     
    2303/    1C60 :                              DB      H(-1)
    2303/    1C60 :                              DB      L(-1)
    2303/    1C60 :                              SHIFT
    2303/    1C60 :                              DO      
    2303/    1C60 : [2303]                        ENDIF
    2303/    1C60 : [2303]                        ENDIF
    2303/    1C60 : [2303]                        ENDIF
    2303/    1C60 : [2303]                        ENDIF
    2303/    1C60 : [2303]                        ENDIF
    2304/    1C60 :                     
    2305/    1C60 : (MACRO)              CLR:    TSTR     NEW,"CLEA",'R'
    2305/    1C60 : 2C                           DB      H((NEW & 0x0FFF) | TSTBITH)
    2305/    1C61 : 6D                           DB      L((NEW & 0x0FFF) | TSTBITH)
    2305/    1C62 : =>NOT BLANK                   IFB     'R'
    2305/    1C62 :                                DB    "CLEA"|0x80 
    2305/    1C62 : =>TRUE                        ELSE
    2305/    1C62 : 43 4C 45 41                    DB    "CLEA" 
    2305/    1C66 : D2                             DB    'R'|0x80
    2305/    1C67 : [2305]                        ENDIF
    2306/    1C67 : (MACRO)                      DO       DONE,CLEAR,NXT
    2306/    1C67 : =>NOT BLANK                   IFNB    DONE 
    2306/    1C67 : 11                           DB      H(DONE-1)
    2306/    1C68 : 2F                           DB      L(DONE-1)
    2306/    1C69 :                              SHIFT
    2306/    1C69 :  (MACRO-2)                    DO      CLEAR,NXT
    2306/    1C69 : =>NOT BLANK                   IFNB    CLEAR 
    2306/    1C69 : 10                           DB      H(CLEAR-1)
    2306/    1C6A : 50                           DB      L(CLEAR-1)
    2306/    1C6B :                              SHIFT
    2306/    1C6B :   (MACRO-3)                   DO      NXT
    2306/    1C6B : =>NOT BLANK                   IFNB    NXT 
    2306/    1C6B : 12                           DB      H(NXT-1)
    2306/    1C6C : 83                           DB      L(NXT-1)
    2306/    1C6D :                              SHIFT
    2306/    1C6D :    (MACRO-4)                  DO      
    2306/    1C6D : =>BLANK                       IFNB     
    2306/    1C6D :                              DB      H(-1)
    2306/    1C6D :                              DB      L(-1)
    2306/    1C6D :                              SHIFT
    2306/    1C6D :                              DO      
    2306/    1C6D : [2306]                        ENDIF
    2306/    1C6D : [2306]                        ENDIF
    2306/    1C6D : [2306]                        ENDIF
    2306/    1C6D : [2306]                        ENDIF
    2307/    1C6D :                     
    2308/    1C6D : (MACRO)              NEW:    TSTR     STMT,"NE",'W'
    2308/    1C6D : 2C                           DB      H((STMT & 0x0FFF) | TSTBITH)
    2308/    1C6E : 86                           DB      L((STMT & 0x0FFF) | TSTBITH)
    2308/    1C6F : =>NOT BLANK                   IFB     'W'
    2308/    1C6F :                                DB    "NE"|0x80 
    2308/    1C6F : =>TRUE                        ELSE
    2308/    1C6F : 4E 45                          DB    "NE" 
    2308/    1C71 : D7                             DB    'W'|0x80
    2308/    1C72 : [2308]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 45 - 07.07.2023 12:00:44


    2309/    1C72 : (MACRO)                      TSTN     DFAULT
    2309/    1C72 : 16                           DB      H((TSTNUM-1) & 0x1FFF)
    2309/    1C73 : AB                           DB      L((TSTNUM-1) & 0x1FFF)
    2309/    1C74 : 1C                           DB      H(DFAULT)
    2309/    1C75 : 78                           DB      L(DFAULT)
    2310/    1C76 : (MACRO)                      JUMP     NEW1
    2310/    1C76 : 4C                           DB      H(NEW1 & 0x0FFF | JMPBITH)
    2310/    1C77 : 7A                           DB      L(NEW1 & 0x0FFF | JMPBITH)
    2311/    1C78 : (MACRO)              DFAULT: DO       LIT1
    2311/    1C78 : =>NOT BLANK                   IFNB    LIT1 
    2311/    1C78 : 1A                           DB      H(LIT1-1)
    2311/    1C79 : 33                           DB      L(LIT1-1)
    2311/    1C7A :                              SHIFT
    2311/    1C7A :  (MACRO-2)                    DO      
    2311/    1C7A : =>BLANK                       IFNB     
    2311/    1C7A :                              DB      H(-1)
    2311/    1C7A :                              DB      L(-1)
    2311/    1C7A :                              SHIFT
    2311/    1C7A :                              DO      
    2311/    1C7A : [2311]                        ENDIF
    2311/    1C7A : [2311]                        ENDIF
    2312/    1C7A : (MACRO)              NEW1:   DO       DONE,POPAE,NUPAGE,FNDPGE,NEWPGM,NXT
    2312/    1C7A : =>NOT BLANK                   IFNB    DONE 
    2312/    1C7A : 11                           DB      H(DONE-1)
    2312/    1C7B : 2F                           DB      L(DONE-1)
    2312/    1C7C :                              SHIFT
    2312/    1C7C :  (MACRO-2)                    DO      POPAE,NUPAGE,FNDPGE,NEWPGM,NXT
    2312/    1C7C : =>NOT BLANK                   IFNB    POPAE 
    2312/    1C7C : 19                           DB      H(POPAE-1)
    2312/    1C7D : 15                           DB      L(POPAE-1)
    2312/    1C7E :                              SHIFT
    2312/    1C7E :   (MACRO-3)                   DO      NUPAGE,FNDPGE,NEWPGM,NXT
    2312/    1C7E : =>NOT BLANK                   IFNB    NUPAGE 
    2312/    1C7E : 1B                           DB      H(NUPAGE-1)
    2312/    1C7F : 8C                           DB      L(NUPAGE-1)
    2312/    1C80 :                              SHIFT
    2312/    1C80 :    (MACRO-4)                  DO      FNDPGE,NEWPGM,NXT
    2312/    1C80 : =>NOT BLANK                   IFNB    FNDPGE 
    2312/    1C80 : 1B                           DB      H(FNDPGE-1)
    2312/    1C81 : 97                           DB      L(FNDPGE-1)
    2312/    1C82 :                              SHIFT
    2312/    1C82 :     (MACRO-5)                 DO      NEWPGM,NXT
    2312/    1C82 : =>NOT BLANK                   IFNB    NEWPGM 
    2312/    1C82 : 1B                           DB      H(NEWPGM-1)
    2312/    1C83 : D0                           DB      L(NEWPGM-1)
    2312/    1C84 :                              SHIFT
    2312/    1C84 :      (MACRO-6)                DO      NXT
    2312/    1C84 : =>NOT BLANK                   IFNB    NXT 
    2312/    1C84 : 12                           DB      H(NXT-1)
    2312/    1C85 : 83                           DB      L(NXT-1)
    2312/    1C86 :                              SHIFT
    2312/    1C86 :       (MACRO-7)               DO      
    2312/    1C86 : =>BLANK                       IFNB     
    2312/    1C86 :                              DB      H(-1)
    2312/    1C86 :                              DB      L(-1)
    2312/    1C86 :                              SHIFT
    2312/    1C86 :                              DO      
    2312/    1C86 : [2312]                        ENDIF
    2312/    1C86 : [2312]                        ENDIF
    2312/    1C86 : [2312]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 46 - 07.07.2023 12:00:44


    2312/    1C86 : [2312]                        ENDIF
    2312/    1C86 : [2312]                        ENDIF
    2312/    1C86 : [2312]                        ENDIF
    2312/    1C86 : [2312]                        ENDIF
    2313/    1C86 :                     
    2314/    1C86 : (MACRO)              STMT:   TSTR     LET,"LE",'T'
    2314/    1C86 : 2C                           DB      H((LET & 0x0FFF) | TSTBITH)
    2314/    1C87 : 8B                           DB      L((LET & 0x0FFF) | TSTBITH)
    2314/    1C88 : =>NOT BLANK                   IFB     'T'
    2314/    1C88 :                                DB    "LE"|0x80 
    2314/    1C88 : =>TRUE                        ELSE
    2314/    1C88 : 4C 45                          DB    "LE" 
    2314/    1C8A : D4                             DB    'T'|0x80
    2314/    1C8B : [2314]                        ENDIF
    2315/    1C8B : (MACRO)              LET:    TSTV     AT
    2315/    1C8B : 14                           DB      H((TSTVAR-1) & 0x1FFF)
    2315/    1C8C : E0                           DB      L((TSTVAR-1) & 0x1FFF)
    2315/    1C8D : 1C                           DB      H(AT)
    2315/    1C8E : 9A                           DB      L(AT)
    2316/    1C8F : (MACRO)                      TSTR     SYNTAX,'='
    2316/    1C8F : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2316/    1C90 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2316/    1C91 : =>BLANK                       IFB     
    2316/    1C91 : BD                             DB    '='|0x80 
    2316/    1C92 : =>FALSE                       ELSE
    2316/    1C92 :                                DB    '=' 
    2316/    1C92 :                                DB    |0x80
    2316/    1C92 : [2316]                        ENDIF
    2317/    1C92 : (MACRO)                      CALL     RELEXP
    2317/    1C92 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2317/    1C93 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2318/    1C94 : (MACRO)                      DO       STORE,DONE,NXT
    2318/    1C94 : =>NOT BLANK                   IFNB    STORE 
    2318/    1C94 : 14                           DB      H(STORE-1)
    2318/    1C95 : C0                           DB      L(STORE-1)
    2318/    1C96 :                              SHIFT
    2318/    1C96 :  (MACRO-2)                    DO      DONE,NXT
    2318/    1C96 : =>NOT BLANK                   IFNB    DONE 
    2318/    1C96 : 11                           DB      H(DONE-1)
    2318/    1C97 : 2F                           DB      L(DONE-1)
    2318/    1C98 :                              SHIFT
    2318/    1C98 :   (MACRO-3)                   DO      NXT
    2318/    1C98 : =>NOT BLANK                   IFNB    NXT 
    2318/    1C98 : 12                           DB      H(NXT-1)
    2318/    1C99 : 83                           DB      L(NXT-1)
    2318/    1C9A :                              SHIFT
    2318/    1C9A :    (MACRO-4)                  DO      
    2318/    1C9A : =>BLANK                       IFNB     
    2318/    1C9A :                              DB      H(-1)
    2318/    1C9A :                              DB      L(-1)
    2318/    1C9A :                              SHIFT
    2318/    1C9A :                              DO      
    2318/    1C9A : [2318]                        ENDIF
    2318/    1C9A : [2318]                        ENDIF
    2318/    1C9A : [2318]                        ENDIF
    2318/    1C9A : [2318]                        ENDIF
    2319/    1C9A : (MACRO)              AT:     TSTR     IF,'@'
    2319/    1C9A : 2C                           DB      H((IF & 0x0FFF) | TSTBITH)
    2319/    1C9B : AA                           DB      L((IF & 0x0FFF) | TSTBITH)
    2319/    1C9C : =>BLANK                       IFB     
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 47 - 07.07.2023 12:00:44


    2319/    1C9C : C0                             DB    '@'|0x80 
    2319/    1C9D : =>FALSE                       ELSE
    2319/    1C9D :                                DB    '@' 
    2319/    1C9D :                                DB    |0x80
    2319/    1C9D : [2319]                        ENDIF
    2320/    1C9D : (MACRO)                      CALL     FACTOR
    2320/    1C9D : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2320/    1C9E : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
    2321/    1C9F : (MACRO)                      TSTR     SYNTAX,'='
    2321/    1C9F : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2321/    1CA0 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2321/    1CA1 : =>BLANK                       IFB     
    2321/    1CA1 : BD                             DB    '='|0x80 
    2321/    1CA2 : =>FALSE                       ELSE
    2321/    1CA2 :                                DB    '=' 
    2321/    1CA2 :                                DB    |0x80
    2321/    1CA2 : [2321]                        ENDIF
    2322/    1CA2 : (MACRO)                      CALL     RELEXP
    2322/    1CA2 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2322/    1CA3 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2323/    1CA4 : (MACRO)                      DO       MOVE,DONE,NXT
    2323/    1CA4 : =>NOT BLANK                   IFNB    MOVE 
    2323/    1CA4 : 18                           DB      H(MOVE-1)
    2323/    1CA5 : 07                           DB      L(MOVE-1)
    2323/    1CA6 :                              SHIFT
    2323/    1CA6 :  (MACRO-2)                    DO      DONE,NXT
    2323/    1CA6 : =>NOT BLANK                   IFNB    DONE 
    2323/    1CA6 : 11                           DB      H(DONE-1)
    2323/    1CA7 : 2F                           DB      L(DONE-1)
    2323/    1CA8 :                              SHIFT
    2323/    1CA8 :   (MACRO-3)                   DO      NXT
    2323/    1CA8 : =>NOT BLANK                   IFNB    NXT 
    2323/    1CA8 : 12                           DB      H(NXT-1)
    2323/    1CA9 : 83                           DB      L(NXT-1)
    2323/    1CAA :                              SHIFT
    2323/    1CAA :    (MACRO-4)                  DO      
    2323/    1CAA : =>BLANK                       IFNB     
    2323/    1CAA :                              DB      H(-1)
    2323/    1CAA :                              DB      L(-1)
    2323/    1CAA :                              SHIFT
    2323/    1CAA :                              DO      
    2323/    1CAA : [2323]                        ENDIF
    2323/    1CAA : [2323]                        ENDIF
    2323/    1CAA : [2323]                        ENDIF
    2323/    1CAA : [2323]                        ENDIF
    2324/    1CAA :                      
    2325/    1CAA : (MACRO)              IF:     TSTR     UNT,"I",'F'
    2325/    1CAA : 2C                           DB      H((UNT & 0x0FFF) | TSTBITH)
    2325/    1CAB : BC                           DB      L((UNT & 0x0FFF) | TSTBITH)
    2325/    1CAC : =>NOT BLANK                   IFB     'F'
    2325/    1CAC :                                DB    "I"|0x80 
    2325/    1CAC : =>TRUE                        ELSE
    2325/    1CAC : 49                             DB    "I" 
    2325/    1CAD : C6                             DB    'F'|0x80
    2325/    1CAE : [2325]                        ENDIF
    2326/    1CAE : (MACRO)                      CALL     RELEXP
    2326/    1CAE : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2326/    1CAF : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2327/    1CB0 : (MACRO)                      TSTR     IF1,"THE",'N'
    2327/    1CB0 : 2C                           DB      H((IF1 & 0x0FFF) | TSTBITH)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 48 - 07.07.2023 12:00:44


    2327/    1CB1 : B6                           DB      L((IF1 & 0x0FFF) | TSTBITH)
    2327/    1CB2 : =>NOT BLANK                   IFB     'N'
    2327/    1CB2 :                                DB    "THE"|0x80 
    2327/    1CB2 : =>TRUE                        ELSE
    2327/    1CB2 : 54 48 45                       DB    "THE" 
    2327/    1CB5 : CE                             DB    'N'|0x80
    2327/    1CB6 : [2327]                        ENDIF
    2328/    1CB6 : (MACRO)              IF1:    DO       POPAE,CMPR
    2328/    1CB6 : =>NOT BLANK                   IFNB    POPAE 
    2328/    1CB6 : 19                           DB      H(POPAE-1)
    2328/    1CB7 : 15                           DB      L(POPAE-1)
    2328/    1CB8 :                              SHIFT
    2328/    1CB8 :  (MACRO-2)                    DO      CMPR
    2328/    1CB8 : =>NOT BLANK                   IFNB    CMPR 
    2328/    1CB8 : 15                           DB      H(CMPR-1)
    2328/    1CB9 : D0                           DB      L(CMPR-1)
    2328/    1CBA :                              SHIFT
    2328/    1CBA :   (MACRO-3)                   DO      
    2328/    1CBA : =>BLANK                       IFNB     
    2328/    1CBA :                              DB      H(-1)
    2328/    1CBA :                              DB      L(-1)
    2328/    1CBA :                              SHIFT
    2328/    1CBA :                              DO      
    2328/    1CBA : [2328]                        ENDIF
    2328/    1CBA : [2328]                        ENDIF
    2328/    1CBA : [2328]                        ENDIF
    2329/    1CBA : (MACRO)                      JUMP     STMT
    2329/    1CBA : 4C                           DB      H(STMT & 0x0FFF | JMPBITH)
    2329/    1CBB : 86                           DB      L(STMT & 0x0FFF | JMPBITH)
    2330/    1CBC : (MACRO)              UNT:    TSTR     DOSTMT,"UNTI",'L'
    2330/    1CBC : 2C                           DB      H((DOSTMT & 0x0FFF) | TSTBITH)
    2330/    1CBD : D1                           DB      L((DOSTMT & 0x0FFF) | TSTBITH)
    2330/    1CBE : =>NOT BLANK                   IFB     'L'
    2330/    1CBE :                                DB    "UNTI"|0x80 
    2330/    1CBE : =>TRUE                        ELSE
    2330/    1CBE : 55 4E 54 49                    DB    "UNTI" 
    2330/    1CC2 : CC                             DB    'L'|0x80
    2330/    1CC3 : [2330]                        ENDIF
    2331/    1CC3 : (MACRO)                      DO       CKMODE
    2331/    1CC3 : =>NOT BLANK                   IFNB    CKMODE 
    2331/    1CC3 : 16                           DB      H(CKMODE-1)
    2331/    1CC4 : 3B                           DB      L(CKMODE-1)
    2331/    1CC5 :                              SHIFT
    2331/    1CC5 :  (MACRO-2)                    DO      
    2331/    1CC5 : =>BLANK                       IFNB     
    2331/    1CC5 :                              DB      H(-1)
    2331/    1CC5 :                              DB      L(-1)
    2331/    1CC5 :                              SHIFT
    2331/    1CC5 :                              DO      
    2331/    1CC5 : [2331]                        ENDIF
    2331/    1CC5 : [2331]                        ENDIF
    2332/    1CC5 : (MACRO)                      CALL     RELEXP
    2332/    1CC5 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2332/    1CC6 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2333/    1CC7 : (MACRO)                      DO       DONE,POPAE,UNTIL,DETPGE,NXT
    2333/    1CC7 : =>NOT BLANK                   IFNB    DONE 
    2333/    1CC7 : 11                           DB      H(DONE-1)
    2333/    1CC8 : 2F                           DB      L(DONE-1)
    2333/    1CC9 :                              SHIFT
    2333/    1CC9 :  (MACRO-2)                    DO      POPAE,UNTIL,DETPGE,NXT
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 49 - 07.07.2023 12:00:44


    2333/    1CC9 : =>NOT BLANK                   IFNB    POPAE 
    2333/    1CC9 : 19                           DB      H(POPAE-1)
    2333/    1CCA : 15                           DB      L(POPAE-1)
    2333/    1CCB :                              SHIFT
    2333/    1CCB :   (MACRO-3)                   DO      UNTIL,DETPGE,NXT
    2333/    1CCB : =>NOT BLANK                   IFNB    UNTIL 
    2333/    1CCB : 19                           DB      H(UNTIL-1)
    2333/    1CCC : 27                           DB      L(UNTIL-1)
    2333/    1CCD :                              SHIFT
    2333/    1CCD :    (MACRO-4)                  DO      DETPGE,NXT
    2333/    1CCD : =>NOT BLANK                   IFNB    DETPGE 
    2333/    1CCD : 1B                           DB      H(DETPGE-1)
    2333/    1CCE : C4                           DB      L(DETPGE-1)
    2333/    1CCF :                              SHIFT
    2333/    1CCF :     (MACRO-5)                 DO      NXT
    2333/    1CCF : =>NOT BLANK                   IFNB    NXT 
    2333/    1CCF : 12                           DB      H(NXT-1)
    2333/    1CD0 : 83                           DB      L(NXT-1)
    2333/    1CD1 :                              SHIFT
    2333/    1CD1 :      (MACRO-6)                DO      
    2333/    1CD1 : =>BLANK                       IFNB     
    2333/    1CD1 :                              DB      H(-1)
    2333/    1CD1 :                              DB      L(-1)
    2333/    1CD1 :                              SHIFT
    2333/    1CD1 :                              DO      
    2333/    1CD1 : [2333]                        ENDIF
    2333/    1CD1 : [2333]                        ENDIF
    2333/    1CD1 : [2333]                        ENDIF
    2333/    1CD1 : [2333]                        ENDIF
    2333/    1CD1 : [2333]                        ENDIF
    2333/    1CD1 : [2333]                        ENDIF
    2334/    1CD1 :                      
    2335/    1CD1 : (MACRO)              DOSTMT: TSTR     GOTO,"D",'O'
    2335/    1CD1 : 2C                           DB      H((GOTO & 0x0FFF) | TSTBITH)
    2335/    1CD2 : DD                           DB      L((GOTO & 0x0FFF) | TSTBITH)
    2335/    1CD3 : =>NOT BLANK                   IFB     'O'
    2335/    1CD3 :                                DB    "D"|0x80 
    2335/    1CD3 : =>TRUE                        ELSE
    2335/    1CD3 : 44                             DB    "D" 
    2335/    1CD4 : CF                             DB    'O'|0x80
    2335/    1CD5 : [2335]                        ENDIF
    2336/    1CD5 : (MACRO)                      DO       CKMODE,DONE,SAVEDO,NXT
    2336/    1CD5 : =>NOT BLANK                   IFNB    CKMODE 
    2336/    1CD5 : 16                           DB      H(CKMODE-1)
    2336/    1CD6 : 3B                           DB      L(CKMODE-1)
    2336/    1CD7 :                              SHIFT
    2336/    1CD7 :  (MACRO-2)                    DO      DONE,SAVEDO,NXT
    2336/    1CD7 : =>NOT BLANK                   IFNB    DONE 
    2336/    1CD7 : 11                           DB      H(DONE-1)
    2336/    1CD8 : 2F                           DB      L(DONE-1)
    2336/    1CD9 :                              SHIFT
    2336/    1CD9 :   (MACRO-3)                   DO      SAVEDO,NXT
    2336/    1CD9 : =>NOT BLANK                   IFNB    SAVEDO 
    2336/    1CD9 : 19                           DB      H(SAVEDO-1)
    2336/    1CDA : 77                           DB      L(SAVEDO-1)
    2336/    1CDB :                              SHIFT
    2336/    1CDB :    (MACRO-4)                  DO      NXT
    2336/    1CDB : =>NOT BLANK                   IFNB    NXT 
    2336/    1CDB : 12                           DB      H(NXT-1)
    2336/    1CDC : 83                           DB      L(NXT-1)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 50 - 07.07.2023 12:00:44


    2336/    1CDD :                              SHIFT
    2336/    1CDD :     (MACRO-5)                 DO      
    2336/    1CDD : =>BLANK                       IFNB     
    2336/    1CDD :                              DB      H(-1)
    2336/    1CDD :                              DB      L(-1)
    2336/    1CDD :                              SHIFT
    2336/    1CDD :                              DO      
    2336/    1CDD : [2336]                        ENDIF
    2336/    1CDD : [2336]                        ENDIF
    2336/    1CDD : [2336]                        ENDIF
    2336/    1CDD : [2336]                        ENDIF
    2336/    1CDD : [2336]                        ENDIF
    2337/    1CDD : (MACRO)              GOTO:   TSTR     RETURN,"G",'O'
    2337/    1CDD : 2D                           DB      H((RETURN & 0x0FFF) | TSTBITH)
    2337/    1CDE : 00                           DB      L((RETURN & 0x0FFF) | TSTBITH)
    2337/    1CDF : =>NOT BLANK                   IFB     'O'
    2337/    1CDF :                                DB    "G"|0x80 
    2337/    1CDF : =>TRUE                        ELSE
    2337/    1CDF : 47                             DB    "G" 
    2337/    1CE0 : CF                             DB    'O'|0x80
    2337/    1CE1 : [2337]                        ENDIF
    2338/    1CE1 : (MACRO)                      TSTR     GOSUB,"T",'O'
    2338/    1CE1 : 2C                           DB      H((GOSUB & 0x0FFF) | TSTBITH)
    2338/    1CE2 : EB                           DB      L((GOSUB & 0x0FFF) | TSTBITH)
    2338/    1CE3 : =>NOT BLANK                   IFB     'O'
    2338/    1CE3 :                                DB    "T"|0x80 
    2338/    1CE3 : =>TRUE                        ELSE
    2338/    1CE3 : 54                             DB    "T" 
    2338/    1CE4 : CF                             DB    'O'|0x80
    2338/    1CE5 : [2338]                        ENDIF
    2339/    1CE5 : (MACRO)                      CALL     RELEXP
    2339/    1CE5 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2339/    1CE6 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2340/    1CE7 : (MACRO)                      DO       DONE
    2340/    1CE7 : =>NOT BLANK                   IFNB    DONE 
    2340/    1CE7 : 11                           DB      H(DONE-1)
    2340/    1CE8 : 2F                           DB      L(DONE-1)
    2340/    1CE9 :                              SHIFT
    2340/    1CE9 :  (MACRO-2)                    DO      
    2340/    1CE9 : =>BLANK                       IFNB     
    2340/    1CE9 :                              DB      H(-1)
    2340/    1CE9 :                              DB      L(-1)
    2340/    1CE9 :                              SHIFT
    2340/    1CE9 :                              DO      
    2340/    1CE9 : [2340]                        ENDIF
    2340/    1CE9 : [2340]                        ENDIF
    2341/    1CE9 : (MACRO)                      JUMP     GO1
    2341/    1CE9 : 4C                           DB      H(GO1 & 0x0FFF | JMPBITH)
    2341/    1CEA : F6                           DB      L(GO1 & 0x0FFF | JMPBITH)
    2342/    1CEB : (MACRO)              GOSUB:  TSTR     SYNTAX,"SU",'B'
    2342/    1CEB : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2342/    1CEC : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2342/    1CED : =>NOT BLANK                   IFB     'B'
    2342/    1CED :                                DB    "SU"|0x80 
    2342/    1CED : =>TRUE                        ELSE
    2342/    1CED : 53 55                          DB    "SU" 
    2342/    1CEF : C2                             DB    'B'|0x80
    2342/    1CF0 : [2342]                        ENDIF
    2343/    1CF0 : (MACRO)                      CALL     RELEXP
    2343/    1CF0 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 51 - 07.07.2023 12:00:44


    2343/    1CF1 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2344/    1CF2 : (MACRO)                      DO       DONE,SAV
    2344/    1CF2 : =>NOT BLANK                   IFNB    DONE 
    2344/    1CF2 : 11                           DB      H(DONE-1)
    2344/    1CF3 : 2F                           DB      L(DONE-1)
    2344/    1CF4 :                              SHIFT
    2344/    1CF4 :  (MACRO-2)                    DO      SAV
    2344/    1CF4 : =>NOT BLANK                   IFNB    SAV 
    2344/    1CF4 : 11                           DB      H(SAV-1)
    2344/    1CF5 : 09                           DB      L(SAV-1)
    2344/    1CF6 :                              SHIFT
    2344/    1CF6 :   (MACRO-3)                   DO      
    2344/    1CF6 : =>BLANK                       IFNB     
    2344/    1CF6 :                              DB      H(-1)
    2344/    1CF6 :                              DB      L(-1)
    2344/    1CF6 :                              SHIFT
    2344/    1CF6 :                              DO      
    2344/    1CF6 : [2344]                        ENDIF
    2344/    1CF6 : [2344]                        ENDIF
    2344/    1CF6 : [2344]                        ENDIF
    2345/    1CF6 : (MACRO)              GO1:    DO       FNDPGE, POPAE,FNDLBL,XFER,NXT
    2345/    1CF6 : =>NOT BLANK                   IFNB    FNDPGE 
    2345/    1CF6 : 1B                           DB      H(FNDPGE-1)
    2345/    1CF7 : 97                           DB      L(FNDPGE-1)
    2345/    1CF8 :                              SHIFT
    2345/    1CF8 :  (MACRO-2)                    DO      POPAE,FNDLBL,XFER,NXT
    2345/    1CF8 : =>NOT BLANK                   IFNB    POPAE 
    2345/    1CF8 : 19                           DB      H(POPAE-1)
    2345/    1CF9 : 15                           DB      L(POPAE-1)
    2345/    1CFA :                              SHIFT
    2345/    1CFA :   (MACRO-3)                   DO      FNDLBL,XFER,NXT
    2345/    1CFA : =>NOT BLANK                   IFNB    FNDLBL 
    2345/    1CFA : 1B                           DB      H(FNDLBL-1)
    2345/    1CFB : E1                           DB      L(FNDLBL-1)
    2345/    1CFC :                              SHIFT
    2345/    1CFC :    (MACRO-4)                  DO      XFER,NXT
    2345/    1CFC : =>NOT BLANK                   IFNB    XFER 
    2345/    1CFC : 11                           DB      H(XFER-1)
    2345/    1CFD : 68                           DB      L(XFER-1)
    2345/    1CFE :                              SHIFT
    2345/    1CFE :     (MACRO-5)                 DO      NXT
    2345/    1CFE : =>NOT BLANK                   IFNB    NXT 
    2345/    1CFE : 12                           DB      H(NXT-1)
    2345/    1CFF : 83                           DB      L(NXT-1)
    2345/    1D00 :                              SHIFT
    2345/    1D00 :      (MACRO-6)                DO      
    2345/    1D00 : =>BLANK                       IFNB     
    2345/    1D00 :                              DB      H(-1)
    2345/    1D00 :                              DB      L(-1)
    2345/    1D00 :                              SHIFT
    2345/    1D00 :                              DO      
    2345/    1D00 : [2345]                        ENDIF
    2345/    1D00 : [2345]                        ENDIF
    2345/    1D00 : [2345]                        ENDIF
    2345/    1D00 : [2345]                        ENDIF
    2345/    1D00 : [2345]                        ENDIF
    2345/    1D00 : [2345]                        ENDIF
    2346/    1D00 :                      
    2347/    1D00 : (MACRO)              RETURN: TSTR     NEXT,"RETUR",'N'
    2347/    1D00 : 2D                           DB      H((NEXT & 0x0FFF) | TSTBITH)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 52 - 07.07.2023 12:00:44


    2347/    1D01 : 10                           DB      L((NEXT & 0x0FFF) | TSTBITH)
    2347/    1D02 : =>NOT BLANK                   IFB     'N'
    2347/    1D02 :                                DB    "RETUR"|0x80 
    2347/    1D02 : =>TRUE                        ELSE
    2347/    1D02 : 52 45 54 55 52                 DB    "RETUR" 
    2347/    1D07 : CE                             DB    'N'|0x80
    2347/    1D08 : [2347]                        ENDIF
    2348/    1D08 : (MACRO)                      DO       DONE,RSTR,DETPGE,NXT
    2348/    1D08 : =>NOT BLANK                   IFNB    DONE 
    2348/    1D08 : 11                           DB      H(DONE-1)
    2348/    1D09 : 2F                           DB      L(DONE-1)
    2348/    1D0A :                              SHIFT
    2348/    1D0A :  (MACRO-2)                    DO      RSTR,DETPGE,NXT
    2348/    1D0A : =>NOT BLANK                   IFNB    RSTR 
    2348/    1D0A : 11                           DB      H(RSTR-1)
    2348/    1D0B : 42                           DB      L(RSTR-1)
    2348/    1D0C :                              SHIFT
    2348/    1D0C :   (MACRO-3)                   DO      DETPGE,NXT
    2348/    1D0C : =>NOT BLANK                   IFNB    DETPGE 
    2348/    1D0C : 1B                           DB      H(DETPGE-1)
    2348/    1D0D : C4                           DB      L(DETPGE-1)
    2348/    1D0E :                              SHIFT
    2348/    1D0E :    (MACRO-4)                  DO      NXT
    2348/    1D0E : =>NOT BLANK                   IFNB    NXT 
    2348/    1D0E : 12                           DB      H(NXT-1)
    2348/    1D0F : 83                           DB      L(NXT-1)
    2348/    1D10 :                              SHIFT
    2348/    1D10 :     (MACRO-5)                 DO      
    2348/    1D10 : =>BLANK                       IFNB     
    2348/    1D10 :                              DB      H(-1)
    2348/    1D10 :                              DB      L(-1)
    2348/    1D10 :                              SHIFT
    2348/    1D10 :                              DO      
    2348/    1D10 : [2348]                        ENDIF
    2348/    1D10 : [2348]                        ENDIF
    2348/    1D10 : [2348]                        ENDIF
    2348/    1D10 : [2348]                        ENDIF
    2348/    1D10 : [2348]                        ENDIF
    2349/    1D10 :                     
    2350/    1D10 : (MACRO)              NEXT:   TSTR     FOR,"NEX",'T'
    2350/    1D10 : 2D                           DB      H((FOR & 0x0FFF) | TSTBITH)
    2350/    1D11 : 2A                           DB      L((FOR & 0x0FFF) | TSTBITH)
    2350/    1D12 : =>NOT BLANK                   IFB     'T'
    2350/    1D12 :                                DB    "NEX"|0x80 
    2350/    1D12 : =>TRUE                        ELSE
    2350/    1D12 : 4E 45 58                       DB    "NEX" 
    2350/    1D15 : D4                             DB    'T'|0x80
    2350/    1D16 : [2350]                        ENDIF
    2351/    1D16 : (MACRO)                      DO       CKMODE
    2351/    1D16 : =>NOT BLANK                   IFNB    CKMODE 
    2351/    1D16 : 16                           DB      H(CKMODE-1)
    2351/    1D17 : 3B                           DB      L(CKMODE-1)
    2351/    1D18 :                              SHIFT
    2351/    1D18 :  (MACRO-2)                    DO      
    2351/    1D18 : =>BLANK                       IFNB     
    2351/    1D18 :                              DB      H(-1)
    2351/    1D18 :                              DB      L(-1)
    2351/    1D18 :                              SHIFT
    2351/    1D18 :                              DO      
    2351/    1D18 : [2351]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 53 - 07.07.2023 12:00:44


    2351/    1D18 : [2351]                        ENDIF
    2352/    1D18 : (MACRO)                      TSTV     SYNTAX
    2352/    1D18 : 14                           DB      H((TSTVAR-1) & 0x1FFF)
    2352/    1D19 : E0                           DB      L((TSTVAR-1) & 0x1FFF)
    2352/    1D1A : 1E                           DB      H(SYNTAX)
    2352/    1D1B : 2F                           DB      L(SYNTAX)
    2353/    1D1C : (MACRO)                      DO       DONE,NEXTV
    2353/    1D1C : =>NOT BLANK                   IFNB    DONE 
    2353/    1D1C : 11                           DB      H(DONE-1)
    2353/    1D1D : 2F                           DB      L(DONE-1)
    2353/    1D1E :                              SHIFT
    2353/    1D1E :  (MACRO-2)                    DO      NEXTV
    2353/    1D1E : =>NOT BLANK                   IFNB    NEXTV 
    2353/    1D1E : 1A                           DB      H(NEXTV-1)
    2353/    1D1F : 88                           DB      L(NEXTV-1)
    2353/    1D20 :                              SHIFT
    2353/    1D20 :   (MACRO-3)                   DO      
    2353/    1D20 : =>BLANK                       IFNB     
    2353/    1D20 :                              DB      H(-1)
    2353/    1D20 :                              DB      L(-1)
    2353/    1D20 :                              SHIFT
    2353/    1D20 :                              DO      
    2353/    1D20 : [2353]                        ENDIF
    2353/    1D20 : [2353]                        ENDIF
    2353/    1D20 : [2353]                        ENDIF
    2354/    1D20 : (MACRO)                      CALL     GTROP
    2354/    1D20 : 8E                           DB      H(GTROP & 0x0FFF | CALBITH)
    2354/    1D21 : 5F                           DB      L(GTROP & 0x0FFF | CALBITH)
    2355/    1D22 : (MACRO)                      DO       POPAE, NEXTV1,DETPGE,NXT
    2355/    1D22 : =>NOT BLANK                   IFNB    POPAE 
    2355/    1D22 : 19                           DB      H(POPAE-1)
    2355/    1D23 : 15                           DB      L(POPAE-1)
    2355/    1D24 :                              SHIFT
    2355/    1D24 :  (MACRO-2)                    DO      NEXTV1,DETPGE,NXT
    2355/    1D24 : =>NOT BLANK                   IFNB    NEXTV1 
    2355/    1D24 : 1A                           DB      H(NEXTV1-1)
    2355/    1D25 : ED                           DB      L(NEXTV1-1)
    2355/    1D26 :                              SHIFT
    2355/    1D26 :   (MACRO-3)                   DO      DETPGE,NXT
    2355/    1D26 : =>NOT BLANK                   IFNB    DETPGE 
    2355/    1D26 : 1B                           DB      H(DETPGE-1)
    2355/    1D27 : C4                           DB      L(DETPGE-1)
    2355/    1D28 :                              SHIFT
    2355/    1D28 :    (MACRO-4)                  DO      NXT
    2355/    1D28 : =>NOT BLANK                   IFNB    NXT 
    2355/    1D28 : 12                           DB      H(NXT-1)
    2355/    1D29 : 83                           DB      L(NXT-1)
    2355/    1D2A :                              SHIFT
    2355/    1D2A :     (MACRO-5)                 DO      
    2355/    1D2A : =>BLANK                       IFNB     
    2355/    1D2A :                              DB      H(-1)
    2355/    1D2A :                              DB      L(-1)
    2355/    1D2A :                              SHIFT
    2355/    1D2A :                              DO      
    2355/    1D2A : [2355]                        ENDIF
    2355/    1D2A : [2355]                        ENDIF
    2355/    1D2A : [2355]                        ENDIF
    2355/    1D2A : [2355]                        ENDIF
    2355/    1D2A : [2355]                        ENDIF
    2356/    1D2A :                      
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 54 - 07.07.2023 12:00:44


    2357/    1D2A : (MACRO)              FOR:    TSTR     STAT,"FO",'R'
    2357/    1D2A : 2D                           DB      H((STAT & 0x0FFF) | TSTBITH)
    2357/    1D2B : 54                           DB      L((STAT & 0x0FFF) | TSTBITH)
    2357/    1D2C : =>NOT BLANK                   IFB     'R'
    2357/    1D2C :                                DB    "FO"|0x80 
    2357/    1D2C : =>TRUE                        ELSE
    2357/    1D2C : 46 4F                          DB    "FO" 
    2357/    1D2E : D2                             DB    'R'|0x80
    2357/    1D2F : [2357]                        ENDIF
    2358/    1D2F : (MACRO)                      DO       CKMODE
    2358/    1D2F : =>NOT BLANK                   IFNB    CKMODE 
    2358/    1D2F : 16                           DB      H(CKMODE-1)
    2358/    1D30 : 3B                           DB      L(CKMODE-1)
    2358/    1D31 :                              SHIFT
    2358/    1D31 :  (MACRO-2)                    DO      
    2358/    1D31 : =>BLANK                       IFNB     
    2358/    1D31 :                              DB      H(-1)
    2358/    1D31 :                              DB      L(-1)
    2358/    1D31 :                              SHIFT
    2358/    1D31 :                              DO      
    2358/    1D31 : [2358]                        ENDIF
    2358/    1D31 : [2358]                        ENDIF
    2359/    1D31 : (MACRO)                      TSTV     SYNTAX
    2359/    1D31 : 14                           DB      H((TSTVAR-1) & 0x1FFF)
    2359/    1D32 : E0                           DB      L((TSTVAR-1) & 0x1FFF)
    2359/    1D33 : 1E                           DB      H(SYNTAX)
    2359/    1D34 : 2F                           DB      L(SYNTAX)
    2360/    1D35 : (MACRO)                      TSTR     SYNTAX,'='
    2360/    1D35 : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2360/    1D36 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2360/    1D37 : =>BLANK                       IFB     
    2360/    1D37 : BD                             DB    '='|0x80 
    2360/    1D38 : =>FALSE                       ELSE
    2360/    1D38 :                                DB    '=' 
    2360/    1D38 :                                DB    |0x80
    2360/    1D38 : [2360]                        ENDIF
    2361/    1D38 : (MACRO)                      CALL     RELEXP
    2361/    1D38 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2361/    1D39 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2362/    1D3A : (MACRO)                      TSTR     SYNTAX,"T",'O'
    2362/    1D3A : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2362/    1D3B : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2362/    1D3C : =>NOT BLANK                   IFB     'O'
    2362/    1D3C :                                DB    "T"|0x80 
    2362/    1D3C : =>TRUE                        ELSE
    2362/    1D3C : 54                             DB    "T" 
    2362/    1D3D : CF                             DB    'O'|0x80
    2362/    1D3E : [2362]                        ENDIF
    2363/    1D3E : (MACRO)                      CALL     RELEXP
    2363/    1D3E : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2363/    1D3F : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2364/    1D40 : (MACRO)                      TSTR     FOR1,"STE",'P'
    2364/    1D40 : 2D                           DB      H((FOR1 & 0x0FFF) | TSTBITH)
    2364/    1D41 : 4A                           DB      L((FOR1 & 0x0FFF) | TSTBITH)
    2364/    1D42 : =>NOT BLANK                   IFB     'P'
    2364/    1D42 :                                DB    "STE"|0x80 
    2364/    1D42 : =>TRUE                        ELSE
    2364/    1D42 : 53 54 45                       DB    "STE" 
    2364/    1D45 : D0                             DB    'P'|0x80
    2364/    1D46 : [2364]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 55 - 07.07.2023 12:00:44


    2365/    1D46 : (MACRO)                      CALL     RELEXP
    2365/    1D46 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2365/    1D47 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2366/    1D48 : (MACRO)                      JUMP     FOR2
    2366/    1D48 : 4D                           DB      H(FOR2 & 0x0FFF | JMPBITH)
    2366/    1D49 : 4C                           DB      L(FOR2 & 0x0FFF | JMPBITH)
    2367/    1D4A : (MACRO)              FOR1:   DO       LIT1
    2367/    1D4A : =>NOT BLANK                   IFNB    LIT1 
    2367/    1D4A : 1A                           DB      H(LIT1-1)
    2367/    1D4B : 33                           DB      L(LIT1-1)
    2367/    1D4C :                              SHIFT
    2367/    1D4C :  (MACRO-2)                    DO      
    2367/    1D4C : =>BLANK                       IFNB     
    2367/    1D4C :                              DB      H(-1)
    2367/    1D4C :                              DB      L(-1)
    2367/    1D4C :                              SHIFT
    2367/    1D4C :                              DO      
    2367/    1D4C : [2367]                        ENDIF
    2367/    1D4C : [2367]                        ENDIF
    2368/    1D4C : (MACRO)              FOR2:   DO       DONE,SAVFOR,STORE,NXT
    2368/    1D4C : =>NOT BLANK                   IFNB    DONE 
    2368/    1D4C : 11                           DB      H(DONE-1)
    2368/    1D4D : 2F                           DB      L(DONE-1)
    2368/    1D4E :                              SHIFT
    2368/    1D4E :  (MACRO-2)                    DO      SAVFOR,STORE,NXT
    2368/    1D4E : =>NOT BLANK                   IFNB    SAVFOR 
    2368/    1D4E : 1A                           DB      H(SAVFOR-1)
    2368/    1D4F : 45                           DB      L(SAVFOR-1)
    2368/    1D50 :                              SHIFT
    2368/    1D50 :   (MACRO-3)                   DO      STORE,NXT
    2368/    1D50 : =>NOT BLANK                   IFNB    STORE 
    2368/    1D50 : 14                           DB      H(STORE-1)
    2368/    1D51 : C0                           DB      L(STORE-1)
    2368/    1D52 :                              SHIFT
    2368/    1D52 :    (MACRO-4)                  DO      NXT
    2368/    1D52 : =>NOT BLANK                   IFNB    NXT 
    2368/    1D52 : 12                           DB      H(NXT-1)
    2368/    1D53 : 83                           DB      L(NXT-1)
    2368/    1D54 :                              SHIFT
    2368/    1D54 :     (MACRO-5)                 DO      
    2368/    1D54 : =>BLANK                       IFNB     
    2368/    1D54 :                              DB      H(-1)
    2368/    1D54 :                              DB      L(-1)
    2368/    1D54 :                              SHIFT
    2368/    1D54 :                              DO      
    2368/    1D54 : [2368]                        ENDIF
    2368/    1D54 : [2368]                        ENDIF
    2368/    1D54 : [2368]                        ENDIF
    2368/    1D54 : [2368]                        ENDIF
    2368/    1D54 : [2368]                        ENDIF
    2369/    1D54 :                      
    2370/    1D54 : (MACRO)              STAT:   TSTR     PGE,"STA",'T'
    2370/    1D54 : 2D                           DB      H((PGE & 0x0FFF) | TSTBITH)
    2370/    1D55 : 67                           DB      L((PGE & 0x0FFF) | TSTBITH)
    2370/    1D56 : =>NOT BLANK                   IFB     'T'
    2370/    1D56 :                                DB    "STA"|0x80 
    2370/    1D56 : =>TRUE                        ELSE
    2370/    1D56 : 53 54 41                       DB    "STA" 
    2370/    1D59 : D4                             DB    'T'|0x80
    2370/    1D5A : [2370]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 56 - 07.07.2023 12:00:44


    2371/    1D5A : (MACRO)                      TSTR     SYNTAX,'='
    2371/    1D5A : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2371/    1D5B : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2371/    1D5C : =>BLANK                       IFB     
    2371/    1D5C : BD                             DB    '='|0x80 
    2371/    1D5D : =>FALSE                       ELSE
    2371/    1D5D :                                DB    '=' 
    2371/    1D5D :                                DB    |0x80
    2371/    1D5D : [2371]                        ENDIF
    2372/    1D5D : (MACRO)                      CALL     RELEXP
    2372/    1D5D : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2372/    1D5E : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2373/    1D5F : (MACRO)                      DO       POPAE,MOVESR
    2373/    1D5F : =>NOT BLANK                   IFNB    POPAE 
    2373/    1D5F : 19                           DB      H(POPAE-1)
    2373/    1D60 : 15                           DB      L(POPAE-1)
    2373/    1D61 :                              SHIFT
    2373/    1D61 :  (MACRO-2)                    DO      MOVESR
    2373/    1D61 : =>NOT BLANK                   IFNB    MOVESR 
    2373/    1D61 : 19                           DB      H(MOVESR-1)
    2373/    1D62 : 4C                           DB      L(MOVESR-1)
    2373/    1D63 :                              SHIFT
    2373/    1D63 :   (MACRO-3)                   DO      
    2373/    1D63 : =>BLANK                       IFNB     
    2373/    1D63 :                              DB      H(-1)
    2373/    1D63 :                              DB      L(-1)
    2373/    1D63 :                              SHIFT
    2373/    1D63 :                              DO      
    2373/    1D63 : [2373]                        ENDIF
    2373/    1D63 : [2373]                        ENDIF
    2373/    1D63 : [2373]                        ENDIF
    2374/    1D63 : (MACRO)                      DO       DONE,NXT
    2374/    1D63 : =>NOT BLANK                   IFNB    DONE 
    2374/    1D63 : 11                           DB      H(DONE-1)
    2374/    1D64 : 2F                           DB      L(DONE-1)
    2374/    1D65 :                              SHIFT
    2374/    1D65 :  (MACRO-2)                    DO      NXT
    2374/    1D65 : =>NOT BLANK                   IFNB    NXT 
    2374/    1D65 : 12                           DB      H(NXT-1)
    2374/    1D66 : 83                           DB      L(NXT-1)
    2374/    1D67 :                              SHIFT
    2374/    1D67 :   (MACRO-3)                   DO      
    2374/    1D67 : =>BLANK                       IFNB     
    2374/    1D67 :                              DB      H(-1)
    2374/    1D67 :                              DB      L(-1)
    2374/    1D67 :                              SHIFT
    2374/    1D67 :                              DO      
    2374/    1D67 : [2374]                        ENDIF
    2374/    1D67 : [2374]                        ENDIF
    2374/    1D67 : [2374]                        ENDIF
    2375/    1D67 :                      
    2376/    1D67 : (MACRO)              PGE:    TSTR     DOLLAR,"PAG",'E'
    2376/    1D67 : 2D                           DB      H((DOLLAR & 0x0FFF) | TSTBITH)
    2376/    1D68 : 7E                           DB      L((DOLLAR & 0x0FFF) | TSTBITH)
    2376/    1D69 : =>NOT BLANK                   IFB     'E'
    2376/    1D69 :                                DB    "PAG"|0x80 
    2376/    1D69 : =>TRUE                        ELSE
    2376/    1D69 : 50 41 47                       DB    "PAG" 
    2376/    1D6C : C5                             DB    'E'|0x80
    2376/    1D6D : [2376]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 57 - 07.07.2023 12:00:44


    2377/    1D6D : (MACRO)                      TSTR     SYNTAX,'='
    2377/    1D6D : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2377/    1D6E : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2377/    1D6F : =>BLANK                       IFB     
    2377/    1D6F : BD                             DB    '='|0x80 
    2377/    1D70 : =>FALSE                       ELSE
    2377/    1D70 :                                DB    '=' 
    2377/    1D70 :                                DB    |0x80
    2377/    1D70 : [2377]                        ENDIF
    2378/    1D70 : (MACRO)                      CALL     RELEXP
    2378/    1D70 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2378/    1D71 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2379/    1D72 : (MACRO)                      DO       DONE,POPAE,NUPAGE,FNDPGE,CHPAGE,NXT
    2379/    1D72 : =>NOT BLANK                   IFNB    DONE 
    2379/    1D72 : 11                           DB      H(DONE-1)
    2379/    1D73 : 2F                           DB      L(DONE-1)
    2379/    1D74 :                              SHIFT
    2379/    1D74 :  (MACRO-2)                    DO      POPAE,NUPAGE,FNDPGE,CHPAGE,NXT
    2379/    1D74 : =>NOT BLANK                   IFNB    POPAE 
    2379/    1D74 : 19                           DB      H(POPAE-1)
    2379/    1D75 : 15                           DB      L(POPAE-1)
    2379/    1D76 :                              SHIFT
    2379/    1D76 :   (MACRO-3)                   DO      NUPAGE,FNDPGE,CHPAGE,NXT
    2379/    1D76 : =>NOT BLANK                   IFNB    NUPAGE 
    2379/    1D76 : 1B                           DB      H(NUPAGE-1)
    2379/    1D77 : 8C                           DB      L(NUPAGE-1)
    2379/    1D78 :                              SHIFT
    2379/    1D78 :    (MACRO-4)                  DO      FNDPGE,CHPAGE,NXT
    2379/    1D78 : =>NOT BLANK                   IFNB    FNDPGE 
    2379/    1D78 : 1B                           DB      H(FNDPGE-1)
    2379/    1D79 : 97                           DB      L(FNDPGE-1)
    2379/    1D7A :                              SHIFT
    2379/    1D7A :     (MACRO-5)                 DO      CHPAGE,NXT
    2379/    1D7A : =>NOT BLANK                   IFNB    CHPAGE 
    2379/    1D7A : 1B                           DB      H(CHPAGE-1)
    2379/    1D7B : BD                           DB      L(CHPAGE-1)
    2379/    1D7C :                              SHIFT
    2379/    1D7C :      (MACRO-6)                DO      NXT
    2379/    1D7C : =>NOT BLANK                   IFNB    NXT 
    2379/    1D7C : 12                           DB      H(NXT-1)
    2379/    1D7D : 83                           DB      L(NXT-1)
    2379/    1D7E :                              SHIFT
    2379/    1D7E :       (MACRO-7)               DO      
    2379/    1D7E : =>BLANK                       IFNB     
    2379/    1D7E :                              DB      H(-1)
    2379/    1D7E :                              DB      L(-1)
    2379/    1D7E :                              SHIFT
    2379/    1D7E :                              DO      
    2379/    1D7E : [2379]                        ENDIF
    2379/    1D7E : [2379]                        ENDIF
    2379/    1D7E : [2379]                        ENDIF
    2379/    1D7E : [2379]                        ENDIF
    2379/    1D7E : [2379]                        ENDIF
    2379/    1D7E : [2379]                        ENDIF
    2379/    1D7E : [2379]                        ENDIF
    2380/    1D7E :                      
    2381/    1D7E : (MACRO)              DOLLAR: TSTR     PRINT,'$'
    2381/    1D7E : 2D                           DB      H((PRINT & 0x0FFF) | TSTBITH)
    2381/    1D7F : 9E                           DB      L((PRINT & 0x0FFF) | TSTBITH)
    2381/    1D80 : =>BLANK                       IFB     
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 58 - 07.07.2023 12:00:44


    2381/    1D80 : A4                             DB    '$'|0x80 
    2381/    1D81 : =>FALSE                       ELSE
    2381/    1D81 :                                DB    '$' 
    2381/    1D81 :                                DB    |0x80
    2381/    1D81 : [2381]                        ENDIF
    2382/    1D81 : (MACRO)                      CALL     FACTOR
    2382/    1D81 : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2382/    1D82 : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
    2383/    1D83 : (MACRO)                      TSTR     SYNTAX,'='
    2383/    1D83 : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2383/    1D84 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2383/    1D85 : =>BLANK                       IFB     
    2383/    1D85 : BD                             DB    '='|0x80 
    2383/    1D86 : =>FALSE                       ELSE
    2383/    1D86 :                                DB    '=' 
    2383/    1D86 :                                DB    |0x80
    2383/    1D86 : [2383]                        ENDIF
    2384/    1D86 : (MACRO)                      TSTR     DOLR1,'"'
    2384/    1D86 : 2D                           DB      H((DOLR1 & 0x0FFF) | TSTBITH)
    2384/    1D87 : 8F                           DB      L((DOLR1 & 0x0FFF) | TSTBITH)
    2384/    1D88 : =>BLANK                       IFB     
    2384/    1D88 : A2                             DB    '"'|0x80 
    2384/    1D89 : =>FALSE                       ELSE
    2384/    1D89 :                                DB    '"' 
    2384/    1D89 :                                DB    |0x80
    2384/    1D89 : [2384]                        ENDIF
    2385/    1D89 : (MACRO)                      DO       POPAE,PUTSTR
    2385/    1D89 : =>NOT BLANK                   IFNB    POPAE 
    2385/    1D89 : 19                           DB      H(POPAE-1)
    2385/    1D8A : 15                           DB      L(POPAE-1)
    2385/    1D8B :                              SHIFT
    2385/    1D8B :  (MACRO-2)                    DO      PUTSTR
    2385/    1D8B : =>NOT BLANK                   IFNB    PUTSTR 
    2385/    1D8B : 1B                           DB      H(PUTSTR-1)
    2385/    1D8C : 35                           DB      L(PUTSTR-1)
    2385/    1D8D :                              SHIFT
    2385/    1D8D :   (MACRO-3)                   DO      
    2385/    1D8D : =>BLANK                       IFNB     
    2385/    1D8D :                              DB      H(-1)
    2385/    1D8D :                              DB      L(-1)
    2385/    1D8D :                              SHIFT
    2385/    1D8D :                              DO      
    2385/    1D8D : [2385]                        ENDIF
    2385/    1D8D : [2385]                        ENDIF
    2385/    1D8D : [2385]                        ENDIF
    2386/    1D8D : (MACRO)                      JUMP     DOLR2
    2386/    1D8D : 4D                           DB      H(DOLR2 & 0x0FFF | JMPBITH)
    2386/    1D8E : 9A                           DB      L(DOLR2 & 0x0FFF | JMPBITH)
    2387/    1D8F : (MACRO)              DOLR1:  TSTR     SYNTAX,'$'
    2387/    1D8F : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2387/    1D90 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2387/    1D91 : =>BLANK                       IFB     
    2387/    1D91 : A4                             DB    '$'|0x80 
    2387/    1D92 : =>FALSE                       ELSE
    2387/    1D92 :                                DB    '$' 
    2387/    1D92 :                                DB    |0x80
    2387/    1D92 : [2387]                        ENDIF
    2388/    1D92 : (MACRO)                      CALL     FACTOR
    2388/    1D92 : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2388/    1D93 : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 59 - 07.07.2023 12:00:44


    2389/    1D94 : (MACRO)                      DO       XCHGP1,MOVSTR,XCHGP1
    2389/    1D94 : =>NOT BLANK                   IFNB    XCHGP1 
    2389/    1D94 : 16                           DB      H(XCHGP1-1)
    2389/    1D95 : 30                           DB      L(XCHGP1-1)
    2389/    1D96 :                              SHIFT
    2389/    1D96 :  (MACRO-2)                    DO      MOVSTR,XCHGP1
    2389/    1D96 : =>NOT BLANK                   IFNB    MOVSTR 
    2389/    1D96 : 1B                           DB      H(MOVSTR-1)
    2389/    1D97 : 55                           DB      L(MOVSTR-1)
    2389/    1D98 :                              SHIFT
    2389/    1D98 :   (MACRO-3)                   DO      XCHGP1
    2389/    1D98 : =>NOT BLANK                   IFNB    XCHGP1 
    2389/    1D98 : 16                           DB      H(XCHGP1-1)
    2389/    1D99 : 30                           DB      L(XCHGP1-1)
    2389/    1D9A :                              SHIFT
    2389/    1D9A :    (MACRO-4)                  DO      
    2389/    1D9A : =>BLANK                       IFNB     
    2389/    1D9A :                              DB      H(-1)
    2389/    1D9A :                              DB      L(-1)
    2389/    1D9A :                              SHIFT
    2389/    1D9A :                              DO      
    2389/    1D9A : [2389]                        ENDIF
    2389/    1D9A : [2389]                        ENDIF
    2389/    1D9A : [2389]                        ENDIF
    2389/    1D9A : [2389]                        ENDIF
    2390/    1D9A : (MACRO)              DOLR2:  DO       DONE,NXT
    2390/    1D9A : =>NOT BLANK                   IFNB    DONE 
    2390/    1D9A : 11                           DB      H(DONE-1)
    2390/    1D9B : 2F                           DB      L(DONE-1)
    2390/    1D9C :                              SHIFT
    2390/    1D9C :  (MACRO-2)                    DO      NXT
    2390/    1D9C : =>NOT BLANK                   IFNB    NXT 
    2390/    1D9C : 12                           DB      H(NXT-1)
    2390/    1D9D : 83                           DB      L(NXT-1)
    2390/    1D9E :                              SHIFT
    2390/    1D9E :   (MACRO-3)                   DO      
    2390/    1D9E : =>BLANK                       IFNB     
    2390/    1D9E :                              DB      H(-1)
    2390/    1D9E :                              DB      L(-1)
    2390/    1D9E :                              SHIFT
    2390/    1D9E :                              DO      
    2390/    1D9E : [2390]                        ENDIF
    2390/    1D9E : [2390]                        ENDIF
    2390/    1D9E : [2390]                        ENDIF
    2391/    1D9E :                      
    2392/    1D9E : (MACRO)              PRINT:  TSTR     INPUT,"P",'R'
    2392/    1D9E : 2D                           DB      H((INPUT & 0x0FFF) | TSTBITH)
    2392/    1D9F : D1                           DB      L((INPUT & 0x0FFF) | TSTBITH)
    2392/    1DA0 : =>NOT BLANK                   IFB     'R'
    2392/    1DA0 :                                DB    "P"|0x80 
    2392/    1DA0 : =>TRUE                        ELSE
    2392/    1DA0 : 50                             DB    "P" 
    2392/    1DA1 : D2                             DB    'R'|0x80
    2392/    1DA2 : [2392]                        ENDIF
    2393/    1DA2 : (MACRO)                      TSTR     PR1,"IN",'T'
    2393/    1DA2 : 2D                           DB      H((PR1 & 0x0FFF) | TSTBITH)
    2393/    1DA3 : A7                           DB      L((PR1 & 0x0FFF) | TSTBITH)
    2393/    1DA4 : =>NOT BLANK                   IFB     'T'
    2393/    1DA4 :                                DB    "IN"|0x80 
    2393/    1DA4 : =>TRUE                        ELSE
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 60 - 07.07.2023 12:00:44


    2393/    1DA4 : 49 4E                          DB    "IN" 
    2393/    1DA6 : D4                             DB    'T'|0x80
    2393/    1DA7 : [2393]                        ENDIF
    2394/    1DA7 : (MACRO)              PR1:    TSTR     PR2,'"'
    2394/    1DA7 : 2D                           DB      H((PR2 & 0x0FFF) | TSTBITH)
    2394/    1DA8 : AE                           DB      L((PR2 & 0x0FFF) | TSTBITH)
    2394/    1DA9 : =>BLANK                       IFB     
    2394/    1DA9 : A2                             DB    '"'|0x80 
    2394/    1DAA : =>FALSE                       ELSE
    2394/    1DAA :                                DB    '"' 
    2394/    1DAA :                                DB    |0x80
    2394/    1DAA : [2394]                        ENDIF
    2395/    1DAA : (MACRO)                      DO       PRS
    2395/    1DAA : =>NOT BLANK                   IFNB    PRS 
    2395/    1DAA : 11                           DB      H(PRS-1)
    2395/    1DAB : 75                           DB      L(PRS-1)
    2395/    1DAC :                              SHIFT
    2395/    1DAC :  (MACRO-2)                    DO      
    2395/    1DAC : =>BLANK                       IFNB     
    2395/    1DAC :                              DB      H(-1)
    2395/    1DAC :                              DB      L(-1)
    2395/    1DAC :                              SHIFT
    2395/    1DAC :                              DO      
    2395/    1DAC : [2395]                        ENDIF
    2395/    1DAC : [2395]                        ENDIF
    2396/    1DAC : (MACRO)                      JUMP     COMMA
    2396/    1DAC : 4D                           DB      H(COMMA & 0x0FFF | JMPBITH)
    2396/    1DAD : C1                           DB      L(COMMA & 0x0FFF | JMPBITH)
    2397/    1DAE : (MACRO)              PR2:    TSTR     PR3,'$'
    2397/    1DAE : 2D                           DB      H((PR3 & 0x0FFF) | TSTBITH)
    2397/    1DAF : BD                           DB      L((PR3 & 0x0FFF) | TSTBITH)
    2397/    1DB0 : =>BLANK                       IFB     
    2397/    1DB0 : A4                             DB    '$'|0x80 
    2397/    1DB1 : =>FALSE                       ELSE
    2397/    1DB1 :                                DB    '$' 
    2397/    1DB1 :                                DB    |0x80
    2397/    1DB1 : [2397]                        ENDIF
    2398/    1DB1 : (MACRO)                      CALL     FACTOR
    2398/    1DB1 : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2398/    1DB2 : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
    2399/    1DB3 : (MACRO)                      DO       XCHGP1,POPAE,PSTRNG,XCHGP1
    2399/    1DB3 : =>NOT BLANK                   IFNB    XCHGP1 
    2399/    1DB3 : 16                           DB      H(XCHGP1-1)
    2399/    1DB4 : 30                           DB      L(XCHGP1-1)
    2399/    1DB5 :                              SHIFT
    2399/    1DB5 :  (MACRO-2)                    DO      POPAE,PSTRNG,XCHGP1
    2399/    1DB5 : =>NOT BLANK                   IFNB    POPAE 
    2399/    1DB5 : 19                           DB      H(POPAE-1)
    2399/    1DB6 : 15                           DB      L(POPAE-1)
    2399/    1DB7 :                              SHIFT
    2399/    1DB7 :   (MACRO-3)                   DO      PSTRNG,XCHGP1
    2399/    1DB7 : =>NOT BLANK                   IFNB    PSTRNG 
    2399/    1DB7 : 1B                           DB      H(PSTRNG-1)
    2399/    1DB8 : 09                           DB      L(PSTRNG-1)
    2399/    1DB9 :                              SHIFT
    2399/    1DB9 :    (MACRO-4)                  DO      XCHGP1
    2399/    1DB9 : =>NOT BLANK                   IFNB    XCHGP1 
    2399/    1DB9 : 16                           DB      H(XCHGP1-1)
    2399/    1DBA : 30                           DB      L(XCHGP1-1)
    2399/    1DBB :                              SHIFT
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 61 - 07.07.2023 12:00:44


    2399/    1DBB :     (MACRO-5)                 DO      
    2399/    1DBB : =>BLANK                       IFNB     
    2399/    1DBB :                              DB      H(-1)
    2399/    1DBB :                              DB      L(-1)
    2399/    1DBB :                              SHIFT
    2399/    1DBB :                              DO      
    2399/    1DBB : [2399]                        ENDIF
    2399/    1DBB : [2399]                        ENDIF
    2399/    1DBB : [2399]                        ENDIF
    2399/    1DBB : [2399]                        ENDIF
    2399/    1DBB : [2399]                        ENDIF
    2400/    1DBB : (MACRO)                      JUMP     COMMA
    2400/    1DBB : 4D                           DB      H(COMMA & 0x0FFF | JMPBITH)
    2400/    1DBC : C1                           DB      L(COMMA & 0x0FFF | JMPBITH)
    2401/    1DBD : (MACRO)              PR3:    CALL     RELEXP
    2401/    1DBD : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2401/    1DBE : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2402/    1DBF : (MACRO)                      CALL     PRNUM
    2402/    1DBF : 8F                           DB      H(PRNUM & 0x0FFF | CALBITH)
    2402/    1DC0 : 2F                           DB      L(PRNUM & 0x0FFF | CALBITH)
    2403/    1DC1 : (MACRO)              COMMA:  TSTR     PR4,','
    2403/    1DC1 : 2D                           DB      H((PR4 & 0x0FFF) | TSTBITH)
    2403/    1DC2 : C6                           DB      L((PR4 & 0x0FFF) | TSTBITH)
    2403/    1DC3 : =>BLANK                       IFB     
    2403/    1DC3 : AC                             DB    ','|0x80 
    2403/    1DC4 : =>FALSE                       ELSE
    2403/    1DC4 :                                DB    ',' 
    2403/    1DC4 :                                DB    |0x80
    2403/    1DC4 : [2403]                        ENDIF
    2404/    1DC4 : (MACRO)                      JUMP     PR1
    2404/    1DC4 : 4D                           DB      H(PR1 & 0x0FFF | JMPBITH)
    2404/    1DC5 : A7                           DB      L(PR1 & 0x0FFF | JMPBITH)
    2405/    1DC6 : (MACRO)              PR4:    TSTR     PR5,';'
    2405/    1DC6 : 2D                           DB      H((PR5 & 0x0FFF) | TSTBITH)
    2405/    1DC7 : CB                           DB      L((PR5 & 0x0FFF) | TSTBITH)
    2405/    1DC8 : =>BLANK                       IFB     
    2405/    1DC8 : BB                             DB    ';'|0x80 
    2405/    1DC9 : =>FALSE                       ELSE
    2405/    1DC9 :                                DB    ';' 
    2405/    1DC9 :                                DB    |0x80
    2405/    1DC9 : [2405]                        ENDIF
    2406/    1DC9 : (MACRO)                      JUMP     PR6
    2406/    1DC9 : 4D                           DB      H(PR6 & 0x0FFF | JMPBITH)
    2406/    1DCA : CD                           DB      L(PR6 & 0x0FFF | JMPBITH)
    2407/    1DCB : (MACRO)              PR5:    DO       NLINE
    2407/    1DCB : =>NOT BLANK                   IFNB    NLINE 
    2407/    1DCB : 12                           DB      H(NLINE-1)
    2407/    1DCC : 0C                           DB      L(NLINE-1)
    2407/    1DCD :                              SHIFT
    2407/    1DCD :  (MACRO-2)                    DO      
    2407/    1DCD : =>BLANK                       IFNB     
    2407/    1DCD :                              DB      H(-1)
    2407/    1DCD :                              DB      L(-1)
    2407/    1DCD :                              SHIFT
    2407/    1DCD :                              DO      
    2407/    1DCD : [2407]                        ENDIF
    2407/    1DCD : [2407]                        ENDIF
    2408/    1DCD : (MACRO)              PR6:    DO       DONE,NXT
    2408/    1DCD : =>NOT BLANK                   IFNB    DONE 
    2408/    1DCD : 11                           DB      H(DONE-1)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 62 - 07.07.2023 12:00:44


    2408/    1DCE : 2F                           DB      L(DONE-1)
    2408/    1DCF :                              SHIFT
    2408/    1DCF :  (MACRO-2)                    DO      NXT
    2408/    1DCF : =>NOT BLANK                   IFNB    NXT 
    2408/    1DCF : 12                           DB      H(NXT-1)
    2408/    1DD0 : 83                           DB      L(NXT-1)
    2408/    1DD1 :                              SHIFT
    2408/    1DD1 :   (MACRO-3)                   DO      
    2408/    1DD1 : =>BLANK                       IFNB     
    2408/    1DD1 :                              DB      H(-1)
    2408/    1DD1 :                              DB      L(-1)
    2408/    1DD1 :                              SHIFT
    2408/    1DD1 :                              DO      
    2408/    1DD1 : [2408]                        ENDIF
    2408/    1DD1 : [2408]                        ENDIF
    2408/    1DD1 : [2408]                        ENDIF
    2409/    1DD1 :                     
    2410/    1DD1 : (MACRO)              INPUT:  TSTR     END,"INPU",'T'
    2410/    1DD1 : 2E                           DB      H((END & 0x0FFF) | TSTBITH)
    2410/    1DD2 : 09                           DB      L((END & 0x0FFF) | TSTBITH)
    2410/    1DD3 : =>NOT BLANK                   IFB     'T'
    2410/    1DD3 :                                DB    "INPU"|0x80 
    2410/    1DD3 : =>TRUE                        ELSE
    2410/    1DD3 : 49 4E 50 55                    DB    "INPU" 
    2410/    1DD7 : D4                             DB    'T'|0x80
    2410/    1DD8 : [2410]                        ENDIF
    2411/    1DD8 : (MACRO)                      DO       CKMODE
    2411/    1DD8 : =>NOT BLANK                   IFNB    CKMODE 
    2411/    1DD8 : 16                           DB      H(CKMODE-1)
    2411/    1DD9 : 3B                           DB      L(CKMODE-1)
    2411/    1DDA :                              SHIFT
    2411/    1DDA :  (MACRO-2)                    DO      
    2411/    1DDA : =>BLANK                       IFNB     
    2411/    1DDA :                              DB      H(-1)
    2411/    1DDA :                              DB      L(-1)
    2411/    1DDA :                              SHIFT
    2411/    1DDA :                              DO      
    2411/    1DDA : [2411]                        ENDIF
    2411/    1DDA : [2411]                        ENDIF
    2412/    1DDA : (MACRO)                      TSTV     IN2
    2412/    1DDA : 14                           DB      H((TSTVAR-1) & 0x1FFF)
    2412/    1DDB : E0                           DB      L((TSTVAR-1) & 0x1FFF)
    2412/    1DDC : 1D                           DB      H(IN2)
    2412/    1DDD : F6                           DB      L(IN2)
    2413/    1DDE : (MACRO)                      DO       XCHGP1,GETL
    2413/    1DDE : =>NOT BLANK                   IFNB    XCHGP1 
    2413/    1DDE : 16                           DB      H(XCHGP1-1)
    2413/    1DDF : 30                           DB      L(XCHGP1-1)
    2413/    1DE0 :                              SHIFT
    2413/    1DE0 :  (MACRO-2)                    DO      GETL
    2413/    1DE0 : =>NOT BLANK                   IFNB    GETL 
    2413/    1DE0 : 17                           DB      H(GETL-1)
    2413/    1DE1 : 56                           DB      L(GETL-1)
    2413/    1DE2 :                              SHIFT
    2413/    1DE2 :   (MACRO-3)                   DO      
    2413/    1DE2 : =>BLANK                       IFNB     
    2413/    1DE2 :                              DB      H(-1)
    2413/    1DE2 :                              DB      L(-1)
    2413/    1DE2 :                              SHIFT
    2413/    1DE2 :                              DO      
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 63 - 07.07.2023 12:00:44


    2413/    1DE2 : [2413]                        ENDIF
    2413/    1DE2 : [2413]                        ENDIF
    2413/    1DE2 : [2413]                        ENDIF
    2414/    1DE2 : (MACRO)              IN1:    CALL     RELEXP
    2414/    1DE2 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2414/    1DE3 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2415/    1DE4 : (MACRO)                      DO       STORE,XCHGP1
    2415/    1DE4 : =>NOT BLANK                   IFNB    STORE 
    2415/    1DE4 : 14                           DB      H(STORE-1)
    2415/    1DE5 : C0                           DB      L(STORE-1)
    2415/    1DE6 :                              SHIFT
    2415/    1DE6 :  (MACRO-2)                    DO      XCHGP1
    2415/    1DE6 : =>NOT BLANK                   IFNB    XCHGP1 
    2415/    1DE6 : 16                           DB      H(XCHGP1-1)
    2415/    1DE7 : 30                           DB      L(XCHGP1-1)
    2415/    1DE8 :                              SHIFT
    2415/    1DE8 :   (MACRO-3)                   DO      
    2415/    1DE8 : =>BLANK                       IFNB     
    2415/    1DE8 :                              DB      H(-1)
    2415/    1DE8 :                              DB      L(-1)
    2415/    1DE8 :                              SHIFT
    2415/    1DE8 :                              DO      
    2415/    1DE8 : [2415]                        ENDIF
    2415/    1DE8 : [2415]                        ENDIF
    2415/    1DE8 : [2415]                        ENDIF
    2416/    1DE8 : (MACRO)                      TSTR     IN3,','
    2416/    1DE8 : 2E                           DB      H((IN3 & 0x0FFF) | TSTBITH)
    2416/    1DE9 : 05                           DB      L((IN3 & 0x0FFF) | TSTBITH)
    2416/    1DEA : =>BLANK                       IFB     
    2416/    1DEA : AC                             DB    ','|0x80 
    2416/    1DEB : =>FALSE                       ELSE
    2416/    1DEB :                                DB    ',' 
    2416/    1DEB :                                DB    |0x80
    2416/    1DEB : [2416]                        ENDIF
    2417/    1DEB : (MACRO)                      TSTV     SYNTAX
    2417/    1DEB : 14                           DB      H((TSTVAR-1) & 0x1FFF)
    2417/    1DEC : E0                           DB      L((TSTVAR-1) & 0x1FFF)
    2417/    1DED : 1E                           DB      H(SYNTAX)
    2417/    1DEE : 2F                           DB      L(SYNTAX)
    2418/    1DEF : (MACRO)                      DO       XCHGP1
    2418/    1DEF : =>NOT BLANK                   IFNB    XCHGP1 
    2418/    1DEF : 16                           DB      H(XCHGP1-1)
    2418/    1DF0 : 30                           DB      L(XCHGP1-1)
    2418/    1DF1 :                              SHIFT
    2418/    1DF1 :  (MACRO-2)                    DO      
    2418/    1DF1 : =>BLANK                       IFNB     
    2418/    1DF1 :                              DB      H(-1)
    2418/    1DF1 :                              DB      L(-1)
    2418/    1DF1 :                              SHIFT
    2418/    1DF1 :                              DO      
    2418/    1DF1 : [2418]                        ENDIF
    2418/    1DF1 : [2418]                        ENDIF
    2419/    1DF1 : (MACRO)                      TSTR     SYNTAX,','
    2419/    1DF1 : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2419/    1DF2 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2419/    1DF3 : =>BLANK                       IFB     
    2419/    1DF3 : AC                             DB    ','|0x80 
    2419/    1DF4 : =>FALSE                       ELSE
    2419/    1DF4 :                                DB    ',' 
    2419/    1DF4 :                                DB    |0x80
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 64 - 07.07.2023 12:00:44


    2419/    1DF4 : [2419]                        ENDIF
    2420/    1DF4 : (MACRO)                      JUMP     IN1
    2420/    1DF4 : 4D                           DB      H(IN1 & 0x0FFF | JMPBITH)
    2420/    1DF5 : E2                           DB      L(IN1 & 0x0FFF | JMPBITH)
    2421/    1DF6 : (MACRO)              IN2:    TSTR     SYNTAX,'$'
    2421/    1DF6 : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2421/    1DF7 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2421/    1DF8 : =>BLANK                       IFB     
    2421/    1DF8 : A4                             DB    '$'|0x80 
    2421/    1DF9 : =>FALSE                       ELSE
    2421/    1DF9 :                                DB    '$' 
    2421/    1DF9 :                                DB    |0x80
    2421/    1DF9 : [2421]                        ENDIF
    2422/    1DF9 : (MACRO)                      CALL     FACTOR
    2422/    1DF9 : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2422/    1DFA : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
    2423/    1DFB : (MACRO)                      DO       XCHGP1,GETL,POPAE,ISTRNG,XCHGP1
    2423/    1DFB : =>NOT BLANK                   IFNB    XCHGP1 
    2423/    1DFB : 16                           DB      H(XCHGP1-1)
    2423/    1DFC : 30                           DB      L(XCHGP1-1)
    2423/    1DFD :                              SHIFT
    2423/    1DFD :  (MACRO-2)                    DO      GETL,POPAE,ISTRNG,XCHGP1
    2423/    1DFD : =>NOT BLANK                   IFNB    GETL 
    2423/    1DFD : 17                           DB      H(GETL-1)
    2423/    1DFE : 56                           DB      L(GETL-1)
    2423/    1DFF :                              SHIFT
    2423/    1DFF :   (MACRO-3)                   DO      POPAE,ISTRNG,XCHGP1
    2423/    1DFF : =>NOT BLANK                   IFNB    POPAE 
    2423/    1DFF : 19                           DB      H(POPAE-1)
    2423/    1E00 : 15                           DB      L(POPAE-1)
    2423/    1E01 :                              SHIFT
    2423/    1E01 :    (MACRO-4)                  DO      ISTRNG,XCHGP1
    2423/    1E01 : =>NOT BLANK                   IFNB    ISTRNG 
    2423/    1E01 : 1B                           DB      H(ISTRNG-1)
    2423/    1E02 : 25                           DB      L(ISTRNG-1)
    2423/    1E03 :                              SHIFT
    2423/    1E03 :     (MACRO-5)                 DO      XCHGP1
    2423/    1E03 : =>NOT BLANK                   IFNB    XCHGP1 
    2423/    1E03 : 16                           DB      H(XCHGP1-1)
    2423/    1E04 : 30                           DB      L(XCHGP1-1)
    2423/    1E05 :                              SHIFT
    2423/    1E05 :      (MACRO-6)                DO      
    2423/    1E05 : =>BLANK                       IFNB     
    2423/    1E05 :                              DB      H(-1)
    2423/    1E05 :                              DB      L(-1)
    2423/    1E05 :                              SHIFT
    2423/    1E05 :                              DO      
    2423/    1E05 : [2423]                        ENDIF
    2423/    1E05 : [2423]                        ENDIF
    2423/    1E05 : [2423]                        ENDIF
    2423/    1E05 : [2423]                        ENDIF
    2423/    1E05 : [2423]                        ENDIF
    2423/    1E05 : [2423]                        ENDIF
    2424/    1E05 : (MACRO)              IN3:    DO       DONE,NXT
    2424/    1E05 : =>NOT BLANK                   IFNB    DONE 
    2424/    1E05 : 11                           DB      H(DONE-1)
    2424/    1E06 : 2F                           DB      L(DONE-1)
    2424/    1E07 :                              SHIFT
    2424/    1E07 :  (MACRO-2)                    DO      NXT
    2424/    1E07 : =>NOT BLANK                   IFNB    NXT 
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 65 - 07.07.2023 12:00:44


    2424/    1E07 : 12                           DB      H(NXT-1)
    2424/    1E08 : 83                           DB      L(NXT-1)
    2424/    1E09 :                              SHIFT
    2424/    1E09 :   (MACRO-3)                   DO      
    2424/    1E09 : =>BLANK                       IFNB     
    2424/    1E09 :                              DB      H(-1)
    2424/    1E09 :                              DB      L(-1)
    2424/    1E09 :                              SHIFT
    2424/    1E09 :                              DO      
    2424/    1E09 : [2424]                        ENDIF
    2424/    1E09 : [2424]                        ENDIF
    2424/    1E09 : [2424]                        ENDIF
    2425/    1E09 :                      
    2426/    1E09 : (MACRO)              END:    TSTR     ML,"EN",'D'
    2426/    1E09 : 2E                           DB      H((ML & 0x0FFF) | TSTBITH)
    2426/    1E0A : 12                           DB      L((ML & 0x0FFF) | TSTBITH)
    2426/    1E0B : =>NOT BLANK                   IFB     'D'
    2426/    1E0B :                                DB    "EN"|0x80 
    2426/    1E0B : =>TRUE                        ELSE
    2426/    1E0B : 45 4E                          DB    "EN" 
    2426/    1E0D : C4                             DB    'D'|0x80
    2426/    1E0E : [2426]                        ENDIF
    2427/    1E0E : (MACRO)                      DO       DONE,BREAK
    2427/    1E0E : =>NOT BLANK                   IFNB    DONE 
    2427/    1E0E : 11                           DB      H(DONE-1)
    2427/    1E0F : 2F                           DB      L(DONE-1)
    2427/    1E10 :                              SHIFT
    2427/    1E10 :  (MACRO-2)                    DO      BREAK
    2427/    1E10 : =>NOT BLANK                   IFNB    BREAK 
    2427/    1E10 : 12                           DB      H(BREAK-1)
    2427/    1E11 : 7F                           DB      L(BREAK-1)
    2427/    1E12 :                              SHIFT
    2427/    1E12 :   (MACRO-3)                   DO      
    2427/    1E12 : =>BLANK                       IFNB     
    2427/    1E12 :                              DB      H(-1)
    2427/    1E12 :                              DB      L(-1)
    2427/    1E12 :                              SHIFT
    2427/    1E12 :                              DO      
    2427/    1E12 : [2427]                        ENDIF
    2427/    1E12 : [2427]                        ENDIF
    2427/    1E12 : [2427]                        ENDIF
    2428/    1E12 :                      
    2429/    1E12 : (MACRO)              ML:     TSTR     REM,"LIN",'K'
    2429/    1E12 : 2E                           DB      H((REM & 0x0FFF) | TSTBITH)
    2429/    1E13 : 26                           DB      L((REM & 0x0FFF) | TSTBITH)
    2429/    1E14 : =>NOT BLANK                   IFB     'K'
    2429/    1E14 :                                DB    "LIN"|0x80 
    2429/    1E14 : =>TRUE                        ELSE
    2429/    1E14 : 4C 49 4E                       DB    "LIN" 
    2429/    1E17 : CB                             DB    'K'|0x80
    2429/    1E18 : [2429]                        ENDIF
    2430/    1E18 : (MACRO)                      CALL     RELEXP
    2430/    1E18 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2430/    1E19 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2431/    1E1A : (MACRO)                      DO       DONE,XCHGP1,POPAE,CALLML,XCHGP1,NXT           
    2431/    1E1A : =>NOT BLANK                   IFNB    DONE 
    2431/    1E1A : 11                           DB      H(DONE-1)
    2431/    1E1B : 2F                           DB      L(DONE-1)
    2431/    1E1C :                              SHIFT
    2431/    1E1C :  (MACRO-2)                    DO      XCHGP1,POPAE,CALLML,XCHGP1,NXT
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 66 - 07.07.2023 12:00:44


    2431/    1E1C : =>NOT BLANK                   IFNB    XCHGP1 
    2431/    1E1C : 16                           DB      H(XCHGP1-1)
    2431/    1E1D : 30                           DB      L(XCHGP1-1)
    2431/    1E1E :                              SHIFT
    2431/    1E1E :   (MACRO-3)                   DO      POPAE,CALLML,XCHGP1,NXT
    2431/    1E1E : =>NOT BLANK                   IFNB    POPAE 
    2431/    1E1E : 19                           DB      H(POPAE-1)
    2431/    1E1F : 15                           DB      L(POPAE-1)
    2431/    1E20 :                              SHIFT
    2431/    1E20 :    (MACRO-4)                  DO      CALLML,XCHGP1,NXT
    2431/    1E20 : =>NOT BLANK                   IFNB    CALLML 
    2431/    1E20 : 19                           DB      H(CALLML-1)
    2431/    1E21 : 66                           DB      L(CALLML-1)
    2431/    1E22 :                              SHIFT
    2431/    1E22 :     (MACRO-5)                 DO      XCHGP1,NXT
    2431/    1E22 : =>NOT BLANK                   IFNB    XCHGP1 
    2431/    1E22 : 16                           DB      H(XCHGP1-1)
    2431/    1E23 : 30                           DB      L(XCHGP1-1)
    2431/    1E24 :                              SHIFT
    2431/    1E24 :      (MACRO-6)                DO      NXT
    2431/    1E24 : =>NOT BLANK                   IFNB    NXT 
    2431/    1E24 : 12                           DB      H(NXT-1)
    2431/    1E25 : 83                           DB      L(NXT-1)
    2431/    1E26 :                              SHIFT
    2431/    1E26 :       (MACRO-7)               DO      
    2431/    1E26 : =>BLANK                       IFNB     
    2431/    1E26 :                              DB      H(-1)
    2431/    1E26 :                              DB      L(-1)
    2431/    1E26 :                              SHIFT
    2431/    1E26 :                              DO      
    2431/    1E26 : [2431]                        ENDIF
    2431/    1E26 : [2431]                        ENDIF
    2431/    1E26 : [2431]                        ENDIF
    2431/    1E26 : [2431]                        ENDIF
    2431/    1E26 : [2431]                        ENDIF
    2431/    1E26 : [2431]                        ENDIF
    2431/    1E26 : [2431]                        ENDIF
    2432/    1E26 :                                                                                   
    2433/    1E26 : (MACRO)              REM:    TSTR     SYNTAX,"RE",'M'
    2433/    1E26 : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2433/    1E27 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2433/    1E28 : =>NOT BLANK                   IFB     'M'
    2433/    1E28 :                                DB    "RE"|0x80 
    2433/    1E28 : =>TRUE                        ELSE
    2433/    1E28 : 52 45                          DB    "RE" 
    2433/    1E2A : CD                             DB    'M'|0x80
    2433/    1E2B : [2433]                        ENDIF
    2434/    1E2B : (MACRO)                      DO       IGNORE,NXT
    2434/    1E2B : =>NOT BLANK                   IFNB    IGNORE 
    2434/    1E2B : 19                           DB      H(IGNORE-1)
    2434/    1E2C : B8                           DB      L(IGNORE-1)
    2434/    1E2D :                              SHIFT
    2434/    1E2D :  (MACRO-2)                    DO      NXT
    2434/    1E2D : =>NOT BLANK                   IFNB    NXT 
    2434/    1E2D : 12                           DB      H(NXT-1)
    2434/    1E2E : 83                           DB      L(NXT-1)
    2434/    1E2F :                              SHIFT
    2434/    1E2F :   (MACRO-3)                   DO      
    2434/    1E2F : =>BLANK                       IFNB     
    2434/    1E2F :                              DB      H(-1)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 67 - 07.07.2023 12:00:44


    2434/    1E2F :                              DB      L(-1)
    2434/    1E2F :                              SHIFT
    2434/    1E2F :                              DO      
    2434/    1E2F : [2434]                        ENDIF
    2434/    1E2F : [2434]                        ENDIF
    2434/    1E2F : [2434]                        ENDIF
    2435/    1E2F : (MACRO)              SYNTAX: DO       ERR
    2435/    1E2F : =>NOT BLANK                   IFNB    ERR 
    2435/    1E2F : 12                           DB      H(ERR-1)
    2435/    1E30 : 1A                           DB      L(ERR-1)
    2435/    1E31 :                              SHIFT
    2435/    1E31 :  (MACRO-2)                    DO      
    2435/    1E31 : =>BLANK                       IFNB     
    2435/    1E31 :                              DB      H(-1)
    2435/    1E31 :                              DB      L(-1)
    2435/    1E31 :                              SHIFT
    2435/    1E31 :                              DO      
    2435/    1E31 : [2435]                        ENDIF
    2435/    1E31 : [2435]                        ENDIF
    2436/    1E31 : (MACRO)              ERRNUM: CALL     PRNUM
    2436/    1E31 : 8F                           DB      H(PRNUM & 0x0FFF | CALBITH)
    2436/    1E32 : 2F                           DB      L(PRNUM & 0x0FFF | CALBITH)
    2437/    1E33 : (MACRO)                      DO       FIN
    2437/    1E33 : =>NOT BLANK                   IFNB    FIN 
    2437/    1E33 : 12                           DB      H(FIN-1)
    2437/    1E34 : A9                           DB      L(FIN-1)
    2437/    1E35 :                              SHIFT
    2437/    1E35 :  (MACRO-2)                    DO      
    2437/    1E35 : =>BLANK                       IFNB     
    2437/    1E35 :                              DB      H(-1)
    2437/    1E35 :                              DB      L(-1)
    2437/    1E35 :                              SHIFT
    2437/    1E35 :                              DO      
    2437/    1E35 : [2437]                        ENDIF
    2437/    1E35 : [2437]                        ENDIF
    2438/    1E35 :                      
    2439/    1E35 :                     ; NOTE: EACH RELATIONAL OPERATOR (EQ, LEQ, ETC.) DOES AN
    2440/    1E35 :                     ; AUTOMATIC 'RTN' (THIS SAVES VALUABLE BYTES!)
    2441/    1E35 :                      
    2442/    1E35 : (MACRO)              RELEXP: CALL     EXPR
    2442/    1E35 : 8E                           DB      H(EXPR & 0x0FFF | CALBITH)
    2442/    1E36 : 61                           DB      L(EXPR & 0x0FFF | CALBITH)
    2443/    1E37 : (MACRO)                      TSTR     REL1,'='
    2443/    1E37 : 2E                           DB      H((REL1 & 0x0FFF) | TSTBITH)
    2443/    1E38 : 3E                           DB      L((REL1 & 0x0FFF) | TSTBITH)
    2443/    1E39 : =>BLANK                       IFB     
    2443/    1E39 : BD                             DB    '='|0x80 
    2443/    1E3A : =>FALSE                       ELSE
    2443/    1E3A :                                DB    '=' 
    2443/    1E3A :                                DB    |0x80
    2443/    1E3A : [2443]                        ENDIF
    2444/    1E3A : (MACRO)                      CALL     EXPR
    2444/    1E3A : 8E                           DB      H(EXPR & 0x0FFF | CALBITH)
    2444/    1E3B : 61                           DB      L(EXPR & 0x0FFF | CALBITH)
    2445/    1E3C : (MACRO)                      DO       EQ
    2445/    1E3C : =>NOT BLANK                   IFNB    EQ 
    2445/    1E3C : 15                           DB      H(EQ-1)
    2445/    1E3D : 43                           DB      L(EQ-1)
    2445/    1E3E :                              SHIFT
    2445/    1E3E :  (MACRO-2)                    DO      
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 68 - 07.07.2023 12:00:44


    2445/    1E3E : =>BLANK                       IFNB     
    2445/    1E3E :                              DB      H(-1)
    2445/    1E3E :                              DB      L(-1)
    2445/    1E3E :                              SHIFT
    2445/    1E3E :                              DO      
    2445/    1E3E : [2445]                        ENDIF
    2445/    1E3E : [2445]                        ENDIF
    2446/    1E3E : (MACRO)              REL1:   TSTR     REL4,'<'
    2446/    1E3E : 2E                           DB      H((REL4 & 0x0FFF) | TSTBITH)
    2446/    1E3F : 53                           DB      L((REL4 & 0x0FFF) | TSTBITH)
    2446/    1E40 : =>BLANK                       IFB     
    2446/    1E40 : BC                             DB    '<'|0x80 
    2446/    1E41 : =>FALSE                       ELSE
    2446/    1E41 :                                DB    '<' 
    2446/    1E41 :                                DB    |0x80
    2446/    1E41 : [2446]                        ENDIF
    2447/    1E41 : (MACRO)                      TSTR     REL2,'='
    2447/    1E41 : 2E                           DB      H((REL2 & 0x0FFF) | TSTBITH)
    2447/    1E42 : 48                           DB      L((REL2 & 0x0FFF) | TSTBITH)
    2447/    1E43 : =>BLANK                       IFB     
    2447/    1E43 : BD                             DB    '='|0x80 
    2447/    1E44 : =>FALSE                       ELSE
    2447/    1E44 :                                DB    '=' 
    2447/    1E44 :                                DB    |0x80
    2447/    1E44 : [2447]                        ENDIF
    2448/    1E44 : (MACRO)                      CALL     EXPR
    2448/    1E44 : 8E                           DB      H(EXPR & 0x0FFF | CALBITH)
    2448/    1E45 : 61                           DB      L(EXPR & 0x0FFF | CALBITH)
    2449/    1E46 : (MACRO)                      DO       LEQ
    2449/    1E46 : =>NOT BLANK                   IFNB    LEQ 
    2449/    1E46 : 15                           DB      H(LEQ-1)
    2449/    1E47 : 4F                           DB      L(LEQ-1)
    2449/    1E48 :                              SHIFT
    2449/    1E48 :  (MACRO-2)                    DO      
    2449/    1E48 : =>BLANK                       IFNB     
    2449/    1E48 :                              DB      H(-1)
    2449/    1E48 :                              DB      L(-1)
    2449/    1E48 :                              SHIFT
    2449/    1E48 :                              DO      
    2449/    1E48 : [2449]                        ENDIF
    2449/    1E48 : [2449]                        ENDIF
    2450/    1E48 : (MACRO)              REL2:   TSTR     REL3,'>'
    2450/    1E48 : 2E                           DB      H((REL3 & 0x0FFF) | TSTBITH)
    2450/    1E49 : 4F                           DB      L((REL3 & 0x0FFF) | TSTBITH)
    2450/    1E4A : =>BLANK                       IFB     
    2450/    1E4A : BE                             DB    '>'|0x80 
    2450/    1E4B : =>FALSE                       ELSE
    2450/    1E4B :                                DB    '>' 
    2450/    1E4B :                                DB    |0x80
    2450/    1E4B : [2450]                        ENDIF
    2451/    1E4B : (MACRO)                      CALL     EXPR
    2451/    1E4B : 8E                           DB      H(EXPR & 0x0FFF | CALBITH)
    2451/    1E4C : 61                           DB      L(EXPR & 0x0FFF | CALBITH)
    2452/    1E4D : (MACRO)                      DO       NEQ
    2452/    1E4D : =>NOT BLANK                   IFNB    NEQ 
    2452/    1E4D : 15                           DB      H(NEQ-1)
    2452/    1E4E : 47                           DB      L(NEQ-1)
    2452/    1E4F :                              SHIFT
    2452/    1E4F :  (MACRO-2)                    DO      
    2452/    1E4F : =>BLANK                       IFNB     
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 69 - 07.07.2023 12:00:44


    2452/    1E4F :                              DB      H(-1)
    2452/    1E4F :                              DB      L(-1)
    2452/    1E4F :                              SHIFT
    2452/    1E4F :                              DO      
    2452/    1E4F : [2452]                        ENDIF
    2452/    1E4F : [2452]                        ENDIF
    2453/    1E4F : (MACRO)              REL3:   CALL     EXPR
    2453/    1E4F : 8E                           DB      H(EXPR & 0x0FFF | CALBITH)
    2453/    1E50 : 61                           DB      L(EXPR & 0x0FFF | CALBITH)
    2454/    1E51 : (MACRO)                      DO       LSS
    2454/    1E51 : =>NOT BLANK                   IFNB    LSS 
    2454/    1E51 : 15                           DB      H(LSS-1)
    2454/    1E52 : 4B                           DB      L(LSS-1)
    2454/    1E53 :                              SHIFT
    2454/    1E53 :  (MACRO-2)                    DO      
    2454/    1E53 : =>BLANK                       IFNB     
    2454/    1E53 :                              DB      H(-1)
    2454/    1E53 :                              DB      L(-1)
    2454/    1E53 :                              SHIFT
    2454/    1E53 :                              DO      
    2454/    1E53 : [2454]                        ENDIF
    2454/    1E53 : [2454]                        ENDIF
    2455/    1E53 : (MACRO)              REL4:   TSTR     RETEXP,'>'
    2455/    1E53 : 2E                           DB      H((RETEXP & 0x0FFF) | TSTBITH)
    2455/    1E54 : 8B                           DB      L((RETEXP & 0x0FFF) | TSTBITH)
    2455/    1E55 : =>BLANK                       IFB     
    2455/    1E55 : BE                             DB    '>'|0x80 
    2455/    1E56 : =>FALSE                       ELSE
    2455/    1E56 :                                DB    '>' 
    2455/    1E56 :                                DB    |0x80
    2455/    1E56 : [2455]                        ENDIF
    2456/    1E56 : (MACRO)                      TSTR     REL5,'='
    2456/    1E56 : 2E                           DB      H((REL5 & 0x0FFF) | TSTBITH)
    2456/    1E57 : 5D                           DB      L((REL5 & 0x0FFF) | TSTBITH)
    2456/    1E58 : =>BLANK                       IFB     
    2456/    1E58 : BD                             DB    '='|0x80 
    2456/    1E59 : =>FALSE                       ELSE
    2456/    1E59 :                                DB    '=' 
    2456/    1E59 :                                DB    |0x80
    2456/    1E59 : [2456]                        ENDIF
    2457/    1E59 : (MACRO)                      CALL     EXPR
    2457/    1E59 : 8E                           DB      H(EXPR & 0x0FFF | CALBITH)
    2457/    1E5A : 61                           DB      L(EXPR & 0x0FFF | CALBITH)
    2458/    1E5B : (MACRO)                      DO       GEQ
    2458/    1E5B : =>NOT BLANK                   IFNB    GEQ 
    2458/    1E5B : 15                           DB      H(GEQ-1)
    2458/    1E5C : 57                           DB      L(GEQ-1)
    2458/    1E5D :                              SHIFT
    2458/    1E5D :  (MACRO-2)                    DO      
    2458/    1E5D : =>BLANK                       IFNB     
    2458/    1E5D :                              DB      H(-1)
    2458/    1E5D :                              DB      L(-1)
    2458/    1E5D :                              SHIFT
    2458/    1E5D :                              DO      
    2458/    1E5D : [2458]                        ENDIF
    2458/    1E5D : [2458]                        ENDIF
    2459/    1E5D : (MACRO)              REL5:   CALL     EXPR
    2459/    1E5D : 8E                           DB      H(EXPR & 0x0FFF | CALBITH)
    2459/    1E5E : 61                           DB      L(EXPR & 0x0FFF | CALBITH)
    2460/    1E5F : (MACRO)              GTROP:  DO       GTR
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 70 - 07.07.2023 12:00:44


    2460/    1E5F : =>NOT BLANK                   IFNB    GTR 
    2460/    1E5F : 15                           DB      H(GTR-1)
    2460/    1E60 : 53                           DB      L(GTR-1)
    2460/    1E61 :                              SHIFT
    2460/    1E61 :  (MACRO-2)                    DO      
    2460/    1E61 : =>BLANK                       IFNB     
    2460/    1E61 :                              DB      H(-1)
    2460/    1E61 :                              DB      L(-1)
    2460/    1E61 :                              SHIFT
    2460/    1E61 :                              DO      
    2460/    1E61 : [2460]                        ENDIF
    2460/    1E61 : [2460]                        ENDIF
    2461/    1E61 :                      
    2462/    1E61 : (MACRO)              EXPR:   TSTR     EX1,'-'
    2462/    1E61 : 2E                           DB      H((EX1 & 0x0FFF) | TSTBITH)
    2462/    1E62 : 6A                           DB      L((EX1 & 0x0FFF) | TSTBITH)
    2462/    1E63 : =>BLANK                       IFB     
    2462/    1E63 : AD                             DB    '-'|0x80 
    2462/    1E64 : =>FALSE                       ELSE
    2462/    1E64 :                                DB    '-' 
    2462/    1E64 :                                DB    |0x80
    2462/    1E64 : [2462]                        ENDIF
    2463/    1E64 : (MACRO)                      CALL     TERM
    2463/    1E64 : 8E                           DB      H(TERM & 0x0FFF | CALBITH)
    2463/    1E65 : 8D                           DB      L(TERM & 0x0FFF | CALBITH)
    2464/    1E66 : (MACRO)                      DO       NEG
    2464/    1E66 : =>NOT BLANK                   IFNB    NEG 
    2464/    1E66 : 13                           DB      H(NEG-1)
    2464/    1E67 : 5A                           DB      L(NEG-1)
    2464/    1E68 :                              SHIFT
    2464/    1E68 :  (MACRO-2)                    DO      
    2464/    1E68 : =>BLANK                       IFNB     
    2464/    1E68 :                              DB      H(-1)
    2464/    1E68 :                              DB      L(-1)
    2464/    1E68 :                              SHIFT
    2464/    1E68 :                              DO      
    2464/    1E68 : [2464]                        ENDIF
    2464/    1E68 : [2464]                        ENDIF
    2465/    1E68 : (MACRO)                      JUMP     EX3
    2465/    1E68 : 4E                           DB      H(EX3 & 0x0FFF | JMPBITH)
    2465/    1E69 : 6F                           DB      L(EX3 & 0x0FFF | JMPBITH)
    2466/    1E6A : (MACRO)              EX1:    TSTR     EX2,'+'
    2466/    1E6A : 2E                           DB      H((EX2 & 0x0FFF) | TSTBITH)
    2466/    1E6B : 6D                           DB      L((EX2 & 0x0FFF) | TSTBITH)
    2466/    1E6C : =>BLANK                       IFB     
    2466/    1E6C : AB                             DB    '+'|0x80 
    2466/    1E6D : =>FALSE                       ELSE
    2466/    1E6D :                                DB    '+' 
    2466/    1E6D :                                DB    |0x80
    2466/    1E6D : [2466]                        ENDIF
    2467/    1E6D : (MACRO)              EX2:    CALL     TERM
    2467/    1E6D : 8E                           DB      H(TERM & 0x0FFF | CALBITH)
    2467/    1E6E : 8D                           DB      L(TERM & 0x0FFF | CALBITH)
    2468/    1E6F : (MACRO)              EX3:    TSTR     EX4,'+'
    2468/    1E6F : 2E                           DB      H((EX4 & 0x0FFF) | TSTBITH)
    2468/    1E70 : 78                           DB      L((EX4 & 0x0FFF) | TSTBITH)
    2468/    1E71 : =>BLANK                       IFB     
    2468/    1E71 : AB                             DB    '+'|0x80 
    2468/    1E72 : =>FALSE                       ELSE
    2468/    1E72 :                                DB    '+' 
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 71 - 07.07.2023 12:00:44


    2468/    1E72 :                                DB    |0x80
    2468/    1E72 : [2468]                        ENDIF
    2469/    1E72 : (MACRO)                      CALL     TERM
    2469/    1E72 : 8E                           DB      H(TERM & 0x0FFF | CALBITH)
    2469/    1E73 : 8D                           DB      L(TERM & 0x0FFF | CALBITH)
    2470/    1E74 : (MACRO)                      DO       ADD
    2470/    1E74 : =>NOT BLANK                   IFNB    ADD 
    2470/    1E74 : 13                           DB      H(ADD-1)
    2470/    1E75 : 2C                           DB      L(ADD-1)
    2470/    1E76 :                              SHIFT
    2470/    1E76 :  (MACRO-2)                    DO      
    2470/    1E76 : =>BLANK                       IFNB     
    2470/    1E76 :                              DB      H(-1)
    2470/    1E76 :                              DB      L(-1)
    2470/    1E76 :                              SHIFT
    2470/    1E76 :                              DO      
    2470/    1E76 : [2470]                        ENDIF
    2470/    1E76 : [2470]                        ENDIF
    2471/    1E76 : (MACRO)                      JUMP     EX3
    2471/    1E76 : 4E                           DB      H(EX3 & 0x0FFF | JMPBITH)
    2471/    1E77 : 6F                           DB      L(EX3 & 0x0FFF | JMPBITH)
    2472/    1E78 : (MACRO)              EX4:    TSTR     EX5,'-'
    2472/    1E78 : 2E                           DB      H((EX5 & 0x0FFF) | TSTBITH)
    2472/    1E79 : 81                           DB      L((EX5 & 0x0FFF) | TSTBITH)
    2472/    1E7A : =>BLANK                       IFB     
    2472/    1E7A : AD                             DB    '-'|0x80 
    2472/    1E7B : =>FALSE                       ELSE
    2472/    1E7B :                                DB    '-' 
    2472/    1E7B :                                DB    |0x80
    2472/    1E7B : [2472]                        ENDIF
    2473/    1E7B : (MACRO)                      CALL     TERM
    2473/    1E7B : 8E                           DB      H(TERM & 0x0FFF | CALBITH)
    2473/    1E7C : 8D                           DB      L(TERM & 0x0FFF | CALBITH)
    2474/    1E7D : (MACRO)                      DO       SUB
    2474/    1E7D : =>NOT BLANK                   IFNB    SUB 
    2474/    1E7D : 13                           DB      H(SUB-1)
    2474/    1E7E : 43                           DB      L(SUB-1)
    2474/    1E7F :                              SHIFT
    2474/    1E7F :  (MACRO-2)                    DO      
    2474/    1E7F : =>BLANK                       IFNB     
    2474/    1E7F :                              DB      H(-1)
    2474/    1E7F :                              DB      L(-1)
    2474/    1E7F :                              SHIFT
    2474/    1E7F :                              DO      
    2474/    1E7F : [2474]                        ENDIF
    2474/    1E7F : [2474]                        ENDIF
    2475/    1E7F : (MACRO)                      JUMP     EX3
    2475/    1E7F : 4E                           DB      H(EX3 & 0x0FFF | JMPBITH)
    2475/    1E80 : 6F                           DB      L(EX3 & 0x0FFF | JMPBITH)
    2476/    1E81 : (MACRO)              EX5:    TSTR     RETEXP,"O",'R'
    2476/    1E81 : 2E                           DB      H((RETEXP & 0x0FFF) | TSTBITH)
    2476/    1E82 : 8B                           DB      L((RETEXP & 0x0FFF) | TSTBITH)
    2476/    1E83 : =>NOT BLANK                   IFB     'R'
    2476/    1E83 :                                DB    "O"|0x80 
    2476/    1E83 : =>TRUE                        ELSE
    2476/    1E83 : 4F                             DB    "O" 
    2476/    1E84 : D2                             DB    'R'|0x80
    2476/    1E85 : [2476]                        ENDIF
    2477/    1E85 : (MACRO)                      CALL     TERM
    2477/    1E85 : 8E                           DB      H(TERM & 0x0FFF | CALBITH)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 72 - 07.07.2023 12:00:44


    2477/    1E86 : 8D                           DB      L(TERM & 0x0FFF | CALBITH)
    2478/    1E87 : (MACRO)                      DO       OROP
    2478/    1E87 : =>NOT BLANK                   IFNB    OROP 
    2478/    1E87 : 15                           DB      H(OROP-1)
    2478/    1E88 : EB                           DB      L(OROP-1)
    2478/    1E89 :                              SHIFT
    2478/    1E89 :  (MACRO-2)                    DO      
    2478/    1E89 : =>BLANK                       IFNB     
    2478/    1E89 :                              DB      H(-1)
    2478/    1E89 :                              DB      L(-1)
    2478/    1E89 :                              SHIFT
    2478/    1E89 :                              DO      
    2478/    1E89 : [2478]                        ENDIF
    2478/    1E89 : [2478]                        ENDIF
    2479/    1E89 : (MACRO)                      JUMP     EX3
    2479/    1E89 : 4E                           DB      H(EX3 & 0x0FFF | JMPBITH)
    2479/    1E8A : 6F                           DB      L(EX3 & 0x0FFF | JMPBITH)
    2480/    1E8B : (MACRO)              RETEXP: DO       RTN
    2480/    1E8B : =>NOT BLANK                   IFNB    RTN 
    2480/    1E8B : 10                           DB      H(RTN-1)
    2480/    1E8C : F5                           DB      L(RTN-1)
    2480/    1E8D :                              SHIFT
    2480/    1E8D :  (MACRO-2)                    DO      
    2480/    1E8D : =>BLANK                       IFNB     
    2480/    1E8D :                              DB      H(-1)
    2480/    1E8D :                              DB      L(-1)
    2480/    1E8D :                              SHIFT
    2480/    1E8D :                              DO      
    2480/    1E8D : [2480]                        ENDIF
    2480/    1E8D : [2480]                        ENDIF
    2481/    1E8D :                      
    2482/    1E8D : (MACRO)              TERM:   CALL     FACTOR
    2482/    1E8D : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2482/    1E8E : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
    2483/    1E8F : (MACRO)              T1:     TSTR     T2,'*'
    2483/    1E8F : 2E                           DB      H((T2 & 0x0FFF) | TSTBITH)
    2483/    1E90 : 98                           DB      L((T2 & 0x0FFF) | TSTBITH)
    2483/    1E91 : =>BLANK                       IFB     
    2483/    1E91 : AA                             DB    '*'|0x80 
    2483/    1E92 : =>FALSE                       ELSE
    2483/    1E92 :                                DB    '*' 
    2483/    1E92 :                                DB    |0x80
    2483/    1E92 : [2483]                        ENDIF
    2484/    1E92 : (MACRO)                      CALL     FACTOR
    2484/    1E92 : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2484/    1E93 : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
    2485/    1E94 : (MACRO)                      DO       MUL
    2485/    1E94 : =>NOT BLANK                   IFNB    MUL 
    2485/    1E94 : 13                           DB      H(MUL-1)
    2485/    1E95 : 71                           DB      L(MUL-1)
    2485/    1E96 :                              SHIFT
    2485/    1E96 :  (MACRO-2)                    DO      
    2485/    1E96 : =>BLANK                       IFNB     
    2485/    1E96 :                              DB      H(-1)
    2485/    1E96 :                              DB      L(-1)
    2485/    1E96 :                              SHIFT
    2485/    1E96 :                              DO      
    2485/    1E96 : [2485]                        ENDIF
    2485/    1E96 : [2485]                        ENDIF
    2486/    1E96 : (MACRO)                      JUMP     T1
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 73 - 07.07.2023 12:00:44


    2486/    1E96 : 4E                           DB      H(T1 & 0x0FFF | JMPBITH)
    2486/    1E97 : 8F                           DB      L(T1 & 0x0FFF | JMPBITH)
    2487/    1E98 : (MACRO)              T2:     TSTR     T3,'/'
    2487/    1E98 : 2E                           DB      H((T3 & 0x0FFF) | TSTBITH)
    2487/    1E99 : A1                           DB      L((T3 & 0x0FFF) | TSTBITH)
    2487/    1E9A : =>BLANK                       IFB     
    2487/    1E9A : AF                             DB    '/'|0x80 
    2487/    1E9B : =>FALSE                       ELSE
    2487/    1E9B :                                DB    '/' 
    2487/    1E9B :                                DB    |0x80
    2487/    1E9B : [2487]                        ENDIF
    2488/    1E9B : (MACRO)                      CALL     FACTOR
    2488/    1E9B : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2488/    1E9C : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
    2489/    1E9D : (MACRO)                      DO       DIV  
    2489/    1E9D : =>NOT BLANK                   IFNB    DIV 
    2489/    1E9D : 14                           DB      H(DIV-1)
    2489/    1E9E : 07                           DB      L(DIV-1)
    2489/    1E9F :                              SHIFT
    2489/    1E9F :  (MACRO-2)                    DO      
    2489/    1E9F : =>BLANK                       IFNB     
    2489/    1E9F :                              DB      H(-1)
    2489/    1E9F :                              DB      L(-1)
    2489/    1E9F :                              SHIFT
    2489/    1E9F :                              DO      
    2489/    1E9F : [2489]                        ENDIF
    2489/    1E9F : [2489]                        ENDIF
    2490/    1E9F : (MACRO)                      JUMP     T1
    2490/    1E9F : 4E                           DB      H(T1 & 0x0FFF | JMPBITH)
    2490/    1EA0 : 8F                           DB      L(T1 & 0x0FFF | JMPBITH)
    2491/    1EA1 : (MACRO)              T3:     TSTR     RETEXP,"AN",'D'
    2491/    1EA1 : 2E                           DB      H((RETEXP & 0x0FFF) | TSTBITH)
    2491/    1EA2 : 8B                           DB      L((RETEXP & 0x0FFF) | TSTBITH)
    2491/    1EA3 : =>NOT BLANK                   IFB     'D'
    2491/    1EA3 :                                DB    "AN"|0x80 
    2491/    1EA3 : =>TRUE                        ELSE
    2491/    1EA3 : 41 4E                          DB    "AN" 
    2491/    1EA5 : C4                             DB    'D'|0x80
    2491/    1EA6 : [2491]                        ENDIF
    2492/    1EA6 : (MACRO)                      CALL     FACTOR
    2492/    1EA6 : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2492/    1EA7 : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
    2493/    1EA8 : (MACRO)                      DO       ANDOP
    2493/    1EA8 : =>NOT BLANK                   IFNB    ANDOP 
    2493/    1EA8 : 15                           DB      H(ANDOP-1)
    2493/    1EA9 : E7                           DB      L(ANDOP-1)
    2493/    1EAA :                              SHIFT
    2493/    1EAA :  (MACRO-2)                    DO      
    2493/    1EAA : =>BLANK                       IFNB     
    2493/    1EAA :                              DB      H(-1)
    2493/    1EAA :                              DB      L(-1)
    2493/    1EAA :                              SHIFT
    2493/    1EAA :                              DO      
    2493/    1EAA : [2493]                        ENDIF
    2493/    1EAA : [2493]                        ENDIF
    2494/    1EAA : (MACRO)                      JUMP     T1
    2494/    1EAA : 4E                           DB      H(T1 & 0x0FFF | JMPBITH)
    2494/    1EAB : 8F                           DB      L(T1 & 0x0FFF | JMPBITH)
    2495/    1EAC :                      
    2496/    1EAC : (MACRO)              FACTOR: TSTV     F1
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 74 - 07.07.2023 12:00:44


    2496/    1EAC : 14                           DB      H((TSTVAR-1) & 0x1FFF)
    2496/    1EAD : E0                           DB      L((TSTVAR-1) & 0x1FFF)
    2496/    1EAE : 1E                           DB      H(F1)
    2496/    1EAF : B4                           DB      L(F1)
    2497/    1EB0 : (MACRO)                      DO       IND,RTN
    2497/    1EB0 : =>NOT BLANK                   IFNB    IND 
    2497/    1EB0 : 15                           DB      H(IND-1)
    2497/    1EB1 : 2B                           DB      L(IND-1)
    2497/    1EB2 :                              SHIFT
    2497/    1EB2 :  (MACRO-2)                    DO      RTN
    2497/    1EB2 : =>NOT BLANK                   IFNB    RTN 
    2497/    1EB2 : 10                           DB      H(RTN-1)
    2497/    1EB3 : F5                           DB      L(RTN-1)
    2497/    1EB4 :                              SHIFT
    2497/    1EB4 :   (MACRO-3)                   DO      
    2497/    1EB4 : =>BLANK                       IFNB     
    2497/    1EB4 :                              DB      H(-1)
    2497/    1EB4 :                              DB      L(-1)
    2497/    1EB4 :                              SHIFT
    2497/    1EB4 :                              DO      
    2497/    1EB4 : [2497]                        ENDIF
    2497/    1EB4 : [2497]                        ENDIF
    2497/    1EB4 : [2497]                        ENDIF
    2498/    1EB4 : (MACRO)              F1:     TSTN     F2
    2498/    1EB4 : 16                           DB      H((TSTNUM-1) & 0x1FFF)
    2498/    1EB5 : AB                           DB      L((TSTNUM-1) & 0x1FFF)
    2498/    1EB6 : 1E                           DB      H(F2)
    2498/    1EB7 : BA                           DB      L(F2)
    2499/    1EB8 : (MACRO)                      DO       RTN
    2499/    1EB8 : =>NOT BLANK                   IFNB    RTN 
    2499/    1EB8 : 10                           DB      H(RTN-1)
    2499/    1EB9 : F5                           DB      L(RTN-1)
    2499/    1EBA :                              SHIFT
    2499/    1EBA :  (MACRO-2)                    DO      
    2499/    1EBA : =>BLANK                       IFNB     
    2499/    1EBA :                              DB      H(-1)
    2499/    1EBA :                              DB      L(-1)
    2499/    1EBA :                              SHIFT
    2499/    1EBA :                              DO      
    2499/    1EBA : [2499]                        ENDIF
    2499/    1EBA : [2499]                        ENDIF
    2500/    1EBA : (MACRO)              F2:     TSTR     F3,'#'
    2500/    1EBA : 2E                           DB      H((F3 & 0x0FFF) | TSTBITH)
    2500/    1EBB : C1                           DB      L((F3 & 0x0FFF) | TSTBITH)
    2500/    1EBC : =>BLANK                       IFB     
    2500/    1EBC : A3                             DB    '#'|0x80 
    2500/    1EBD : =>FALSE                       ELSE
    2500/    1EBD :                                DB    '#' 
    2500/    1EBD :                                DB    |0x80
    2500/    1EBD : [2500]                        ENDIF
    2501/    1EBD : (MACRO)                      DO       HEX,RTN
    2501/    1EBD : =>NOT BLANK                   IFNB    HEX 
    2501/    1EBD : 16                           DB      H(HEX-1)
    2501/    1EBE : 4B                           DB      L(HEX-1)
    2501/    1EBF :                              SHIFT
    2501/    1EBF :  (MACRO-2)                    DO      RTN
    2501/    1EBF : =>NOT BLANK                   IFNB    RTN 
    2501/    1EBF : 10                           DB      H(RTN-1)
    2501/    1EC0 : F5                           DB      L(RTN-1)
    2501/    1EC1 :                              SHIFT
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 75 - 07.07.2023 12:00:44


    2501/    1EC1 :   (MACRO-3)                   DO      
    2501/    1EC1 : =>BLANK                       IFNB     
    2501/    1EC1 :                              DB      H(-1)
    2501/    1EC1 :                              DB      L(-1)
    2501/    1EC1 :                              SHIFT
    2501/    1EC1 :                              DO      
    2501/    1EC1 : [2501]                        ENDIF
    2501/    1EC1 : [2501]                        ENDIF
    2501/    1EC1 : [2501]                        ENDIF
    2502/    1EC1 : (MACRO)              F3:     TSTR     F4,'('
    2502/    1EC1 : 2E                           DB      H((F4 & 0x0FFF) | TSTBITH)
    2502/    1EC2 : CB                           DB      L((F4 & 0x0FFF) | TSTBITH)
    2502/    1EC3 : =>BLANK                       IFB     
    2502/    1EC3 : A8                             DB    '('|0x80 
    2502/    1EC4 : =>FALSE                       ELSE
    2502/    1EC4 :                                DB    '(' 
    2502/    1EC4 :                                DB    |0x80
    2502/    1EC4 : [2502]                        ENDIF
    2503/    1EC4 : (MACRO)                      CALL     RELEXP
    2503/    1EC4 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2503/    1EC5 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2504/    1EC6 : (MACRO)                      TSTR     SYNTAX,')'
    2504/    1EC6 : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2504/    1EC7 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2504/    1EC8 : =>BLANK                       IFB     
    2504/    1EC8 : A9                             DB    ')'|0x80 
    2504/    1EC9 : =>FALSE                       ELSE
    2504/    1EC9 :                                DB    ')' 
    2504/    1EC9 :                                DB    |0x80
    2504/    1EC9 : [2504]                        ENDIF
    2505/    1EC9 : (MACRO)                      DO       RTN
    2505/    1EC9 : =>NOT BLANK                   IFNB    RTN 
    2505/    1EC9 : 10                           DB      H(RTN-1)
    2505/    1ECA : F5                           DB      L(RTN-1)
    2505/    1ECB :                              SHIFT
    2505/    1ECB :  (MACRO-2)                    DO      
    2505/    1ECB : =>BLANK                       IFNB     
    2505/    1ECB :                              DB      H(-1)
    2505/    1ECB :                              DB      L(-1)
    2505/    1ECB :                              SHIFT
    2505/    1ECB :                              DO      
    2505/    1ECB : [2505]                        ENDIF
    2505/    1ECB : [2505]                        ENDIF
    2506/    1ECB : (MACRO)              F4:     TSTR     F5,'@'
    2506/    1ECB : 2E                           DB      H((F5 & 0x0FFF) | TSTBITH)
    2506/    1ECC : D4                           DB      L((F5 & 0x0FFF) | TSTBITH)
    2506/    1ECD : =>BLANK                       IFB     
    2506/    1ECD : C0                             DB    '@'|0x80 
    2506/    1ECE : =>FALSE                       ELSE
    2506/    1ECE :                                DB    '@' 
    2506/    1ECE :                                DB    |0x80
    2506/    1ECE : [2506]                        ENDIF
    2507/    1ECE : (MACRO)                      CALL     FACTOR
    2507/    1ECE : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2507/    1ECF : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
    2508/    1ED0 : (MACRO)                      DO       EVAL,RTN
    2508/    1ED0 : =>NOT BLANK                   IFNB    EVAL 
    2508/    1ED0 : 17                           DB      H(EVAL-1)
    2508/    1ED1 : E9                           DB      L(EVAL-1)
    2508/    1ED2 :                              SHIFT
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 76 - 07.07.2023 12:00:44


    2508/    1ED2 :  (MACRO-2)                    DO      RTN
    2508/    1ED2 : =>NOT BLANK                   IFNB    RTN 
    2508/    1ED2 : 10                           DB      H(RTN-1)
    2508/    1ED3 : F5                           DB      L(RTN-1)
    2508/    1ED4 :                              SHIFT
    2508/    1ED4 :   (MACRO-3)                   DO      
    2508/    1ED4 : =>BLANK                       IFNB     
    2508/    1ED4 :                              DB      H(-1)
    2508/    1ED4 :                              DB      L(-1)
    2508/    1ED4 :                              SHIFT
    2508/    1ED4 :                              DO      
    2508/    1ED4 : [2508]                        ENDIF
    2508/    1ED4 : [2508]                        ENDIF
    2508/    1ED4 : [2508]                        ENDIF
    2509/    1ED4 : (MACRO)              F5:     TSTR     F6,"NO",'T'
    2509/    1ED4 : 2E                           DB      H((F6 & 0x0FFF) | TSTBITH)
    2509/    1ED5 : DF                           DB      L((F6 & 0x0FFF) | TSTBITH)
    2509/    1ED6 : =>NOT BLANK                   IFB     'T'
    2509/    1ED6 :                                DB    "NO"|0x80 
    2509/    1ED6 : =>TRUE                        ELSE
    2509/    1ED6 : 4E 4F                          DB    "NO" 
    2509/    1ED8 : D4                             DB    'T'|0x80
    2509/    1ED9 : [2509]                        ENDIF
    2510/    1ED9 : (MACRO)                      CALL     FACTOR
    2510/    1ED9 : 8E                           DB      H(FACTOR & 0x0FFF | CALBITH)
    2510/    1EDA : AC                           DB      L(FACTOR & 0x0FFF | CALBITH)
    2511/    1EDB : (MACRO)                      DO       NOTOP,RTN
    2511/    1EDB : =>NOT BLANK                   IFNB    NOTOP 
    2511/    1EDB : 15                           DB      H(NOTOP-1)
    2511/    1EDC : EF                           DB      L(NOTOP-1)
    2511/    1EDD :                              SHIFT
    2511/    1EDD :  (MACRO-2)                    DO      RTN
    2511/    1EDD : =>NOT BLANK                   IFNB    RTN 
    2511/    1EDD : 10                           DB      H(RTN-1)
    2511/    1EDE : F5                           DB      L(RTN-1)
    2511/    1EDF :                              SHIFT
    2511/    1EDF :   (MACRO-3)                   DO      
    2511/    1EDF : =>BLANK                       IFNB     
    2511/    1EDF :                              DB      H(-1)
    2511/    1EDF :                              DB      L(-1)
    2511/    1EDF :                              SHIFT
    2511/    1EDF :                              DO      
    2511/    1EDF : [2511]                        ENDIF
    2511/    1EDF : [2511]                        ENDIF
    2511/    1EDF : [2511]                        ENDIF
    2512/    1EDF : (MACRO)              F6:     TSTR     F7,"STA",'T'
    2512/    1EDF : 2E                           DB      H((F7 & 0x0FFF) | TSTBITH)
    2512/    1EE0 : E9                           DB      L((F7 & 0x0FFF) | TSTBITH)
    2512/    1EE1 : =>NOT BLANK                   IFB     'T'
    2512/    1EE1 :                                DB    "STA"|0x80 
    2512/    1EE1 : =>TRUE                        ELSE
    2512/    1EE1 : 53 54 41                       DB    "STA" 
    2512/    1EE4 : D4                             DB    'T'|0x80
    2512/    1EE5 : [2512]                        ENDIF
    2513/    1EE5 : (MACRO)                      DO       STATUS,RTN
    2513/    1EE5 : =>NOT BLANK                   IFNB    STATUS 
    2513/    1EE5 : 19                           DB      H(STATUS-1)
    2513/    1EE6 : 55                           DB      L(STATUS-1)
    2513/    1EE7 :                              SHIFT
    2513/    1EE7 :  (MACRO-2)                    DO      RTN
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 77 - 07.07.2023 12:00:44


    2513/    1EE7 : =>NOT BLANK                   IFNB    RTN 
    2513/    1EE7 : 10                           DB      H(RTN-1)
    2513/    1EE8 : F5                           DB      L(RTN-1)
    2513/    1EE9 :                              SHIFT
    2513/    1EE9 :   (MACRO-3)                   DO      
    2513/    1EE9 : =>BLANK                       IFNB     
    2513/    1EE9 :                              DB      H(-1)
    2513/    1EE9 :                              DB      L(-1)
    2513/    1EE9 :                              SHIFT
    2513/    1EE9 :                              DO      
    2513/    1EE9 : [2513]                        ENDIF
    2513/    1EE9 : [2513]                        ENDIF
    2513/    1EE9 : [2513]                        ENDIF
    2514/    1EE9 : (MACRO)              F7:     TSTR     F8,"TO",'P'
    2514/    1EE9 : 2E                           DB      H((F8 & 0x0FFF) | TSTBITH)
    2514/    1EEA : F4                           DB      L((F8 & 0x0FFF) | TSTBITH)
    2514/    1EEB : =>NOT BLANK                   IFB     'P'
    2514/    1EEB :                                DB    "TO"|0x80 
    2514/    1EEB : =>TRUE                        ELSE
    2514/    1EEB : 54 4F                          DB    "TO" 
    2514/    1EED : D0                             DB    'P'|0x80
    2514/    1EEE : [2514]                        ENDIF
    2515/    1EEE : (MACRO)                      DO       FNDPGE,TOP,RTN
    2515/    1EEE : =>NOT BLANK                   IFNB    FNDPGE 
    2515/    1EEE : 1B                           DB      H(FNDPGE-1)
    2515/    1EEF : 97                           DB      L(FNDPGE-1)
    2515/    1EF0 :                              SHIFT
    2515/    1EF0 :  (MACRO-2)                    DO      TOP,RTN
    2515/    1EF0 : =>NOT BLANK                   IFNB    TOP 
    2515/    1EF0 : 19                           DB      H(TOP-1)
    2515/    1EF1 : 93                           DB      L(TOP-1)
    2515/    1EF2 :                              SHIFT
    2515/    1EF2 :   (MACRO-3)                   DO      RTN
    2515/    1EF2 : =>NOT BLANK                   IFNB    RTN 
    2515/    1EF2 : 10                           DB      H(RTN-1)
    2515/    1EF3 : F5                           DB      L(RTN-1)
    2515/    1EF4 :                              SHIFT
    2515/    1EF4 :    (MACRO-4)                  DO      
    2515/    1EF4 : =>BLANK                       IFNB     
    2515/    1EF4 :                              DB      H(-1)
    2515/    1EF4 :                              DB      L(-1)
    2515/    1EF4 :                              SHIFT
    2515/    1EF4 :                              DO      
    2515/    1EF4 : [2515]                        ENDIF
    2515/    1EF4 : [2515]                        ENDIF
    2515/    1EF4 : [2515]                        ENDIF
    2515/    1EF4 : [2515]                        ENDIF
    2516/    1EF4 : (MACRO)              F8:     TSTR     F9,"MO",'D'
    2516/    1EF4 : 2F                           DB      H((F9 & 0x0FFF) | TSTBITH)
    2516/    1EF5 : 01                           DB      L((F9 & 0x0FFF) | TSTBITH)
    2516/    1EF6 : =>NOT BLANK                   IFB     'D'
    2516/    1EF6 :                                DB    "MO"|0x80 
    2516/    1EF6 : =>TRUE                        ELSE
    2516/    1EF6 : 4D 4F                          DB    "MO" 
    2516/    1EF8 : C4                             DB    'D'|0x80
    2516/    1EF9 : [2516]                        ENDIF
    2517/    1EF9 : (MACRO)                      CALL     DOUBLE
    2517/    1EF9 : 8F                           DB      H(DOUBLE & 0x0FFF | CALBITH)
    2517/    1EFA : 20                           DB      L(DOUBLE & 0x0FFF | CALBITH)
    2518/    1EFB : (MACRO)                      DO       DIV,MODULO,RTN
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 78 - 07.07.2023 12:00:44


    2518/    1EFB : =>NOT BLANK                   IFNB    DIV 
    2518/    1EFB : 14                           DB      H(DIV-1)
    2518/    1EFC : 07                           DB      L(DIV-1)
    2518/    1EFD :                              SHIFT
    2518/    1EFD :  (MACRO-2)                    DO      MODULO,RTN
    2518/    1EFD : =>NOT BLANK                   IFNB    MODULO 
    2518/    1EFD : 19                           DB      H(MODULO-1)
    2518/    1EFE : BF                           DB      L(MODULO-1)
    2518/    1EFF :                              SHIFT
    2518/    1EFF :   (MACRO-3)                   DO      RTN
    2518/    1EFF : =>NOT BLANK                   IFNB    RTN 
    2518/    1EFF : 10                           DB      H(RTN-1)
    2518/    1F00 : F5                           DB      L(RTN-1)
    2518/    1F01 :                              SHIFT
    2518/    1F01 :    (MACRO-4)                  DO      
    2518/    1F01 : =>BLANK                       IFNB     
    2518/    1F01 :                              DB      H(-1)
    2518/    1F01 :                              DB      L(-1)
    2518/    1F01 :                              SHIFT
    2518/    1F01 :                              DO      
    2518/    1F01 : [2518]                        ENDIF
    2518/    1F01 : [2518]                        ENDIF
    2518/    1F01 : [2518]                        ENDIF
    2518/    1F01 : [2518]                        ENDIF
    2519/    1F01 : (MACRO)              F9:     TSTR     F10,"RN",'D'
    2519/    1F01 : 2F                           DB      H((F10 & 0x0FFF) | TSTBITH)
    2519/    1F02 : 16                           DB      L((F10 & 0x0FFF) | TSTBITH)
    2519/    1F03 : =>NOT BLANK                   IFB     'D'
    2519/    1F03 :                                DB    "RN"|0x80 
    2519/    1F03 : =>TRUE                        ELSE
    2519/    1F03 : 52 4E                          DB    "RN" 
    2519/    1F05 : C4                             DB    'D'|0x80
    2519/    1F06 : [2519]                        ENDIF
    2520/    1F06 : (MACRO)                      CALL     DOUBLE
    2520/    1F06 : 8F                           DB      H(DOUBLE & 0x0FFF | CALBITH)
    2520/    1F07 : 20                           DB      L(DOUBLE & 0x0FFF | CALBITH)
    2521/    1F08 : (MACRO)                      DO       RANDOM,SUB,ADD,DIV,MODULO,ADD,RTN
    2521/    1F08 : =>NOT BLANK                   IFNB    RANDOM 
    2521/    1F08 : 19                           DB      H(RANDOM-1)
    2521/    1F09 : D1                           DB      L(RANDOM-1)
    2521/    1F0A :                              SHIFT
    2521/    1F0A :  (MACRO-2)                    DO      SUB,ADD,DIV,MODULO,ADD,RTN
    2521/    1F0A : =>NOT BLANK                   IFNB    SUB 
    2521/    1F0A : 13                           DB      H(SUB-1)
    2521/    1F0B : 43                           DB      L(SUB-1)
    2521/    1F0C :                              SHIFT
    2521/    1F0C :   (MACRO-3)                   DO      ADD,DIV,MODULO,ADD,RTN
    2521/    1F0C : =>NOT BLANK                   IFNB    ADD 
    2521/    1F0C : 13                           DB      H(ADD-1)
    2521/    1F0D : 2C                           DB      L(ADD-1)
    2521/    1F0E :                              SHIFT
    2521/    1F0E :    (MACRO-4)                  DO      DIV,MODULO,ADD,RTN
    2521/    1F0E : =>NOT BLANK                   IFNB    DIV 
    2521/    1F0E : 14                           DB      H(DIV-1)
    2521/    1F0F : 07                           DB      L(DIV-1)
    2521/    1F10 :                              SHIFT
    2521/    1F10 :     (MACRO-5)                 DO      MODULO,ADD,RTN
    2521/    1F10 : =>NOT BLANK                   IFNB    MODULO 
    2521/    1F10 : 19                           DB      H(MODULO-1)
    2521/    1F11 : BF                           DB      L(MODULO-1)
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 79 - 07.07.2023 12:00:44


    2521/    1F12 :                              SHIFT
    2521/    1F12 :      (MACRO-6)                DO      ADD,RTN
    2521/    1F12 : =>NOT BLANK                   IFNB    ADD 
    2521/    1F12 : 13                           DB      H(ADD-1)
    2521/    1F13 : 2C                           DB      L(ADD-1)
    2521/    1F14 :                              SHIFT
    2521/    1F14 :       (MACRO-7)               DO      RTN
    2521/    1F14 : =>NOT BLANK                   IFNB    RTN 
    2521/    1F14 : 10                           DB      H(RTN-1)
    2521/    1F15 : F5                           DB      L(RTN-1)
    2521/    1F16 :                              SHIFT
    2521/    1F16 :        (MACRO-8)              DO      
    2521/    1F16 : =>BLANK                       IFNB     
    2521/    1F16 :                              DB      H(-1)
    2521/    1F16 :                              DB      L(-1)
    2521/    1F16 :                              SHIFT
    2521/    1F16 :                              DO      
    2521/    1F16 : [2521]                        ENDIF
    2521/    1F16 : [2521]                        ENDIF
    2521/    1F16 : [2521]                        ENDIF
    2521/    1F16 : [2521]                        ENDIF
    2521/    1F16 : [2521]                        ENDIF
    2521/    1F16 : [2521]                        ENDIF
    2521/    1F16 : [2521]                        ENDIF
    2521/    1F16 : [2521]                        ENDIF
    2522/    1F16 : (MACRO)              F10:    TSTR     SYNTAX,"PAG",'E'
    2522/    1F16 : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2522/    1F17 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2522/    1F18 : =>NOT BLANK                   IFB     'E'
    2522/    1F18 :                                DB    "PAG"|0x80 
    2522/    1F18 : =>TRUE                        ELSE
    2522/    1F18 : 50 41 47                       DB    "PAG" 
    2522/    1F1B : C5                             DB    'E'|0x80
    2522/    1F1C : [2522]                        ENDIF
    2523/    1F1C : (MACRO)                      DO       PUTPGE,RTN
    2523/    1F1C : =>NOT BLANK                   IFNB    PUTPGE 
    2523/    1F1C : 1B                           DB      H(PUTPGE-1)
    2523/    1F1D : 7A                           DB      L(PUTPGE-1)
    2523/    1F1E :                              SHIFT
    2523/    1F1E :  (MACRO-2)                    DO      RTN
    2523/    1F1E : =>NOT BLANK                   IFNB    RTN 
    2523/    1F1E : 10                           DB      H(RTN-1)
    2523/    1F1F : F5                           DB      L(RTN-1)
    2523/    1F20 :                              SHIFT
    2523/    1F20 :   (MACRO-3)                   DO      
    2523/    1F20 : =>BLANK                       IFNB     
    2523/    1F20 :                              DB      H(-1)
    2523/    1F20 :                              DB      L(-1)
    2523/    1F20 :                              SHIFT
    2523/    1F20 :                              DO      
    2523/    1F20 : [2523]                        ENDIF
    2523/    1F20 : [2523]                        ENDIF
    2523/    1F20 : [2523]                        ENDIF
    2524/    1F20 :                      
    2525/    1F20 : (MACRO)              DOUBLE: TSTR     SYNTAX,'('
    2525/    1F20 : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2525/    1F21 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2525/    1F22 : =>BLANK                       IFB     
    2525/    1F22 : A8                             DB    '('|0x80 
    2525/    1F23 : =>FALSE                       ELSE
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 80 - 07.07.2023 12:00:44


    2525/    1F23 :                                DB    '(' 
    2525/    1F23 :                                DB    |0x80
    2525/    1F23 : [2525]                        ENDIF
    2526/    1F23 : (MACRO)                      CALL     RELEXP
    2526/    1F23 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2526/    1F24 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2527/    1F25 : (MACRO)                      TSTR     SYNTAX,','
    2527/    1F25 : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2527/    1F26 : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2527/    1F27 : =>BLANK                       IFB     
    2527/    1F27 : AC                             DB    ','|0x80 
    2527/    1F28 : =>FALSE                       ELSE
    2527/    1F28 :                                DB    ',' 
    2527/    1F28 :                                DB    |0x80
    2527/    1F28 : [2527]                        ENDIF
    2528/    1F28 : (MACRO)                      CALL     RELEXP
    2528/    1F28 : 8E                           DB      H(RELEXP & 0x0FFF | CALBITH)
    2528/    1F29 : 35                           DB      L(RELEXP & 0x0FFF | CALBITH)
    2529/    1F2A : (MACRO)                      TSTR     SYNTAX,')'
    2529/    1F2A : 2E                           DB      H((SYNTAX & 0x0FFF) | TSTBITH)
    2529/    1F2B : 2F                           DB      L((SYNTAX & 0x0FFF) | TSTBITH)
    2529/    1F2C : =>BLANK                       IFB     
    2529/    1F2C : A9                             DB    ')'|0x80 
    2529/    1F2D : =>FALSE                       ELSE
    2529/    1F2D :                                DB    ')' 
    2529/    1F2D :                                DB    |0x80
    2529/    1F2D : [2529]                        ENDIF
    2530/    1F2D : (MACRO)                      DO       RTN
    2530/    1F2D : =>NOT BLANK                   IFNB    RTN 
    2530/    1F2D : 10                           DB      H(RTN-1)
    2530/    1F2E : F5                           DB      L(RTN-1)
    2530/    1F2F :                              SHIFT
    2530/    1F2F :  (MACRO-2)                    DO      
    2530/    1F2F : =>BLANK                       IFNB     
    2530/    1F2F :                              DB      H(-1)
    2530/    1F2F :                              DB      L(-1)
    2530/    1F2F :                              SHIFT
    2530/    1F2F :                              DO      
    2530/    1F2F : [2530]                        ENDIF
    2530/    1F2F : [2530]                        ENDIF
    2531/    1F2F :                      
    2532/    1F2F : (MACRO)              PRNUM:  DO       XCHGP1,PRN
    2532/    1F2F : =>NOT BLANK                   IFNB    XCHGP1 
    2532/    1F2F : 16                           DB      H(XCHGP1-1)
    2532/    1F30 : 30                           DB      L(XCHGP1-1)
    2532/    1F31 :                              SHIFT
    2532/    1F31 :  (MACRO-2)                    DO      PRN
    2532/    1F31 : =>NOT BLANK                   IFNB    PRN 
    2532/    1F31 : 11                           DB      H(PRN-1)
    2532/    1F32 : 8E                           DB      L(PRN-1)
    2532/    1F33 :                              SHIFT
    2532/    1F33 :   (MACRO-3)                   DO      
    2532/    1F33 : =>BLANK                       IFNB     
    2532/    1F33 :                              DB      H(-1)
    2532/    1F33 :                              DB      L(-1)
    2532/    1F33 :                              SHIFT
    2532/    1F33 :                              DO      
    2532/    1F33 : [2532]                        ENDIF
    2532/    1F33 : [2532]                        ENDIF
    2532/    1F33 : [2532]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 81 - 07.07.2023 12:00:44


    2533/    1F33 : (MACRO)              PRNUM1: DO       DIV,PRN1,XCHGP1,RTN
    2533/    1F33 : =>NOT BLANK                   IFNB    DIV 
    2533/    1F33 : 14                           DB      H(DIV-1)
    2533/    1F34 : 07                           DB      L(DIV-1)
    2533/    1F35 :                              SHIFT
    2533/    1F35 :  (MACRO-2)                    DO      PRN1,XCHGP1,RTN
    2533/    1F35 : =>NOT BLANK                   IFNB    PRN1 
    2533/    1F35 : 11                           DB      H(PRN1-1)
    2533/    1F36 : C5                           DB      L(PRN1-1)
    2533/    1F37 :                              SHIFT
    2533/    1F37 :   (MACRO-3)                   DO      XCHGP1,RTN
    2533/    1F37 : =>NOT BLANK                   IFNB    XCHGP1 
    2533/    1F37 : 16                           DB      H(XCHGP1-1)
    2533/    1F38 : 30                           DB      L(XCHGP1-1)
    2533/    1F39 :                              SHIFT
    2533/    1F39 :    (MACRO-4)                  DO      RTN
    2533/    1F39 : =>NOT BLANK                   IFNB    RTN 
    2533/    1F39 : 10                           DB      H(RTN-1)
    2533/    1F3A : F5                           DB      L(RTN-1)
    2533/    1F3B :                              SHIFT
    2533/    1F3B :     (MACRO-5)                 DO      
    2533/    1F3B : =>BLANK                       IFNB     
    2533/    1F3B :                              DB      H(-1)
    2533/    1F3B :                              DB      L(-1)
    2533/    1F3B :                              SHIFT
    2533/    1F3B :                              DO      
    2533/    1F3B : [2533]                        ENDIF
    2533/    1F3B : [2533]                        ENDIF
    2533/    1F3B : [2533]                        ENDIF
    2533/    1F3B : [2533]                        ENDIF
    2533/    1F3B : [2533]                        ENDIF
    2534/    1F3B :                     
    2535/    1F3B :                     ;   .PAGE   'ERROR MESSAGES'
    2536/    1F3B :                     
    2537/    1F3B :                     ;*************************************
    2538/    1F3B :                     ;*           ERROR MESSAGES          *
    2539/    1F3B :                     ;*************************************
    2540/    1F3B :                      
    2541/    1F3B :                     MESSAGE  MACRO A,B
    2542/    1F3B :                               DB  A
    2543/    1F3B :                               DB  B|0x80
    2544/    1F3B :                              ENDM
    2545/    1F3B :                     
    2546/    1F3B : (MACRO)              MESGS:  MESSAGE " ERRO",'R'     ; 1
    2546/    1F3B : 20 45 52 52 4F                DB  " ERRO"
    2546/    1F40 : D2                            DB  'R'|0x80
    2547/    1F41 : (MACRO)                      MESSAGE "ARE",'A'       ; 2
    2547/    1F41 : 41 52 45                      DB  "ARE"
    2547/    1F44 : C1                            DB  'A'|0x80
    2548/    1F45 : (MACRO)                      MESSAGE "STM",'T'       ; 3
    2548/    1F45 : 53 54 4D                      DB  "STM"
    2548/    1F48 : D4                            DB  'T'|0x80
    2549/    1F49 : (MACRO)                      MESSAGE "CHA",'R'       ; 4
    2549/    1F49 : 43 48 41                      DB  "CHA"
    2549/    1F4C : D2                            DB  'R'|0x80
    2550/    1F4D : (MACRO)                      MESSAGE "SNT",'X'       ; 5
    2550/    1F4D : 53 4E 54                      DB  "SNT"
    2550/    1F50 : D8                            DB  'X'|0x80
    2551/    1F51 : (MACRO)                      MESSAGE "VAL",'U'       ; 6
    2551/    1F51 : 56 41 4C                      DB  "VAL"
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 82 - 07.07.2023 12:00:44


    2551/    1F54 : D5                            DB  'U'|0x80
    2552/    1F55 : (MACRO)                      MESSAGE "END",'"'       ; 7
    2552/    1F55 : 45 4E 44                      DB  "END"
    2552/    1F58 : A2                            DB  '"'|0x80
    2553/    1F59 : (MACRO)                      MESSAGE "NOG",'O'       ; 8
    2553/    1F59 : 4E 4F 47                      DB  "NOG"
    2553/    1F5C : CF                            DB  'O'|0x80
    2554/    1F5D : (MACRO)                      MESSAGE "RTR",'N'       ; 9
    2554/    1F5D : 52 54 52                      DB  "RTR"
    2554/    1F60 : CE                            DB  'N'|0x80
    2555/    1F61 : (MACRO)                      MESSAGE "NES",'T'       ; 10
    2555/    1F61 : 4E 45 53                      DB  "NES"
    2555/    1F64 : D4                            DB  'T'|0x80
    2556/    1F65 : (MACRO)                      MESSAGE "NEX",'T'       ; 11
    2556/    1F65 : 4E 45 58                      DB  "NEX"
    2556/    1F68 : D4                            DB  'T'|0x80
    2557/    1F69 : (MACRO)                      MESSAGE "FO" ,'R'       ; 12
    2557/    1F69 : 46 4F                         DB  "FO"
    2557/    1F6B : D2                            DB  'R'|0x80
    2558/    1F6C : (MACRO)                      MESSAGE "DIV",'0'       ; 13
    2558/    1F6C : 44 49 56                      DB  "DIV"
    2558/    1F6F : B0                            DB  '0'|0x80
    2559/    1F70 : (MACRO)                      MESSAGE "BR" ,'K'       ; 14
    2559/    1F70 : 42 52                         DB  "BR"
    2559/    1F72 : CB                            DB  'K'|0x80
    2560/    1F73 : (MACRO)                      MESSAGE "UNT",'L'       ; 15
    2560/    1F73 : 55 4E 54                      DB  "UNT"
    2560/    1F76 : CC                            DB  'L'|0x80
    2561/    1F77 :                     
    2562/    1F77 :                     ;   .PAGE   ' TELETYPE ROUTINES'
    2563/    1F77 :                      
    2564/    1F77 :                     ;*************************************
    2565/    1F77 :                     ;*     GET CHARACTER AND ECHO IT     *
    2566/    1F77 :                     ;*************************************
    2567/    1F77 :                     
    2568/    1F77 :                     ;   .LOCAL
    2569/    1F77 : C4 08               GECO:   LDI     8             ;SET COUNT = 8
    2570/    1F79 : CA EB                       ST      NUM(P2)
    2571/    1F7B : 06                          CSA                   ;SET READER RELAY
    2572/    1F7C : DC 00                       ORI     0
    2573/    1F7E : 07                          CAS
    2574/    1F7F : 06                  GET1:   CSA                   ;WAIT FOR START BIT
    2575/    1F80 : D4 20                       ANI     0x20
    2576/    1F82 : 9C FB                       JNZ     GET1          ;NOT FOUND
    2577/    1F84 : C4 A7                       LDI     167           ;DELAY 1/2 BIT TIME
    2578/    1F86 : 8F 00                       DLY     0
    2579/    1F88 : 06                          CSA                   ;IS START BIT STILL THERE?
    2580/    1F89 : D4 20                       ANI     0x20
    2581/    1F8B : 9C F2                       JNZ     GET1          ;NO
    2582/    1F8D : 06                          CSA                   ;SEND START BIT
    2583/    1F8E : D4 FD                       ANI     0xFD          ;RESET READER RELAY
    2584/    1F90 : DC 01                       ORI     1
    2585/    1F92 : 07                          CAS
    2586/    1F93 : C4 45               GET2:   LDI     69            ;DELAY 1 BIT TIME
    2587/    1F95 : 8F 01                       DLY     1
    2588/    1F97 : 06                          CSA                   ;GET BIT (SENSEB)
    2589/    1F98 : D4 20                       ANI     0x20
    2590/    1F9A : 98 04                       JZ      GET3
    2591/    1F9C : C4 01                       LDI     1
    2592/    1F9E : 90 04                       JMP     GET4
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 83 - 07.07.2023 12:00:44


    2593/    1FA0 : C4 00               GET3:   LDI     0
    2594/    1FA2 : 9C 00                       JNZ     GET4
    2595/    1FA4 : CA EA               GET4:   ST      TEMP(P2)      ;SAVE BIT VALUE (0 OR 1)
    2596/    1FA6 : 1F                          RRL                   ;ROTATE INTO LINK
    2597/    1FA7 : 01                          XAE
    2598/    1FA8 : 1D                          SRL                   ;SHIFT INTO CHARACTER
    2599/    1FA9 : 01                          XAE                   ;RETURN CHAR TO E
    2600/    1FAA : 06                          CSA                   ;ECHO BIT TO OUTPUT
    2601/    1FAB : DC 01                       ORI     1
    2602/    1FAD : E2 EA                       XOR     TEMP(P2)
    2603/    1FAF : 07                          CAS
    2604/    1FB0 : BA EB                       DLD     NUM(P2)       ;DECREMENT BIT COUNT
    2605/    1FB2 : 9C DF                       JNZ     GET2          ;LOOP UNTIL 0
    2606/    1FB4 : 06                          CSA                   ;SET STOP BIT
    2607/    1FB5 : D4 FE                       ANI     0xFE
    2608/    1FB7 : 07                          CAS
    2609/    1FB8 : 8F 04                       DLY     4             ;DELAY APPROX. 1 BIT TIME
    2610/    1FBA : 40                          LDE                   ;AC HAS INPUT CHARACTER
    2611/    1FBB : D4 7F                       ANI     0x7F
    2612/    1FBD : 01                          XAE
    2613/    1FBE : 40                          LDE
    2614/    1FBF : 3F                          XPPC    P3            ;RETURN
    2615/    1FC0 : 90 B5                       JMP     GECO
    2616/    1FC2 :                     
    2617/    1FC2 :                     
    2618/    1FC2 :                     ;*************************************
    2619/    1FC2 :                     ;*     PRINT CHARACTER AT TTY        *
    2620/    1FC2 :                     ;*************************************
    2621/    1FC2 :                      
    2622/    1FC2 : 01                  PUTC:   XAE
    2623/    1FC3 : C4 25                       LDI     37            ;DELAY ALMOST
    2624/    1FC5 : 8F 03                       DLY     3             ;3 BIT TIMES
    2625/    1FC7 : 06                          CSA                   ;SET OUTPUT BIT TO LOGIC 0
    2626/    1FC8 : DC 01                       ORI     1             ; FOR START BIT (NOTE INVERSION)
    2627/    1FCA : 07                          CAS
    2628/    1FCB : C4 09                       LDI     9             ;INITIALIZE BIT COUNT
    2629/    1FCD : CA E8                       ST      TEMP3(P2)
    2630/    1FCF : C4 50               PUTC1:  LDI     80            ;DELAY 1 BIT TIME
    2631/    1FD1 : 8F 01                       DLY     1    
    2632/    1FD3 : BA E8                       DLD     TEMP3(P2)     ;DECREMENT BIT COUNT
    2633/    1FD5 : 98 10                       JZ      PUTC2
    2634/    1FD7 : 40                          LDE                   ;PREPARE NEXT BIT
    2635/    1FD8 : D4 01                       ANI     1
    2636/    1FDA : CA E9                       ST      TEMP2(P2)
    2637/    1FDC : 01                          XAE                   ;SHIFT DATA RIGHT 1 BIT
    2638/    1FDD : 1C                          SR
    2639/    1FDE : 01                          XAE
    2640/    1FDF : 06                          CSA                   ;SET UP OUTPUT BIT
    2641/    1FE0 : DC 01                       ORI     1
    2642/    1FE2 : E2 E9                       XOR     TEMP2(P2)
    2643/    1FE4 : 07                          CAS                   ;PUT BIT INTO TTY
    2644/    1FE5 : 90 E8                       JMP     PUTC1
    2645/    1FE7 : 06                  PUTC2:  CSA                   ;SET STOP BIT
    2646/    1FE8 : D4 FE                       ANI     0xFE
    2647/    1FEA : 07                          CAS
    2648/    1FEB : 3F                          XPPC    P3            ;RETURN
    2649/    1FEC : 90 D4                       JMP     PUTC
    2650/    1FEE : 00                          HALT
    2651/    1FEF : 00                          HALT
    2652/    1FF0 : (MACRO)                      JS      P3,REST       ;RETURN FROM ELBUG USING RU1FF0RU
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 84 - 07.07.2023 12:00:44


    2652/    1FF0 : C4 19                      LDI  H(REST-1)
    2652/    1FF2 : 37                         XPAH P3
    2652/    1FF3 : C4 6F                      LDI  L(REST-1)
    2652/    1FF5 : 33                         XPAL P3
    2652/    1FF6 : 3F                         XPPC P3
    2653/    1FF7 :                     
    2654/    1FF7 :                         END   0
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 85 - 07.07.2023 12:00:44


  Symboltabelle (* = unbenutzt):
  ----------------------------

 ADD :                         132D C |  ADOWN :                       1889 C |
 AESTK :                       2050 - |  AGAIN :                       1252 C |
 AMOVE :                       1873 C |  ANDOP :                       15E8 C |
*ARCHITECTURE :                                      "x86_64-unknown-linux" - |
 AT :                          1C9A C |  BEGIN :                       1C58 C |
*BIGENDIAN :                      0 - |  BREAK :                       1280 C |
 CALBIT :                        80 - |  CALBITH :                     8000 - |
 CALLML :                      1967 C | *CASESENSITIVE :                  0 - |
 CHEAT :                       107C C |  CHEAT1 :                      10C0 C |
 CHPAGE :                      1BBE C |  CHRNUM :          FFFFFFFFFFFFFFE7 - |
 CK1 :                         1641 C |  CKMODE :                      163C C |
 CLEAR :                       1051 C |  CLEAR1 :                      1056 C |
 CLR :                         1C60 C |  CMP :                         155A C |
 CMP1 :                        15BA C |  CMP2 :                        15C2 C |
 CMPR :                        15D1 C |  COMMA :                       1DC1 C |
*COMPMODE :                       0 - | *CONSTPI :        3.141592653589793 - |
*DATE :                "07.07.2023" - |  DETPGE :                      1BC5 C |
 DFAULT :                      1C78 C |  DIV :                         1408 C |
 DOLLAR :                      1D7E C |  DOLR1 :                       1D8F C |
 DOLR2 :                       1D9A C |  DONE :                        1130 C |
 DONE1 :                       113E C |  DONE2 :                       113F C |
 DOPTR :           FFFFFFFFFFFFFFFF - |  DOSTAK :                      207A - |
 DOSTMT :                      1CD1 C |  DOUBLE :                      1F20 C |
 DPOS :                        1433 C |  E0 :                          114B C |
 E0A :                         1108 C |  E1 :                          118D C |
 E10 :                         17CA C |  E12 :                         1871 C |
 E12A :                        18E5 C |  E13 :                         1914 C |
 E14 :                         1954 C |  E15 :                         1980 C |
 E16 :                         19D0 C |  E16A :                        1A32 C |
 E17 :                         1A4E C |  E18 :                         1AAB C |
 E19 :                         1B08 C |  E2 :                          11C4 C |
 E3A :                         1282 C |  E4 :                          12D7 C |
 E5 :                          1304 C |  E6 :                          1370 C |
 E6A :                         13CA C |  E8 :                          1643 C |
 E8B :                         16AA C |  E9 :                          1753 C |
 ELL :                         1822 C |  END :                         1E09 C |
 EQ :                          1544 C |  EREG :            FFFFFFFFFFFFFF80 - |
 ERR :                         121B C |  ERR1 :                        121D C |
 ERR2 :                        121F C |  ERRNUM :                      1E31 C |
 ESA :                         16DD C |  EVAL :                        17EA C |
 EX1 :                         1E6A C |  EX2 :                         1E6D C |
 EX3 :                         1E6F C |  EX4 :                         1E78 C |
 EX5 :                         1E81 C |  EXECIL :                      1076 C |
 EXIT0 :                       13FA C |  EXPR :                        1E61 C |
 F1 :                          1EB4 C |  F10 :                         1F16 C |
 F2 :                          1EBA C |  F3 :                          1EC1 C |
 F4 :                          1ECB C |  F5 :                          1ED4 C |
 F6 :                          1EDF C |  F7 :                          1EE9 C |
 F8 :                          1EF4 C |  F9 :                          1F01 C |
 FACTOR :                      1EAC C |  FAIL :                        15D9 C |
 FAILHI :          FFFFFFFFFFFFFFEC - |  FAILLO :          FFFFFFFFFFFFFFED - |
*FALSE :                          0 - |  FALSE_ :                      15C0 C |
 FIN :                         12AA C |  FNDLBL :                      1BE2 C |
 FNDPGE :                      1B98 C |  FNLBL1 :                      1BE8 C |
 FNLBL2 :                      1C00 C |  FNLBL3 :                      1C15 C |
 FOR :                         1D2A C |  FOR1 :                        1D4A C |
 FOR2 :                        1D4C C |  FORPTR :          FFFFFFFFFFFFFFFE - |
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 86 - 07.07.2023 12:00:44


 FORSTK :                      208A - |  FPGE1 :                       1BA7 C |
 GECO :                        1F77 C |  GENTER :                      17BA C |
 GEQ :                         1558 C |  GEQ1 :                        15B6 C |
 GET1 :                        1F7F C |  GET2 :                        1F93 C |
 GET3 :                        1FA0 C |  GET4 :                        1FA4 C |
 GETL :                        1757 C |  GETL0 :                       1773 C |
 GETL1 :                       1776 C |  GETLCR :                      17DC C |
 GETRUB :                      17D2 C |  GO1 :                         1CF6 C |
 GOSUB :                       1CEB C |  GOTO :                        1CDD C |
 GTR :                         1554 C |  GTR1 :                        15AB C |
 GTROP :                       1E5F C |  GXH :                         17CC C |
 GXU :                         17AA C | *HAS64 :                          1 - |
 HEND :                        16A4 C |  HENTER :                      1683 C |
 HEX :                         164C C |  HI :              FFFFFFFFFFFFFFEE - |
 HILINE :          FFFFFFFFFFFFFFF7 - |  HLETR :                       1674 C |
 HSHIFT :                      168A C |  HSKIP :                       165C C |
 HXOK :                        1680 C |  IF :                          1CAA C |
 IF1 :                         1CB6 C |  IGNORE :                      19B9 C |
 ILC1 :                        10A8 C |  ILCALL :                      109E C |
 IN1 :                         1DE2 C |  IN2 :                         1DF6 C |
 IN3 :                         1E05 C |  IND :                         152C C |
 INPUT :                       1DD1 C |  INSAD0 :                      18E7 C |
 INSAD1 :                      1903 C |  INSRT :                       1824 C |
 INSRT1 :                      183C C |  INSRT2 :                      1846 C |
 INSRT3 :                      184E C |  INSRT4 :                      185B C |
 INSRT5 :                      1862 C |  INSUP0 :                      1899 C |
 INSUP1 :                      18A5 C |  INSUP2 :                      18C6 C |
 INSUP3 :                      18C8 C |  INSUP4 :                      18D8 C |
 ISTRG2 :                      1B2C C |  ISTRNG :                      1B26 C |
 JMPBIT :                        40 - |  JMPBITH :                     4000 - |
 LABLHI :          FFFFFFFFFFFFFFF2 - |  LABLLO :          FFFFFFFFFFFFFFF3 - |
 LBUF :                        20D6 - |  LEQ :                         1550 C |
 LEQ1 :                        15A2 C |  LET :                         1C8B C |
 LIST :                        1C35 C |  LIST1 :                       1C47 C |
 LIST2 :                       1C49 C |  LIST3 :                       1C4B C |
 LISTNG :          FFFFFFFFFFFFFFF5 - | *LISTON :                         1 - |
 LIT1 :                        1A34 C |  LO :              FFFFFFFFFFFFFFEF - |
 LOGAND :                      15F2 C |  LOGNOT :                      1620 C |
 LOGOR :                       160E C |  LOLINE :          FFFFFFFFFFFFFFF8 - |
 LOOP0 :                       102C C |  LOOP1 :                       1043 C |
 LOOP10 :                      1AD5 C |  LOOP11 :                      1B3C C |
 LOOP12 :                      1B6C C |  LOOP13 :                      1BAE C |
 LOOP2 :                       10D6 C |  LOOP3 :                       11FB C |
 LOOP4 :                       1239 C |  LOOP5 :                       13AE C |
 LOOP6 :                       1458 C |  LOOP7 :                       1664 C |
 LOOP8 :                       16EF C |  LOOP9 :                       19DD C |
 LREDO :                       1AFA C |  LSS :                         154C C |
 LSS1 :                        159A C |  LST :                         12D9 C |
 LST2 :                        12F7 C |  LST3 :                        1306 C |
 LST4 :                        130C C |  LST5 :                        131C C |
 LSTK :            FFFFFFFFFFFFFFFD - | *MACEXP :                         7 - |
 MESGS :                       1F3B C |  ML :                          1E12 C |
 MM3 :                         13CC C |  MM4 :                         13E9 C |
 MODULO :                      19C0 C | *MOMCPU :                         0 - |
*MOMCPUNAME :               "SC/MP" - |  MOVE :                        1808 C |
 MOVESR :                      194D C |  MOVSTR :                      1B56 C |
 MPOS :                        138F C |  MPOS1 :                       13A0 C |
 MSG0 :                        123F C |  MUL :                         1372 C |
 NEG :                         135B C |  NEQ :                         1548 C |
 NEQ0 :                        10E9 C |  NEQ1 :                        1591 C |
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 87 - 07.07.2023 12:00:44


*NESTMAX :                      100 - |  NEW :                         1C6D C |
 NEW1 :                        1C7A C |  NEWPGM :                      1BD1 C |
 NEXT :                        1D10 C |  NEXTV :                       1A89 C |
 NEXTV1 :                      1AEE C |  NLINE :                       120D C |
 NMSG :                        1235 C | *NOJUMP :                      109B C |
 NOTOP :                       15F0 C |  NUM :             FFFFFFFFFFFFFFEB - |
 NUPAGE :                      1B8D C |  NUPGE0 :                      1B97 C |
 NXT :                         1284 C |  NXT1 :                        12A1 C |
 NXTV10 :                      1AAD C |  NXTV2 :                       1AE1 C |
 NXTV3 :                       1AE3 C |  OROP :                        15EC C |
*P1 :                             1 - |  P1HIGH :          FFFFFFFFFFFFFFF0 - |
 P1LOW :           FFFFFFFFFFFFFFF1 - | *P2 :                             2 - |
*P3 :                             3 - |  PAGE :            FFFFFFFFFFFFFFF6 - |
 PCHIGH :          FFFFFFFFFFFFFFFA - |  PCLOW :           FFFFFFFFFFFFFFFB - |
 PCSTAK :                      20A6 - |  PCSTK :           FFFFFFFFFFFFFFF9 - |
 PGE :                         1D67 C |  PGM :                         2120 - |
 POPAE :                       1916 C |  PR1 :                         1DA7 C |
 PR2 :                         1DAE C |  PR3 :                         1DBD C |
 PR4 :                         1DC6 C |  PR5 :                         1DCB C |
 PR6 :                         1DCD C |  PRINT :                       1D9E C |
 PRMPT1 :                      1C25 C |  PRN :                         118F C |
 PRN0 :                        11BE C |  PRN1 :                        11C6 C |
 PRN2 :                        11E7 C |  PRN3 :                        11F7 C |
 PRNUM :                       1F2F C |  PRNUM1 :                      1F33 C |
 PROMPT :                      1C1E C |  PRS :                         1176 C |
 PRS1 :                        118B C |  PRSTR1 :                      1B16 C |
 PSTRNG :                      1B0A C |  PTSTR1 :                      1B4A C |
 PUTC :                        1FC2 C |  PUTC1 :                       1FCF C |
 PUTC2 :                       1FE7 C |  PUTPGE :                      1B7B C |
 PUTSTR :                      1B36 C |  QD0 :                         1418 C |
 QD1 :                         143B C |  QD2 :                         144C C |
 QD3 :                         14A4 C |  QDEND :                       14BB C |
 QDENT1 :                      149E C |  QNXTV1 :                      1A93 C |
 RANDOM :                      19D2 C |  REL1 :                        1E3E C |
 REL2 :                        1E48 C |  REL3 :                        1E4F C |
 REL4 :                        1E53 C |  REL5 :                        1E5D C |
*RELAXED :                        0 - |  RELEXP :                      1E35 C |
 REM :                         1E26 C |  REST :                        1970 C |
 RETEXP :                      1E8B C |  RETURN :                      1D00 C |
 RND1 :                        1A01 C |  RNDF :            FFFFFFFFFFFFFFE6 - |
 RNDX :            FFFFFFFFFFFFFFE5 - |  RNDY :            FFFFFFFFFFFFFFE4 - |
 RSTR :                        1143 C |  RSTR1 :                       114D C |
 RSTR2 :                       115F C |  RTN :                         10F6 C |
 RUN :                         1C51 C |  RUNMOD :          FFFFFFFFFFFFFFF4 - |
 SAV :                         110A C |  SAV1 :                        1126 C |
 SAV2 :                        112C C |  SAVED1 :                      1982 C |
 SAVEDO :                      1978 C |  SAVFOR :                      1A46 C |
 SBRPTR :          FFFFFFFFFFFFFFFC - |  SBRSTK :                      206A - |
 SCAN0 :                       10C4 C |  SETZ :                        1585 C |
 SFOR1 :                       1A50 C |  SKIP0 :                       1259 C |
 SREDO :                       1940 C |  START :                       1C1C C |
 STAT :                        1D54 C |  STATUS :                      1956 C |
 STMT :                        1C86 C |  STORE :                       14C1 C |
 STREND :                      1B50 C |  STRT :                        12C0 C |
 SUB :                         1344 C |  SYNTAX :                      1E2F C |
 T1 :                          1E8F C |  T2 :                          1E98 C |
 T3 :                          1EA1 C |  TEMP :            FFFFFFFFFFFFFFEA - |
 TEMP2 :           FFFFFFFFFFFFFFE9 - |  TEMP3 :           FFFFFFFFFFFFFFE8 - |
 TERM :                        1E8D C | *TIME :                  "12:00:44" - |
 TN1 :                         16DF C |  TN2 :                         16FF C |
 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 88 - 07.07.2023 12:00:44


 TNABRT :                      16BE C |  TNERR :                       1751 C |
 TNRET :                       16CE C |  TNSHFT :                      170C C |
 TOP :                         1994 C |  TOP0 :                        199A C |
 TOP1 :                        19A0 C |  TOP2 :                        19A7 C |
*TRUE :                           1 - |  TST :                         10C2 C |
 TSTBIT :                        20 - |  TSTBITH :                     2000 - |
 TSTNUM :                      16AC C |  TSTVAR :                      14E1 C |
 TVFAIL :                      14F3 C |  TVMAY :                       1505 C |
 TVOK :                        1512 C |  UNT :                         1CBC C |
 UNTIL :                       1928 C |  UNTL1 :                       1934 C |
 VARS :                        201C - | *VERSION :                     142F - |
 X0 :                          10E7 C |  X1 :                          115D C |
 X10 :                         14DA C |  X11 :                         1542 C |
 X12 :                         158F C |  X12A :                        15E6 C |
 X12B :                        162F C |  X12C :                        1672 C |
 X13 :                         16DB C |  X14 :                         1755 C |
 X15 :                         17B8 C |  X16 :                         17E8 C |
 X17 :                         1820 C |  X19 :                         186F C |
 X19A :                        18E9 C |  X20 :                         190D C |
 X21 :                         1952 C |  X22 :                         1992 C |
 X23 :                         19CE C |  X24 :                         1A30 C |
 X25 :                         1A87 C |  X26 :                         1AEC C |
 X27 :                         1B34 C |  X4 :                          11C2 C |
 X5 :                          1219 C |  X5A :                         127E C |
 X6 :                          12D5 C |  X6A :                         1302 C |
 X7 :                          1342 C |  X8 :                          136E C |
 X9 :                          13E7 C |  X9A :                         1431 C |
 X9B :                         149C C |  XCHGP1 :                      1631 C |
 XFER :                        1169 C |  XFER1 :                       1171 C |

    411 Symbole
     21 unbenutzte Symbole

 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 89 - 07.07.2023 12:00:44


  definierte Makros:
  ------------------

CALL                                  | DO                                   
JS                                    | JUMP                                 
LDPI                                  | MESSAGE                              
TSTCR                                 | TSTN                                 
TSTR                                  | TSTV                                 

     10 Makros

 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 90 - 07.07.2023 12:00:44


  definierte Funktionen:
  ----------------------

H                                     | L                                    

 AS V1.42 Beta [Bld 238] - Quelle NIBLE.asm - Seite 91 - 07.07.2023 12:00:44


  Zeichentabellen:
  ----------------

STANDARD (0 verÃ¤nderte Zeichen)

1 Zeichentabelle

0.04 Sekunden Assemblierzeit

   2656 Zeilen Quelltext
   4989 Zeilen inkl. Makroexpansionen
      2 DurchlÃ¤ufe
      0 Fehler
      0 Warnungen
