 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 1 - 08.05.2023 15:13:29


       1/       0 :                     ;-----------------------------------------------------------------------------
       2/       0 :                     ;  NIBL.ASM - Tiny BASIC for the National Semiconductor SC/MP microprocessor 
       3/       0 :                     ;                    (NIBL-P, release date 12/17/76) 
       4/       0 :                     ;
       5/       0 :                     ; This file has been prepared via OCR and text editor from the original 
       6/       0 :                     ; assembly listing; then re-assembled and rigorously checked for errors. 
       7/       0 :                     ;
       8/       0 :                     ;The following differences exist from the original listing: 
       9/       0 :                     ;  - Many original local labels (mostly for short jumps) have been given 
      10/       0 :                     ;    new names to insure global uniqueness.
      11/       0 :                     ;  - Macros have been modified (or created) to allow compatibility with a 
      12/       0 :                     ;    modern, generic, macro-assembler.
      13/       0 :                     ;  - After being passed through the OCR process, neatness of the original 
      14/       0 :                     ;    text has suffered some cosmetic inconsistency.
      15/       0 :                     ;
      16/       0 :                     ;Of further note:
      17/       0 :                     ;  - The macro-assembler used here is a free tool, "AS", by Alfred Arnold:
      18/       0 :                     ;             http://john.ccac.rwth-aachen.de:8000/as/
      19/       0 :                     ;  - The cryptic syntax "./256" used as the operand of the instruction at 
      20/       0 :                     ;    address 0087 suggests that there may have been "hooks" incorporated 
      21/       0 :                     ;    for relocation of the NIBL interpreter code. An assembled operand value 
      22/       0 :                     ;    of zero has been retained as in the original. 
      23/       0 :                     ;  - On my original hardcopy listing, hand written notations indicate that the 
      24/       0 :                     ;    "OR HI(P2)" instructions at addresses 05D3 and 0936 were later changed
      25/       0 :                     ;    to "ANI 01". As I recall, this was a minor bug fix that may have been 
      26/       0 :                     ;    published in a National Semiconductor newsletter or in an issue of 
      27/       0 :                     ;    Dr. Dobb's Journal.
      28/       0 :                     ;
      29/       0 :                     ; A full assembly listing of this source file is also appended below.
      30/       0 :                     ; Enjoy!
      31/       0 :                     ; 
      32/       0 :                     ; Roger Marin, January 2008
      33/       0 :                     ; Portland, Oregon, USA. 
      34/       0 :                     ; ramarin(AT)teleport.com  
      35/       0 :                     ;--------------------------------------------------------------------------
      36/       0 :                     
      37/       0 :                     L FUNCTION VAL16, (VAL16 & 0xFF)
      38/       0 :                     H FUNCTION VAL16, ((VAL16 >> 8) & 0xFF)
      39/       0 :                     
      40/       0 :                     JS   MACRO  P,VAL
      41/       0 :                            LDI    H(VAL-1)
      42/       0 :                            XPAH   P
      43/       0 :                            LDI    L(VAL-1)
      44/       0 :                            XPAL   P
      45/       0 :                            XPPC   P
      46/       0 :                          ENDM
      47/       0 :                     
      48/       0 :                     LDPI MACRO  P,VAL
      49/       0 :                            LDI     H(VAL)
      50/       0 :                            XPAH    P
      51/       0 :                            LDI     L(VAL)
      52/       0 :                            XPAL    P
      53/       0 :                          ENDM
      54/       0 :                     
      55/       0 :                     ;*****************************************************
      56/       0 :                     ;*       WE ARE TIED DOWN TO A LANGUAGE WHICH        *
      57/       0 :                     ;*       MAKES  UP IN OBSCURITY WHAT IT LACKS        *
      58/       0 :                     ;*       IN  STYLE.                                  *
      59/       0 :                     ;*                     - TOM STOPPARD                *
      60/       0 :                     ;*****************************************************
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 2 - 08.05.2023 15:13:29


      61/       0 :                      
      62/       0 : =0x20                TSTBIT   =        0x20            ;I. L. INSTRUCTION FLAGS
      63/       0 : =0x40                JMPBIT   =        0x40
      64/       0 : =0x80                CALBIT   =        0x80
      65/       0 : =0x1                 P1       =        1               ;SC/MP POINTER ASSIGNMENTS
      66/       0 : =0x2                 P2       =        2
      67/       0 : =0x3                 P3       =        3
      68/       0 : =0xFFFFFFFFFFFFFF80  EREG     =        -128            ;THE EXTENSION REGISTER
      69/       0 :                      
      70/       0 :                     ; DISPLACEMENTS FOR RAM VARIABLES USED BY INTERPRETER
      71/       0 :                      
      72/       0 : =0xFFFFFFFFFFFFFFFF  DOPTR    =        -1              ;DO-STACK POINTER
      73/       0 : =0xFFFFFFFFFFFFFFFE  FORPTR   =        -2              ;FOR-STACK POINTER
      74/       0 : =0xFFFFFFFFFFFFFFFD  LSTK     =        -3              ;ARITHMETIC STACK POINTER
      75/       0 : =0xFFFFFFFFFFFFFFFC  SBRPTR   =        -4              ;GOSUB STACK POINTER
      76/       0 : =0xFFFFFFFFFFFFFFFB  PCLOW    =        -5              ;I. L. PROGRAM COUNTER
      77/       0 : =0xFFFFFFFFFFFFFFFA  PCHIGH   =        -6
      78/       0 : =0xFFFFFFFFFFFFFFF9  PCSTK    =        -7              ;I. L. CALL STACK POINTER
      79/       0 : =0xFFFFFFFFFFFFFFF8  LOLINE   =        -8              ;CURRENT LINE NUMBER
      80/       0 : =0xFFFFFFFFFFFFFFF7  HILINE   =        -9
      81/       0 : =0xFFFFFFFFFFFFFFF6  PAGE     =        -10             ;VALUE OF CURRENT PAGE
      82/       0 : =0xFFFFFFFFFFFFFFF5  LISTNG   =        -11             ;LISTING FLAG
      83/       0 : =0xFFFFFFFFFFFFFFF4  RUNMOD   =        -12             ;RUN/EDIT FLAG
      84/       0 : =0xFFFFFFFFFFFFFFF3  LABLLO   =        -13
      85/       0 : =0xFFFFFFFFFFFFFFF2  LABLHI   =        -14
      86/       0 : =0xFFFFFFFFFFFFFFF1  P1L0W    =        -15             ;SPACE TO SAVE CURSOR
      87/       0 : =0xFFFFFFFFFFFFFFF0  P1HIGH   =        -16
      88/       0 : =0xFFFFFFFFFFFFFFEF  LO       =        -17
      89/       0 : =0xFFFFFFFFFFFFFFEE  HI       =        -18
      90/       0 : =0xFFFFFFFFFFFFFFED  FAILLO   =        -19
      91/       0 : =0xFFFFFFFFFFFFFFEC  FAILHI   =        -20
      92/       0 : =0xFFFFFFFFFFFFFFEB  NUM      =        -21
      93/       0 : =0xFFFFFFFFFFFFFFEA  TEMP     =        -22
      94/       0 : =0xFFFFFFFFFFFFFFE9  TEMP2    =        -23
      95/       0 : =0xFFFFFFFFFFFFFFE8  TEMP3    =        -24
      96/       0 : =0xFFFFFFFFFFFFFFE7  CHRNUM   =        -25
      97/       0 : =0xFFFFFFFFFFFFFFE6  RNDF     =        -26
      98/       0 : =0xFFFFFFFFFFFFFFE5  RNDX     =        -27             ;SEEDS FOR RANDOM NUMBER
      99/       0 : =0xFFFFFFFFFFFFFFE4  RNDY     =        -28
     100/       0 :                      
     101/       0 :                     ; ALLOCATION  OF RAM FOR NIBL VARIABLES, STACKS,
     102/       0 :                     ; AND LINE BUFFER
     103/       0 :                             
     104/       0 : =0x101C              VARS      =  0x1000 +28            ;NIBL VARIABLES A-Z
     105/       0 : =0x1050              AESTK:    =  VARS   +52            ;ARITHMETIC STACK  
     106/       0 : =0x106A              SBRSTK:   =  AESTK  +26            ;G0SUB STACK   
     107/       0 : =0x107A              DOSTAK:   =  SBRSTK +16            ;DO/UNTIL  STACK   
     108/       0 : =0x108A              FORSTK:   =  DOSTAK +16            ;FOR/NEXT  STACK    
     109/       0 : =0x10A6              PCSTAK:   =  FORSTK +28            ;I.L. CALL STACK    
     110/       0 : =0x10D6              LBUF:     =  PCSTAK +48            ;LINE BUFFER     
     111/       0 : =0x1120              PGM:      =  LBUF   +74            ;USER'S PROGRAM            
     112/       0 :                           
     113/       0 :                      
     114/       0 :                     ;*************************************
     115/       0 :                     ;*      INITIALIZATION OF NIBL       *
     116/       0 :                     ;*************************************
     117/       0 :                               
     118/       0 :                      
     119/       0 : 08                            NOP
     120/       1 : (MACRO)                        LDPI    P2,VARS          ;POINT P2 AT VARIABLES
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 3 - 08.05.2023 15:13:29


     120/       1 : C4 10                      LDI     H(VARS)
     120/       3 : 36                         XPAH    P2
     120/       4 : C4 1C                      LDI     L(VARS)
     120/       6 : 32                         XPAL    P2
     121/       7 : (MACRO)                        LDPI    P1,PGM           ;POINT PI AT PAGE ONE PROGRAM
     121/       7 : C4 11                      LDI     H(PGM)
     121/       9 : 35                         XPAH    P1
     121/       A : C4 20                      LDI     L(PGM)
     121/       C : 31                         XPAL    P1
     122/       D : C4 FF                         LDI     -1               ;STORE -1 AT START OF PROGRAM
     123/       F : C9 00                         ST      0(P1)
     124/      11 : C9 01                         ST      1(P1)
     125/      13 : C4 0D                         LDI     0x0D             ;ALSO STORE A DUMMY
     126/      15 : C9 FF                         ST      -1(P1)           ;CARRIAGE RETURN
     127/      17 : C4 02                         LDI     2                ;POINT P2 AT PAGE 2,
     128/      19 : CA F6                         ST      PAGE(P2)         ;INITIALLY SET PAGE TO 2
     129/      1B : 31                            XPAL    P1
     130/      1C : C4 20                         LDI     0x20
     131/      1E : 35                            XPAH    P1
     132/      1F : B9 02                         DLD     2(P1)            ; CHECK IF THERE IS REALLY
     133/      21 : 01                            XAE                      ; A PROGRAM IN PAGE 2:
     134/      22 : C1 80                         LD      EREG(P1)         ; IF FIRST LINE LENGTH
     135/      24 : E4 0D                         XRI     0x0D             ; POINTS TO  CARR.  RETURN
     136/      26 : 98 02                         JZ      L000             ; AT END OF  LINE
     137/      28 : BA F6                         DLD     PAGE(P2)         ;IF NOT, PAGE = 1
     138/      2A : C4 20               L000:     LDI     0x20
     139/      2C : 35                  LOOP1:    XPAH    P1
     140/      2D : C4 FF                         LDI     -1               ; STORE -1 IN 2 CONSECUTIVE
     141/      2F : C9 00                         ST      (P1)             ; LOCATIONS AT START OF PAGE
     142/      31 : C9 01                         ST      1(P1)
     143/      33 : C4 0D                         LDI     0x0D             ; ALSO PUT A DUMMY END-OF-LINE
     144/      35 : C9 FF                         ST      -1(P1)           ; JUST BEFORE TEXT
     145/      37 : 35                            XPAH    P1               ; UPDATE P1 TO POINT TO
     146/      38 : 02                            CCL                      ; NEXT PAGE (UNTIL PAGE=8)
     147/      39 : F4 10                         ADI     0x10             ; REPEAT INITIALIZATION
     148/      3B : E4 80                         XRI     0x80             ; FOR PAGES 2-7
     149/      3D : 98 04                         JZ      L001
     150/      3F : E4 80                         XRI     0x80
     151/      41 : 90 E9                         JMP     LOOP1
     152/      43 : C4 00               L001:     LDI     0                ; CLEAR SOME  FLAGS
     153/      45 : CA F4                         ST      RUNMOD(P2)
     154/      47 : CA F5                         ST      LISTNG(P2)
     155/      49 : C4 58                         LDI     L(BEGIN)         ; INITIALIZE  IL PC  SO  THAT
     156/      4B : CA FB                         ST      PCLOW(P2)        ; NIBL PROGRAM
     157/      4D : C4 0C                         LDI     H(BEGIN)         ; IS EXECUTED IMMEDIATELY
     158/      4F : CA FA                         ST      PCHIGH(P2)
     159/      51 : C4 00               CLEAR:    LDI     0
     160/      53 : CA EA                         ST      TEMP(P2)
     161/      55 : 01                            XAE
     162/      56 : C4 00               CLEAR1:   LDI     0                ; SET ALL VARIABLES
     163/      58 : CA 80                         ST      EREG(P2)         ; TO ZERO
     164/      5A : AA EA                         ILD     TEMP(P2)
     165/      5C : 01                            XAE
     166/      5D : C4 34                         LDI     52
     167/      5F : 60                            XRE
     168/      60 : 9C F4                         JNZ     CLEAR1
     169/      62 : C4 50                         LDI     L(AESTK)         ; INITIALIZE  SOME STACKS?
     170/      64 : CA FD                         ST      LSTK(P2)         ; ARITHMETIC STACK,
     171/      66 : C4 7A                         LDI     L(DOSTAK)
     172/      68 : CA FF                         ST      DOPTR(P2)        ; DO/UNTIL STACK,
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 4 - 08.05.2023 15:13:29


     173/      6A : C4 6A                         LDI     L(SBRSTK)
     174/      6C : CA FC                         ST      SBRPTR(P2)       ; GOSUB STACK,
     175/      6E : C4 A6                         LDI     L(PCSTAK)
     176/      70 : CA F9                         ST      PCSTK(P2)        ; I. L.  CALL  STACK,
     177/      72 : C4 8A                         LDI     L(FORSTK)
     178/      74 : CA FE                         ST      FORPTR(P2)       ; FOR/NEXT STACK
     179/      76 :                      
     180/      76 :                      
     181/      76 :                     ;*************************************
     182/      76 :                     ;*   INTERMEDIATE LANGUAGE EXECUTOR  *
     183/      76 :                     ;*************************************
     184/      76 :                      
     185/      76 : C2 FB               EXECIL:   LD      PCLOW(P2)        ; SET P3 TO CURRENT
     186/      78 : 33                            XPAL    P3               ; IL PC.
     187/      79 : C2 FA                         LD      PCHIGH(P2)
     188/      7B : 37                            XPAH    P3
     189/      7C : C7 01               CHEAT:    LD      @1(P3)
     190/      7E : 01                            XAE                      ; GET NEW I.L. INSTRUCTION
     191/      7F : C7 01                         LD      @1(P3)           ; INTO P3 THROUGH
     192/      81 : 33                            XPAL    P3               ; OBSCURE METHODS
     193/      82 : CA FB                         ST      PCLOW(P2)        ; SIMULTANEOUSLY, INCREMENT
     194/      84 : 40                            LDE                      ; THE I.L. PC BY 2
     195/      85 : D4 0F                         ANI     0x0F             ; REMOVE FLAG FROM INSTRUCTION
     196/      87 : DC 00                         ORI     0                ; TURN INTO ACTUAL ADDRESS, (see note at top of file)
     197/      89 : 37                            XPAH    P3               ; PUT BACK INTO P3
     198/      8A : CA FA                         ST      PCHIGH(P2)
     199/      8C : 40                            LDE
     200/      8D : D4 F0                         ANI     0xF0             ; CHECK IF I.L. INSTRUCTION
     201/      8F : E4 20                         XRI     TSTBIT           ; IS A 'TEST'
     202/      91 : 98 2F                         JZ      TST
     203/      93 : E4 A0                         XRI     CALBIT|TSTBIT    ; CHECK FOR I. L.  CALL
     204/      95 : 98 07                         JZ      ILCALL
     205/      97 : E4 C0                         XRI     JMPBIT|CALBIT    ; CHECK FOR I.L. JUMP
     206/      99 : 98 E1                         JZ      CHEAT            ; l.L. JUMP IS TRIVIAL
     207/      9B : 3F                  NOJUMP:   XPPC    P3               ; MUST BE AN ML SUBROUTINE
     208/      9C : 90 D8                         JMP     EXECIL           ; IF NONE OF THE ABOVE
     209/      9E :                      
     210/      9E :                      
     211/      9E :                     ;*************************************
     212/      9E :                     ;*     INTERMEDIATE LANGUAGE CALL    *
     213/      9E :                     ;*************************************
     214/      9E :                      
     215/      9E : C2 F9               ILCALL:   LD      PCSTK(P2)
     216/      A0 : E4 D6                         XRI     L(LBUF)         ;CHECK FOR STACK OVERFLOW
     217/      A2 : 9C 04                         JNZ     ILC1
     218/      A4 : C4 0A                         LDI     10         
     219/      A6 : 90 60                         JMP     EOA
     220/      A8 : E4 D6               ILC1:     XRI     L(LBUF)         ;RESTORE ACCUMULATOR
     221/      AA : 33                            XPAL    P3              ;SAVE LOW BYTE OF NEW
     222/      AB : CA EA                         ST      TEMP(P2)        ;  I.L. PC IN TEMP
     223/      AD : C4 10                         LDI     H(PCSTAK)       ;POINT P3 AT I.L.
     224/      AF : 37                            XPAH    P3              ;  SUBROUTINE STACK
     225/      B0 : 01                            XAE                     ;SAVE NEW I.L. PC HIGH IN EX
     226/      B1 : C2 FB                         LD      PCLOW(P2)       ;SAVE OLD I.L. PC ON STACK
     227/      B3 : CF 01                         ST      @1(P3)
     228/      B5 : C2 FA                         LD      PCHIGH(P2)
     229/      B7 : CF 01                         ST      @1(P3)
     230/      B9 : C2 EA                         LD      TEMP(P2)        ;GET LOW BYTE OF NEW
     231/      BB : 33                            XPAL    P3              ;  I.L.  PC INTO P3 LOW
     232/      BC : CA F9                         ST      PCSTK(P2)       ;UPDATE I.L.  STACK POINTER
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 5 - 08.05.2023 15:13:29


     233/      BE : 40                            LDE                     ;GET HIGH BYTE OF NEW
     234/      BF : 37                            XPAH    P3              ;  I.L.  PC INTO P3 HIGH
     235/      C0 : 90 BA               CHEAT1:   JMP     CHEAT
     236/      C2 :                      
     237/      C2 :                      
     238/      C2 :                     ;*************************************
     239/      C2 :                     ;*     I.L.  'TEST' INSTRUCTION      *
     240/      C2 :                     ;*************************************
     241/      C2 :                      
     242/      C2 : CA E7               TST:      ST      CHRNUM(P2)      ;CLEAR NUMBER OF CHARS SCANNED
     243/      C4 : C5 01               SCAN:     LD      @1(P1)          ;SLEW OFF SPACES
     244/      C6 : E4 20                         XRI     ' '
     245/      C8 : 98 FA                         JZ      SCAN
     246/      CA : C5 FF                         LD      @-1(P1)         ;REPOSITION CURSOR
     247/      CC : C2 FA                         LD      PCHIGH(P2)      ;POINT P3 AT I.L.  TABLE
     248/      CE : 37                            XPAH    P3
     249/      CF : CA EC                         ST      FAILHI(P2)      ;OLD P3 BECOMES THE
     250/      D1 : C2 FB                         LD      PCLOW(P2)       ;TEST FAIL ADDRESS
     251/      D3 : 33                            XPAL    P3
     252/      D4 : CA ED                         ST      FAILLO(P2)
     253/      D6 : C7 01               LOOP2:    LD      @1(P3)
     254/      D8 : 01                            XAE                       ;SAVE CHAR FROM TABLE
     255/      D9 : BA E7                         DLD      CHRNUM(P2)       ;DECREMENT CHAR COUNT
     256/      DB : 40                            LDE                       ;GET  CHAR  BACK
     257/      DC : D4 7F                         ANI      0x7F             ;SCRUB  OFF FLAG (IF  ANY)
     258/      DE : E5 01                         XOR      @1(P1)           ;IS CHAR EQUAL  TO  TEXT  CHAR?
     259/      E0 : 9C 07                         JNZ      LNEQ             ;NO - END  TEST
     260/      E2 : 40                            LDE                       ;YES - BUT IS  IT LAST CHAR?
     261/      E3 : 94 F1                         JP       LOOP2            ;IF NOT, CONTINUE  TO COMPARE
     262/      E5 : 90 95                         JMP      CHEAT            ;IF SO, GET NEXT I. L.  
     263/      E7 : 90 8D               XO:       JMP      EXECIL           ; INSTRUCTION
     264/      E9 : C2 E7               LNEQ:     LD       CHRNUM(P2)       ;RESTORE P1 TO
     265/      EB : 01                            XAE                       ;ORIGINAL VALUE         
     266/      EC : C5 80                         LD       @EREG(P1)
     267/      EE : C2 ED                         LD       FAILLO(P2)       ;LOAD TEST-FAIL ADDRESS
     268/      F0 : 33                            XPAL     P3               ;INTO  P3
     269/      F1 : C2 EC                         LD       FAILHI(P2)
     270/      F3 : 37                            XPAH     P3
     271/      F4 : 90 CA                         JMP      CHEAT1           ;GET NEXT  I. L. INSTRUCTION
     272/      F6 :                      
     273/      F6 :                      
     274/      F6 :                     ;*************************************
     275/      F6 :                     ;*        I.L.  SUBROUTINE RETURN    *
     276/      F6 :                     ;*************************************
     277/      F6 :                      
     278/      F6 : C4 10               RTN:     LDI      H(PCSTAK)        ; POINT  P3  AT I.L.  PC STACK
     279/      F8 : 37                           XPAH     P3
     280/      F9 : C2 F9                        LD       PCSTK(P2)
     281/      FB : 33                           XPAL     P3
     282/      FC : C7 FF                        LD       @-1(P3)          ;GET  HIGH  PART  OF  OLD PC
     283/      FE : 01                           XAE
     284/      FF : C7 FF                        LD       @-1(P3)          ;GET  LOW PART OF OLD PC
     285/     101 : 33                           XPAL     P3
     286/     102 : CA F9                        ST       PCSTK(P2)        ;UPDATE IL  STACK POINTER
     287/     104 : 40                           LDE
     288/     105 : 37                           XPAH     P3               ;P3 NOW HAS OLD  IL PC
     289/     106 : 90 B8                        JMP      CHEAT1
     290/     108 : 90 41               EOA:     JMP      EO
     291/     10A :                      
     292/     10A :                     ;*************************************
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 6 - 08.05.2023 15:13:29


     293/     10A :                     ;*     SAVE GOSUB RETURN ADDRESS     *
     294/     10A :                     ;*************************************
     295/     10A :                      
     296/     10A : C2 FC               SAV:     LD      SBRPTR(P2)
     297/     10C : E4 7A                        XRI     L(DOSTAK)       ;CHECK FOR  MORE
     298/     10E : 98 1C                        JZ      SAV2            ;  THAN 8 SAVES
     299/     110 : AA FC                        ILD     SBRPTR(P2)
     300/     112 : AA FC                        ILD     SBRPTR(P2)
     301/     114 : 33                           XPAL    P3              ;SET  P3 TO
     302/     115 : C4 10                        LDI     H(SBRSTK)       ;  SUBROUTINE STACK TOP.
     303/     117 : 37                           XPAH    P3
     304/     118 : C2 F4                        LD      RUNMOD(P2)      ;IF IMMEDIATE MODE,
     305/     11A : 98 0A                        JZ      SAV1            ; SAVE NEGATIVE  ADDRESS.
     306/     11C : 35                           XPAH    P1              ;SAVE HIGH  PORTION
     307/     11D : CB FF                        ST      -1(P3)          ;  OF  CURSOR
     308/     11F : 35                           XPAH    P1
     309/     120 : 31                           XPAL    P1              ;SAVE LOW PORTION
     310/     121 : CB FE                        ST      -2(P3)          ;  OF CURSOR
     311/     123 : 31                           XPAL    P1
     312/     124 : 90 C1                        JMP     XO              ; RETURN
     313/     126 : C4 FF               SAV1:    LDI     -1              ; IMMEDIATE MODE
     314/     128 : CB FF                        ST      -1(P3)          ;  RETURN ADDRESS IS
     315/     12A : 90 BB                        JMP     XO              ;  NEGATIVE.
     316/     12C : C4 0A               SAV2:    LDI     10              ; ERROR: MORE THAN
     317/     12E : 90 1B                        JMP     EO              ;  8 GOSUBS
     318/     130 :                      
     319/     130 :                     ;*************************************
     320/     130 :                     ;*     CHECK STATEMENT FINISHED      *                      
     321/     130 :                     ;*************************************
     322/     130 :                      
     323/     130 : C5 01               DONE:    LD      @1(P1)          ;SKIP SPACES  
     324/     132 : E4 20                        XRI     ' '
     325/     134 : 98 FA                        JZ      DONE
     326/     136 : E4 2D                        XRI     ' ' | 0x0D      ;IS IT CARRIAGE RETURN?
     327/     138 : 98 04                        JZ      DONE1           ;YES - RETURN
     328/     13A : E4 37                        XRI     0x37            ;IS CHAR A ':'?
     329/     13C : 9C 01                        JNZ     DONE2           ;NO - ERROR
     330/     13E : 3F                  DONE1:   XPPC    P3              ;YES - RETURN
     331/     13F : C4 04               DONE2:   LDI     4
     332/     141 : 90 08                        JMP     EO
     333/     143 :                      
     334/     143 :                      
     335/     143 :                     ;*************************************
     336/     143 :                     ;         RETURN  FROM GOSUB         *
     337/     143 :                     ;*************************************
     338/     143 :                      
     339/     143 : C2 FC               RSTR:    LD      SBRPTR(P2)
     340/     145 : E4 6A                        XRI     L(SBRSTK)       ; CHECK FOR RETURN
     341/     147 : 9C 04                        JNZ     RSTR1           ;  W/0 GOSUB
     342/     149 : C4 09                        LDI     9
     343/     14B : 90 40               EO:      JMP     El              ; REPORT THE ERROR
     344/     14D : BA FC               RSTR1:   DLD     SBRPTR(P2)
     345/     14F : BA FC                        DLD     SBRPTR(P2)      ;POP GOSUB STACK,
     346/     151 : 33                           XPAL    P3              ;  PUT PTR INTO P3
     347/     152 : C4 10                        LDI     H(SBRSTK)
     348/     154 : 37                           XPAH    P3
     349/     155 : C3 01                        LD      1(P3)           ;IF ADDRESS NEGATIVE,
     350/     157 : 94 06                        JP      RSTR2           ;  SUBROUTINE WAS CALLED
     351/     159 : C4 00                        LDI     0               ;  FROM EDIT MODE,
     352/     15B : CA F4                        ST      RUNMOD(P2)      ;  SO RETURN TO EDITING
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 7 - 08.05.2023 15:13:29


     353/     15D : 90 88               XI:      JMP     XO
     354/     15F : 35                  RSTR2:   XPAH    P1              ; RESTORE CURSOR HIGH
     355/     160 : C3 00                        LD      0(P3)
     356/     162 : 31                           XPAL    P1              ; RESTORE CURSOR LOW
     357/     163 : C4 01                        LDI     1               ;SET RUN MODE
     358/     165 : CA F4                        ST      RUNMOD(P2)
     359/     167 : 90 F4                        JMP     XI
     360/     169 :                      
     361/     169 :                      
     362/     169 :                     ;*************************************
     363/     169 :                     ;*  TRANSFER  TO  NEW  STATEMENT     *
     364/     169 :                     ;*************************************
     365/     169 :                      
     366/     169 : C2 F2               XFER:    LD       LABLHI(P2)      ;CHECK  FOR  NON-EXISTENT LINE
     367/     16B : 94 04                        JP       XFER1
     368/     16D : C4 08                        LDI      8
     369/     16F : 90 1C                        JMP      El
     370/     171 : C4 01               XFER1:   LDI      1               ;SET  RUN  MODE  TO  1
     371/     173 : CA F4                        ST       RUNMOD(P2)
     372/     175 : 3F                           XPPC     P3
     373/     176 :                      
     374/     176 :                      
     375/     176 :                     ;*************************************
     376/     176 :                     ;*    PRINT STRING IN TEXT          *
     377/     176 :                     ;*************************************
     378/     176 :                      
     379/     176 : (MACRO)              PRS:     LDPI     P3,PUTC-1       ;POINT  P3 AT PUTC ROUTINE
     379/     176 : C4 0F                      LDI     H(PUTC-1)
     379/     178 : 37                         XPAH    P3
     379/     179 : C4 C1                      LDI     L(PUTC-1)
     379/     17B : 33                         XPAL    P3
     380/     17C : C5 01                        LD       @1(P1)          ;L0AD NEXT  CHAR
     381/     17E : E4 22                        XRI      '"'             ;IF  ",  END  OF
     382/     180 : 98 DB                        JZ       XI              ;  STRING
     383/     182 : E4 2F                        XRI      0x2F            ;IF CR, ERROR
     384/     184 : 98 05                        JZ       PRS1
     385/     186 : E4 0D                        XRI      0x0D            ;RESTORE  CHAR
     386/     188 : 3F                           XPPC     P3              ;PRINT  CHAR
     387/     189 : 90 EB                        JMP      PRS             ;GET  NEXT CHAR
     388/     18B : C4 07               PRS1:    LDI      7               ;SYNTAX ERROR
     389/     18D : 90 35               El:      JMP      E2
     390/     18F :                      
     391/     18F :                      
     392/     18F :                     ;*************************************
     393/     18F :                     ;*      PRINT NUMBER ON  STACK       *
     394/     18F :                     ;*************************************
     395/     18F :                      
     396/     18F :                     ; THIS  ROUTINE IS BASED ON DENNIS ALLISON'S BINARY TO  DECIMAL
     397/     18F :                     ; CONVERSION ROUTINE IN VOL. 1, #1 OF "DR. DOBB'S JOURNAL",
     398/     18F :                     ; BUT IS MUCH MORE OBSCURE BECAUSE OF THE STACK MANIPULATION.
     399/     18F :                      
     400/     18F : C4 10               PRN:      LDI      H(AESTK)        ; POINT  P3 AT A. E. STACK
     401/     191 : 37                            XPAH     P3
     402/     192 : AA FD                         ILD      LSTK(P2)
     403/     194 : AA FD                         ILD      LSTK(P2)
     404/     196 : 33                            XPAL     P3
     405/     197 : C4 0A                         LDI      10              ;PUT  10 ON  STACK  (WE'LL BE
     406/     199 : CB FE                         ST       -2(P3)          ;  DIVIDING  BY  IT  LATER)
     407/     19B : C4 00                         LDI      0     
     408/     19D : CB FF                         ST       -1(P3)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 8 - 08.05.2023 15:13:29


     409/     19F : C4 05                         LDI      5               ;SET CHRNUM TO POINT TO PLACE
     410/     1A1 : CA E7                         ST       CHRNUM(P2)      ;IN STACK WHERE WE STORE
     411/     1A3 : C4 FF                         LDI      -1              ;THE CHARACTERS TO PRINT
     412/     1A5 : CB 05                         ST       5(P3)           ;FIRST CHAR IS A FLAG (-1)
     413/     1A7 : C3 FD                         LD       -3(P3)          ;CHECK IF NUMBER IS NEGATIVE
     414/     1A9 : 94 13                         JP      LPNOS
     415/     1AB : C4 2D                         LDI     '-'              ;PUT '-' ON STACK, AND NEGATE
     416/     1AD : CB 04                         ST      4(P3)            ;THE NUMBER
     417/     1AF : C4 00                         LDI     0
     418/     1B1 : 03                            SCL
     419/     1B2 : FB FC                         CAD     -4(P3)
     420/     1B4 : CB FC                         ST      -4(P3)
     421/     1B6 : C4 00                         LDI     0
     422/     1B8 : FB FD                         CAD     -3(P3)
     423/     1BA : CB FD                         ST      -3(P3)
     424/     1BC : 90 9F                         JMP     XI               ;GO DO DIVISION BY  10
     425/     1BE : C4 20               LPNOS:    LDI     ' '              ;IF POSITIVE, PUT ' ' ON
     426/     1C0 : CB 04                         ST      4(P3)            ;STACK BEFORE DIVISION
     427/     1C2 : 90 99               X4:       JMP     XI
     428/     1C4 : 90 57               E2:       JMP     ERR1
     429/     1C6 :                                                                                    
     430/     1C6 :                     ;  THE DIVISION IS PERFORMED, THEN CONTROL  IS TRANSFERRED
     431/     1C6 :                     ;  TO PRN1, WHICH FOLLOWS.
     432/     1C6 :                      
     433/     1C6 : AA FD               PRN1:     ILD     LSTK(P2)        ;POINT P1  AT A.E. STACK
     434/     1C8 : AA FD                         ILD     LSTK(P2)
     435/     1CA : 31                            XPAL    P1
     436/     1CB : C4 10                         LDI     H(AESTK)
     437/     1CD : 35                            XPAH    P1
     438/     1CE : AA E7                         ILD     CHRNUM(P2)      ;INCREMENT CHARACTER STACK
     439/     1D0 : 01                            XAE                     ;  POINTER,  PUT IN EX.  REG.
     440/     1D1 : C1 01                         LD      1(P1)           ;GET REMAINDER FROM DIVIDE,
     441/     1D3 : DC 30                         ORI     '0'
     442/     1D5 : C9 80                         ST      EREG(P1)        ;PUT IT ON THE STACK
     443/     1D7 : C1 FD                         LD      -3(P1)          ;IS THE QUOTIENT ZERO YET?
     444/     1D9 : D9 FC                         OR      -4(P1)
     445/     1DB : 98 0A                         JZ      QPRNT           ;YES - GO PRINT THE NUMBER
     446/     1DD : C4 0F                         LDI     H(PRNUM1)       ;N0 - CHANGE THE I. L.  PC
     447/     1DF : CA FA                         ST      PCHIGH(P2)      ;SO THAT DIVIDE IS
     448/     1E1 : C4 33                         LDI     L(PRNUM1)       ;PERFORMED AGAIN
     449/     1E3 : CA FB                         ST      PCLOW(P2)
     450/     1E5 : 90 DB                         JMP     X4              ;G0 DO DIVISION BY 10 AGAIN
     451/     1E7 : (MACRO)              QPRNT:    LDPI    P3,PUTC-1       ;POINT P3 AT PUTC ROUTINE
     451/     1E7 : C4 0F                      LDI     H(PUTC-1)
     451/     1E9 : 37                         XPAH    P3
     451/     1EA : C4 C1                      LDI     L(PUTC-1)
     451/     1EC : 33                         XPAL    P3
     452/     1ED : C2 F5                         LD      LISTNG(P2)      ;IF LISTING, SKIP PRINTING
     453/     1EF : 9C 06                         JNZ     QPRNT2          ;LEADING SPACE
     454/     1F1 : C1 04                         LD      4(P1)           ;PRINT EITHER
     455/     1F3 : 3F                            XPPC    P3              ;OR LEADING SPACE
     456/     1F4 : C2 E7                         LD      CHRNUM(P2)      ;GET EX.  REG. VALUE BACK
     457/     1F6 : 01                            XAE
     458/     1F7 : C5 80               QPRNT2:   LD      @EREG(P1)       ;POINT P3 AT FIRST CHAR
     459/     1F9 : C1 00                         LD      (P1)            ;TO BE PRINTED
     460/     1FB : 3F                  LOOP3:    XPPC    P3              ;PRINT THE CHARACTER
     461/     1FC : C5 FF                         LD      @-1(P1)         ;GET NEXT CHARACTER
     462/     1FE : 94 FB                         JP      LOOP3           ;REPEAT UNTIL = -1
     463/     200 : C4 50                         LDI     L(AESTK)
     464/     202 : CA FD                         ST      LSTK(P2)        ; CLEAR THE A. E.  STACK
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 9 - 08.05.2023 15:13:29


     465/     204 : C2 F5                         LD      LISTNG(P2)      ;PRINT A TRAILING SPACE
     466/     206 : 9C BA                         JNZ     X4              ;IF NOT LISTING PROGRAM
     467/     208 : C4 20                         LDI     ' '
     468/     20A : 3F                            XPPC    P3
     469/     20B : 90 B5                         JMP     X4
     470/     20D :                      
     471/     20D :                      
     472/     20D :                     ;*************************************
     473/     20D :                     ;*      CARRIAGE RETURN/LINE FEED    *
     474/     20D :                     ;*************************************
     475/     20D :                      
     476/     20D : (MACRO)              NLINE:    LDPI    P3,PUTC-1       ;POINT P3 AT PUTC ROUTINE
     476/     20D : C4 0F                      LDI     H(PUTC-1)
     476/     20F : 37                         XPAH    P3
     476/     210 : C4 C1                      LDI     L(PUTC-1)
     476/     212 : 33                         XPAL    P3
     477/     213 : C4 0D                         LDI     0x0D            ;CARRIAGE RETURN
     478/     215 : 3F                            XPPC    P3
     479/     216 : C4 0A                         LDI     0x0A            ;LINE FEED
     480/     218 : 3F                            XPPC    P3
     481/     219 : 90 A7               X5:       JMP     X4
     482/     21B :                                                                                   
     483/     21B :                      
     484/     21B :                     ;*************************************
     485/     21B :                     ;*         ERROR  ROUTINE            *
     486/     21B :                     ;*************************************
     487/     21B :                      
     488/     21B : C4 05               ERR:      LDI     5                ;SYNTAX ERROR
     489/     21D : CA EB               ERR1:     ST      NUM(P2)          ;SAVE ERROR #
     490/     21F : C2 EB               ERR2:     LD      NUM(P2)
     491/     221 : CA EA                         ST      TEMP(P2)
     492/     223 : (MACRO)                        LDPI    P3,PUTC-1        ;POINT P3 AT PUTC
     492/     223 : C4 0F                      LDI     H(PUTC-1)
     492/     225 : 37                         XPAH    P3
     492/     226 : C4 C1                      LDI     L(PUTC-1)
     492/     228 : 33                         XPAL    P3
     493/     229 : C4 0D                         LDI     0x0D             ; PRINT CR/LF
     494/     22B : 3F                            XPPC    P3
     495/     22C : C4 0A                         LDI     0x0A
     496/     22E : 3F                            XPPC    P3
     497/     22F : (MACRO)                        LDPI    P1,MESGS         ;P1  -> ERROR MESSAGES
     497/     22F : C4 0F                      LDI     H(MESGS)
     497/     231 : 35                         XPAH    P1
     497/     232 : C4 3B                      LDI     L(MESGS)
     497/     234 : 31                         XPAL    P1
     498/     235 : BA EB               QQ1:      DLD     NUM(P2)          ;IS  THIS THE RIGHT MESSAGE?
     499/     237 : 98 06                         JZ      QQMSG            ;YES - GO PRINT  IT
     500/     239 : C5 01               LOOP4:    LD      @1(P1)           ;N0 - SCAN THROUGH TO
     501/     23B : 94 FC                         JP      LOOP4            ;  NEXT MESSAGE
     502/     23D : 90 F6                         JMP     QQ1
     503/     23F : C5 01               QQMSG:    LD      @1(P1)           ;GET MESSAGE CHAR
     504/     241 : 3F                            XPPC    P3                ;PRINT IT
     505/     242 : C1 FF                         LD      -1(P1)           ; IS  MESSAGE DONE?
     506/     244 : 94 F9                         JP      QQMSG            ;N0  - GET NEXT CHAR
     507/     246 : C2 EA                         LD      TEMP(P2)         ;WAS THIS A BREAK MESSAGE?
     508/     248 : E4 0E                         XRI     14
     509/     24A : 98 0D                         JZ      QQ3              ;YES - SKIP PRINTING 'ERROR'
     510/     24C : (MACRO)                        LDPI    P1,MESGS         ;NO  - PRINT  ERROR
     510/     24C : C4 0F                      LDI     H(MESGS)
     510/     24E : 35                         XPAH    P1
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 10 - 08.05.2023 15:13:29


     510/     24F : C4 3B                      LDI     L(MESGS)
     510/     251 : 31                         XPAL    P1
     511/     252 : C5 01               QQ2:      LD      @1(P1)           ;GET CHARACTER
     512/     254 : 3F                            XPPC    P3               ;PRINT IT
     513/     255 : C1 FF                         LD      -1(P1)           ;DONE?
     514/     257 : 94 F9                         JP      QQ2              ;NO- REPEAT LOOP
     515/     259 : C2 F4               QQ3:      LD      RUNMOD(P2)       ;DON'T PRINT LINE #
     516/     25B : 98 4D                         JZ      FIN              ;  IF IMMEDIATE MODE
     517/     25D : C4 20                         LDI     ' '
     518/     25F : 3F                            XPPC    P3               ;SPACE
     519/     260 : C4 41                         LDI     'A'              ;AT
     520/     262 : 3F                            XPPC    P3
     521/     263 : C4 54                         LDI     'T'
     522/     265 : 3F                            XPPC    P3
     523/     266 : C4 10                         LDI     H(AESTK)         ; POINT P3 AT A. E. STACK
     524/     268 : 37                            XPAH    P3
     525/     269 : AA FD                         ILD     LSTK(P2)
     526/     26B : AA FD                         ILD     LSTK(P2)
     527/     26D : 33                            XPAL    P3
     528/     26E : C2 F7                         LD      HILINE(P2)      ;GET HIGH BYTE OF LINE #
     529/     270 : CB FF                         ST      -1(P3)          ;PUT ON STACK
     530/     272 : C2 F8                         LD      LOLINE(P2)      ; GET LOW BYTE OF LINE #
     531/     274 : CB FE                         ST      -2(P3)          ;PUT ON STACK
     532/     276 : C4 31                         LDI     L(ERRNUM)       ; GO TO PRN
     533/     278 : CA FB                         ST      PCLOW(P2)
     534/     27A : C4 0E                         LDI     H(ERRNUM)                                  
     535/     27C : CA FA                         ST      PCHIGH(P2)
     536/     27E : 90 99               X5A:      JMP     X5
     537/     280 :                      
     538/     280 :                      
     539/     280 :                     ;*************************************
     540/     280 :                     ;*    BREAK,  NXT,  FIN,  & STRT     *
     541/     280 :                     ;*************************************
     542/     280 :                      
     543/     280 : C4 0E               BREAK:  LDI     14              ;***  CAUSE  A  BREAK  ***
     544/     282 : 90 99               E3A:    JMP     ERR1
     545/     284 :                                                     ;*** NEXT STATEMENT ***
     546/     284 : C2 F4               NXT:    LD      RUNMOD(P2)      ; IF IN EDIT MODE,
     547/     286 : 98 22                       JZ      FIN             ;  STOP EXECUTION
     548/     288 : C1 00                       LD      (P1)            ;IF WE HIT END OF FILE,
     549/     28A : D4 80                       ANI     0x80             ;  FINISH UP THINGS
     550/     28C : 9C 1C                       JNZ     FIN
     551/     28E : 06                          CSA                     ; BREAK IF SOMEONE IS
     552/     28F : D4 20                       ANI     0x20            ;  TYPING ON THE CONSOLE
     553/     291 : 98 ED                       JZ      BREAK
     554/     293 : C1 FF                       LD      -1(P1)          ;GET LAST CHARACTER SCANNED
     555/     295 : E4 0D                       XRI     0x0D            ;WAS IT CARRIAGE RETURN?
     556/     297 : 9C 08                       JNZ     NXT1            ;YES - SKIP FOLLOWING UPDATES
     557/     299 : C5 01                       LD      @1(P1)          ;GET HIGH BYTE OF NEXT LINE #
     558/     29B : CA F7                       ST      HILINE(P2)      ;SAVE IT
     559/     29D : C5 02                       LD      @2(P1)          ;GET LOW BYTE OF LINE #,  SKIP
     560/     29F : CA F8                       ST      LOLINE(P2)      ;  LINE LENGTH BYTE
     561/     2A1 : C4 0C               NXT1:   LDI     H(STMT)         ; GO TO  STMT  IN IL TABLE
     562/     2A3 : CA FA                       ST      PCHIGH(P2)
     563/     2A5 : C4 86                       LDI     L(STMT)
     564/     2A7 : CA FB                       ST      PCLOW(P2)
     565/     2A9 : 3F                          XPPC    P3
     566/     2AA :                      
     567/     2AA : C4 00               FIN:    LDI     0               ;*** FINISH EXECUTION ***
     568/     2AC : CA F4                       ST      RUNMOD(P2)      ; CLEAR RUN MODE
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 11 - 08.05.2023 15:13:29


     569/     2AE : C4 50                       LDI     L(AESTK)        ; CLEAR ARITHMETIC STACK
     570/     2B0 : CA FD                       ST      LSTK(P2)
     571/     2B2 : C4 1C                       LDI     L(START)        ; MODIFY I.L.  PC TO RETURN
     572/     2B4 : CA FB                       ST      PCLOW(P2)       ;  TO PROMPT FOR COMMAND
     573/     2B6 : C4 0C                       LDI     H(START)
     574/     2B8 : CA FA                       ST      PCHIGH(P2)
     575/     2BA : C4 A6                       LDI     L(PCSTAK)
     576/     2BC : CA F9                       ST      PCSTK(P2)
     577/     2BE : 90 BE                       JMP     X5A
     578/     2C0 :                                                       ;*** START EXECUTION ***
     579/     2C0 : AA F4               STRT:   ILD     RUNMOD(P2)      ;RUN MODE = 1
     580/     2C2 : C2 E9                       LD      TEMP2(P2)       ;POINT CURSOR TO
     581/     2C4 : 35                          XPAH    P1              ;  START OF NIBL PROGRAM
     582/     2C5 : C2 E8                       LD      TEMP3(P2)
     583/     2C7 : 31                          XPAL    P1
     584/     2C8 : C4 6A                       LDI     L(SBRSTK)       ;EMPTY SOME STACKS:
     585/     2CA : CA FC                       ST      SBRPTR(P2)      ;  GOSUB STACK,
     586/     2CC : C4 8A                       LDI     L(FORSTK)
     587/     2CE : CA FE                       ST      FORPTR(P2)      ;  FOR STACK
     588/     2D0 : C4 7A                       LDI     L(DOSTAK)
     589/     2D2 : CA FF                       ST      DOPTR(P2)       ;  & DO/UNTIL STACK
     590/     2D4 : 3F                          XPPC    P3              ;RETURN
     591/     2D5 : 90 A7               X6:     JMP     X5A
     592/     2D7 : 90 A9               E4:     JMP     E3A
     593/     2D9 :                      
     594/     2D9 :                      
     595/     2D9 :                     ;*************************************
     596/     2D9 :                     ;*        LIST NIBL PROGRAM          *
     597/     2D9 :                     ;*************************************
     598/     2D9 :                      
     599/     2D9 : C1 00               LST:    LD      (P1)            ;CHECK FOR END OF FILE
     600/     2DB : E4 80                       XRI     0x80
     601/     2DD : 94 18                       JP      LST2
     602/     2DF : C4 10                       LDI     H(AESTK)        ;GET LINE NUMBER ONTO STACK
     603/     2E1 : 37                          XPAH    P3
     604/     2E2 : AA FD                       ILD     LSTK(P2)
     605/     2E4 : AA FD                       ILD     LSTK(P2)
     606/     2E6 : 33                          XPAL    P3
     607/     2E7 : C5 01                       LD      @1(P1)
     608/     2E9 : CB FF                       ST      -1(P3)   
     609/     2EB : C5 01                       LD      @1(P1)
     610/     2ED : CB FE                       ST      -2(P3)
     611/     2EF : C5 01                       LD      @1(P1)          ;SKIP OVER LINE LENGTH
     612/     2F1 : C4 01                       LDI     1
     613/     2F3 : CA F5                       ST      LISTNG(P2)      ;SET LISTING FLAG
     614/     2F5 : 90 DE                       JMP     X6              ;GO PRINT LINE NUMBER
     615/     2F7 : C4 00               LST2:   LDI     0
     616/     2F9 : CA F5                       ST      LISTNG(P2)      ;CLEAR LISTING FLAG
     617/     2FB : (MACRO)                      JS      P3,NXT          ;GO TO NXT
     617/     2FB : C4 02                      LDI    H(NXT-1)
     617/     2FD : 37                         XPAH   P3
     617/     2FE : C4 83                      LDI    L(NXT-1)
     617/     300 : 33                         XPAL   P3
     617/     301 : 3F                         XPPC   P3
     618/     302 : 90 D1               X6A:    JMP     X6
     619/     304 : 90 D1               E5:     JMP     E4
     620/     306 : (MACRO)              LST3:   LDPI    P3,PUTC-1       ;POINT P3 AT PUTC
     620/     306 : C4 0F                      LDI     H(PUTC-1)
     620/     308 : 37                         XPAH    P3
     620/     309 : C4 C1                      LDI     L(PUTC-1)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 12 - 08.05.2023 15:13:29


     620/     30B : 33                         XPAL    P3
     621/     30C : 06                  LST4:   CSA
     622/     30D : D4 20                       ANI     0x20
     623/     30F : 98 E6                       JZ      LST2            ;IF  TYPING, STOP
     624/     311 : C5 01                       LD      @1(P1)          ;GET NEXT CHAR
     625/     313 : E4 0D                       XRI     0x0D            ;TEST FOR CR
     626/     315 : 98 05                       JZ      LST5
     627/     317 : E4 0D                       XRI     0x0D            ;GET CHARACTER
     628/     319 : 3F                          XPPC    P3              ;PRINT CHARACTER
     629/     31A : 90 F0                       JMP     LST4
     630/     31C : C4 0D               LST5:   LDI     0x0D            ; CARRIAGE RETURN
     631/     31E : 3F                          XPPC    P3
     632/     31F : C4 0A                       LDI     0x0A              ;LINE FEED
     633/     321 : 3F                          XPPC    P3
     634/     322 : 02                          CCL
     635/     323 : C4 4B                       LDI     L(LIST3)
     636/     325 : CA FB                       ST      PCLOW(P2)
     637/     327 : C4 0C                       LDI     H(LIST3)
     638/     329 : CA FA                       ST      PCHIGH(P2)
     639/     32B : 90 AC                       JMP     LST             ;GET NEXT LINE
     640/     32D :                      
     641/     32D :                      
     642/     32D :                     ;*************************************
     643/     32D :                     ;*          ADD AND SUBTRACT         *
     644/     32D :                     ;*************************************
     645/     32D :                      
     646/     32D : C4 10               ADD:    LDI     H(AESTK)         ;SET P3 TO CURRENT
     647/     32F : 37                          XPAH    P3               ;STACK LOCATION
     648/     330 : BA FD                       DLD     LSTK(P2)
     649/     332 : BA FD                       DLD     LSTK(P2)
     650/     334 : 33                          XPAL    P3
     651/     335 : 02                          CCL
     652/     336 : C3 FE                       LD      -2(P3)           ;REPLACE TWO TOP ITEMS
     653/     338 : F3 00                       ADD     0(P3)            ;ON STACK BY THEIR SUM
     654/     33A : CB FE                       ST      -2(P3)
     655/     33C : C3 FF                       LD      -1(P3)
     656/     33E : F3 01                       ADD     1(P3)
     657/     340 : CB FF                       ST      -1(P3)
     658/     342 : 90 BE               X7:     JMP     X6A
     659/     344 :                      
     660/     344 : C4 10               SUB:    LDI     H(AESTK)         ;SET P3 TO CURRENT
     661/     346 : 37                          XPAH    P3               ;STACK LOCATION
     662/     347 : BA FD                       DLD     LSTK(P2)
     663/     349 : BA FD                       DLD     LSTK(P2)
     664/     34B : 33                          XPAL    P3
     665/     34C : 03                          SCL
     666/     34D : C3 FE                       LD      -2(P3)          ;REPLACE TWO TOP ITEMS
     667/     34F : FB 00                       CAD     0(P3)           ;ON STACK BY THEIR
     668/     351 : CB FE                       ST      -2(P3)          ;DIFFERENCE
     669/     353 : C3 FF                       LD      -1(P3)
     670/     355 : FB 01                       CAD     1(P3)
     671/     357 : CB FF                       ST      -1(P3)
     672/     359 : 90 A7                       JMP     X6A
     673/     35B :                      
     674/     35B :                      
     675/     35B :                     ;*************************************
     676/     35B :                     ;*           NEGATE                  *
     677/     35B :                     ;*************************************
     678/     35B :                      
     679/     35B : C4 10               NEG:     LDI     H(AESTK)        ;SET P3  TO CURRENT
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 13 - 08.05.2023 15:13:29


     680/     35D : 37                           XPAH    P3              ;  STACK  LOCATION
     681/     35E : C2 FD                        LD      LSTK(P2)
     682/     360 : 33                           XPAL    P3
     683/     361 : 03                           SCL
     684/     362 : C4 00                        LDI     0
     685/     364 : FB FE                        CAD     -2(P3)          ; NEGATE TOP ITEM ON STACK
     686/     366 : CB FE                        ST      -2(P3)
     687/     368 : C4 00                        LDI     0
     688/     36A : FB FF                        CAD     -1(P3)
     689/     36C : CB FF                        ST      -1(P3)
     690/     36E : 90 D2               X8:      JMP     X7
     691/     370 : 90 92               E6:      JMP     E5
     692/     372 :                      
     693/     372 :                      
     694/     372 :                     ;*************************************
     695/     372 :                     ;*          MULTIPLY                 *
     696/     372 :                     ;*************************************
     697/     372 :                      
     698/     372 : C4 10               MUL:    LDI     H(AESTK)        ;SET P3 TO CURRENT
     699/     374 : 37                          XPAH    P3              ;STACK LOCATION
     700/     375 : C2 FD                       LD      LSTK(P2)
     701/     377 : 33                          XPAL    P3              ;DETERMINE SIGN OF PRODUCT, 
     702/     378 : C3 FF                       LD      -1(P3)          ;SAVE IN TEMP(P2)
     703/     37A : E3 FD                       XOR     -3(P3)
     704/     37C : CA EA                       ST      TEMP(P2)
     705/     37E : C3 FF                       LD      -1(P3)          ;CHECK FOR NEGATIVE
     706/     380 : 94 0D                       JP      MM1             ;MULTIPLIER
     707/     382 : 03                          SCL
     708/     383 : C4 00                       LDI     0               ;IF NEGATIVE,
     709/     385 : FB FE                       CAD     -2(P3)          ;NEGATE
     710/     387 : CB FE                       ST      -2(P3)
     711/     389 : C4 00                       LDI     0
     712/     38B : FB FF                       CAD     -1(P3)
     713/     38D : CB FF                       ST      -1(P3)
     714/     38F : C3 FD               MM1:    LD      -3(P3)          ;CHECK FOR NEGATIVE
     715/     391 : 94 0D                       JP      MM2             ;MULTIPLICAND
     716/     393 : 03                          SCL
     717/     394 : C4 00                       LDI     0               ;IF NEGATIVE,
     718/     396 : FB FC                       CAD     -4(P3)          ;NEGATE
     719/     398 : CB FC                       ST      -4(P3)
     720/     39A : C4 00                       LDI     0
     721/     39C : FB FD                       CAD     -3(P3)
     722/     39E : CB FD                       ST      -3(P3)
     723/     3A0 : C4 00               MM2:    LDI     0               ;CLEAR WORKSPACE
     724/     3A2 : CB 00                       ST      0(P3)
     725/     3A4 : CB 01                       ST      1(P3)
     726/     3A6 : CB 02                       ST      2(P3)
     727/     3A8 : CB 03                       ST      3(P3)
     728/     3AA : C4 10                       LDI     16              ;SET COUNTER TO 16
     729/     3AC : CA EB                       ST      NUM(P2)
     730/     3AE : C3 FF               LOOP5:  LD      -1(P3)          ;ROTATE MULTIPLIER
     731/     3B0 : 1F                          RRL                     ;RIGHT ONE BIT
     732/     3B1 : CB FF                       ST      -1(P3)
     733/     3B3 : C3 FE                       LD      -2(P3)
     734/     3B5 : 1F                          RRL
     735/     3B6 : CB FE                       ST      -2(P3)
     736/     3B8 : 06                          CSA                     ;CHECK FOR CARRY BIT
     737/     3B9 : 94 11                       JP      MM3             ;IF NOT SET, DON'T DO ADD
     738/     3BB : 02                          CCL
     739/     3BC : C3 02                       LD      2(P3)           ;ADD MULTIPLICAND
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 14 - 08.05.2023 15:13:29


     740/     3BE : F3 FC                       ADD     -4(P3)          ;INTO WORKSPACE
     741/     3C0 : CB 02                       ST      2(P3)
     742/     3C2 : C3 03                       LD      3(P3)
     743/     3C4 : F3 FD                       ADD     -3(P3)
     744/     3C6 : CB 03                       ST      3(P3)
     745/     3C8 : 90 02                       JMP     MM3
     746/     3CA : 90 A4               E6A:    JMP     E6
     747/     3CC : 02                  MM3:    CCL
     748/     3CD : C3 03                       LD      3(P3)           ;SHIFT WORKSPACE RIGHT BY 1
     749/     3CF : 1F                          RRL
     750/     3D0 : CB 03                       ST      3(P3)
     751/     3D2 : C3 02                       LD      2(P3)
     752/     3D4 : 1F                          RRL
     753/     3D5 : CB 02                       ST      2(P3)
     754/     3D7 : C3 01                       LD      1(P3)
     755/     3D9 : 1F                          RRL
     756/     3DA : CB 01                       ST      1(P3)
     757/     3DC : C3 00                       LD      0(P3)
     758/     3DE : 1F                          RRL
     759/     3DF : CB 00                       ST      0(P3)
     760/     3E1 : BA EB                       DLD     NUM(P2)         ;DECREMENT COUNTER
     761/     3E3 : 9C C9                       JNZ     LOOP5           ;LOOP IF NOT ZERO
     762/     3E5 : 90 02                       JMP     MM4
     763/     3E7 : 90 85               X9:     JMP     X8
     764/     3E9 : C2 EA               MM4:    LD      TEMP(P2)        ; CHECK SIGN WORD
     765/     3EB : 94 0D                       JP      MMEXIT          ;IF BIT7 = 1,  NEGATE PRODUCT
     766/     3ED : 03                          SCL
     767/     3EE : C4 00                       LDI     0
     768/     3F0 : FB 00                       CAD     0(P3)
     769/     3F2 : CB 00                       ST      0(P3)
     770/     3F4 : C4 00                       LDI     0
     771/     3F6 : FB 01                       CAD     1(P3)
     772/     3F8 : CB 01                       ST      1(P3)
     773/     3FA : C3 00               MMEXIT: LD      0(P3)            ;PUT PRODUCT ON TOP
     774/     3FC : CB FC                       ST      -4(P3)           ;OF STACK
     775/     3FE : C3 01                       LD      1(P3)
     776/     400 : CB FD                       ST      -3(P3)
     777/     402 : BA FD                       DLD     LSTK(P2)         ;SUBTRACT 2 FROM
     778/     404 : BA FD                       DLD     LSTK(P2)         ;LSTK
     779/     406 : 90 DF                       JMP     X9
     780/     408 :                      
     781/     408 :                      
     782/     408 :                     ;*************************************
     783/     408 :                     ;*            DIVIDE                 *
     784/     408 :                     ;*************************************
     785/     408 :                      
     786/     408 : C4 10               DIV:    LDI     H(AESTK)
     787/     40A : 37                          XPAH    P3
     788/     40B : C2 FD                       LD      LSTK(P2)  
     789/     40D : 33                          XPAL    P3
     790/     40E : C3 FF                       LD      -1(P3)          ; CHECK FOR DIVISION BY 0
     791/     410 : DB FE                       OR      -2(P3)
     792/     412 : 9C 04                       JNZ     QD0
     793/     414 : C4 0D                       LDI     13
     794/     416 : 90 B2                       JMP     E6A
     795/     418 : C3 FD               QD0:    LD      -3(P3)
     796/     41A : E3 FF                       XOR     -1(P3)
     797/     41C : CA EA                       ST      TEMP(P2)        ;SAVE SIGN OF QUOTIENT
     798/     41E : C3 FD                       LD      -3(P3)          ; IS DIVIDEND POSITIVE?
     799/     420 : 94 11                       JP      QDPOS           ;YES - JUMP
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 15 - 08.05.2023 15:13:29


     800/     422 : C4 00                       LDI     0
     801/     424 : 03                          SCL
     802/     425 : FB FC                       CAD     -4(P3)          ;N0 - NEGATE DIVIDEND,
     803/     427 : CB 03                       ST      3(P3)           ;  STORE IN RIGHT HALF
     804/     429 : C4 00                       LDI     0               ;  OF 32-BIT ACCUMULATOR
     805/     42B : FB FD                       CAD     -3(P3)
     806/     42D : CB 02                       ST      2(P3)
     807/     42F : 90 0A                       JMP     QD1
     808/     431 : 90 B4               X9A:    JMP     X9
     809/     433 : C3 FD               QDPOS:  LD      -3(P3)          ; STORE NON-NEGATED DIVIDEND
     810/     435 : CB 02                       ST      2(P3)           ;  IN 32-BIT ACCUMULATOR
     811/     437 : C3 FC                       LD      -4(P3)
     812/     439 : CB 03                       ST      3(P3)
     813/     43B : C3 FF               QD1:    LD      -1(P3)          ; CHECK FOR NEGATIVE DIVISOR
     814/     43D : 94 0D                       JP      QD2
     815/     43F : C4 00                       LDI     0               ; NEGATE DIVISOR
     816/     441 : 03                          SCL
     817/     442 : FB FE                       CAD     -2(P3)
     818/     444 : CB FE                       ST      -2(P3)
     819/     446 : C4 00                       LDI     0
     820/     448 : FB FF                       CAD     -1(P3)
     821/     44A : CB FF                       ST      -1(P3)
     822/     44C : C4 00               QD2:    LDI     0               ;PUT  ZERO  IN
     823/     44E : CB 01                       ST      1(P3)           ;   LEFT HALF OF 32-BIT ACC,
     824/     450 : CB 00                       ST      0(P3)
     825/     452 : CA EB                       ST      NUM(P2)         ;   THE COUNTER,  AND
     826/     454 : CB FD                       ST      -3(P3)          ;   IN THE  DIVIDEND,  NOW USED
     827/     456 : CB FC                       ST      -4(P3)          ;   STORE THE QUOTIENT
     828/     458 : 02                  LOOP6:  CCL                     ; BEGIN MAIN DIVIDE LOOP - 
     829/     459 : C3 FC                       LD      -4(P3)          ;   SHIFT QUOTIENT LEFT,
     830/     45B : F3 FC                       ADD     -4(P3)
     831/     45D : CB FC                       ST      -4(P3)                       
     832/     45F : C3 FD                       LD      -3(P3)
     833/     461 : F3 FD                       ADD     -3(P3)
     834/     463 : CB FD                       ST      -3(P3)
     835/     465 : 02                          CCL                     ;   SHIFT 32-BIT ACC LEFT,
     836/     466 : C3 03                       LD      3(P3)
     837/     468 : F3 03                       ADD     3(P3)
     838/     46A : CB 03                       ST      3(P3)                                    
     839/     46C : C3 02                       LD      2(P3)
     840/     46E : F3 02                       ADD     2(P3)
     841/     470 : CB 02                       ST      2(P3)
     842/     472 : C3 01                       LD      1(P3)
     843/     474 : F3 01                       ADD     1(P3)
     844/     476 : CB 01                       ST      1(P3)
     845/     478 : C3 00                       LD      (P3)
     846/     47A : F3 00                       ADD     (P3)
     847/     47C : CB 00                       ST      (P3)
     848/     47E : 03                          SCL
     849/     47F : C3 01                       LD      1(P3)           ;   SUBTRACT DIVISOR INTO
     850/     481 : FB FE                       CAD     -2(P3)          ;    LEFT HALF OF ACC,   
     851/     483 : CB 01                       ST      1(P3)
     852/     485 : C3 00                       LD      (P3)
     853/     487 : FB FF                       CAD     -1(P3)
     854/     489 : CB 00                       ST      (P3)
     855/     48B : 94 11                       JP      QDENT1          ;   IF RESULT IS NEGATIVE,
     856/     48D : 02                          CCL                     ;    RESTORE ORIGINAL CONTENTS
     857/     48E : C3 01                       LD      1(P3)           ;    OF ACC BY ADDING DIVISOR
     858/     490 : F3 FE                       ADD     -2(P3)
     859/     492 : CB 01                       ST      1(P3)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 16 - 08.05.2023 15:13:29


     860/     494 : C3 00                       LD      (P3)
     861/     496 : F3 FF                       ADD     -1(P3)
     862/     498 : CB 00                       ST      (P3)
     863/     49A : 90 08                       JMP     QD3
     864/     49C : 90 93               X9B:    JMP     X9A
     865/     49E : C3 FC               QDENT1: LD      -4(P3)          ;ELSE IF RESULT POSITIVE,
     866/     4A0 : DC 01                       ORI     1               ;RECORD A 1  IN QUOTIENT
     867/     4A2 : CB FC                       ST      -4(P3)          ;W/0 RESTORING THE ACC
     868/     4A4 : AA EB               QD3:    ILD     NUM(P2)         ;INCREMENT THE COUNTER
     869/     4A6 : E4 10                       XRI     16              ;ARE WE DONE?
     870/     4A8 : 9C AE                       JNZ     LOOP6           ;LOOP IF NOT  DONE
     871/     4AA : C2 EA                       LD      TEMP(P2)        ;CHECK THE QUOTIENT'S SIGN,
     872/     4AC : 94 0D                       JP      QDEND           ;  NEGATING IF NECESSARY
     873/     4AE : C4 00                       LDI     0
     874/     4B0 : 03                          SCL
     875/     4B1 : FB FC                       CAD     -4(P3) 
     876/     4B3 : CB FC                       ST      -4(P3)
     877/     4B5 : C4 00                       LDI     0
     878/     4B7 : FB FD                       CAD     -3(P3)
     879/     4B9 : CB FD                       ST       -3(P3)
     880/     4BB : BA FD               QDEND:  DLD     LSTK(P2)        ;DECREMENT THE  STACK POINTER,
     881/     4BD : BA FD                       DLD     LSTK(P2)
     882/     4BF : 90 DB                       JMP     X9B             ;  AND EXIT
     883/     4C1 :                      
     884/     4C1 :                      
     885/     4C1 :                     ;*************************************
     886/     4C1 :                     ;*         STORE VARIABLE            *
     887/     4C1 :                     ;*************************************
     888/     4C1 :                      
     889/     4C1 : C4 10               STORE:  LDI     H(AESTK)      ;SET P3 TO STACK
     890/     4C3 : 37                          XPAH     P3
     891/     4C4 : C2 FD                       LD      LSTK(P2)
     892/     4C6 : 33                          XPAL     P3
     893/     4C7 : C7 FD                       LD      @-3(P3)       ;GET VARIABLE INDEX
     894/     4C9 : 01                          XAE                   ;PUT IN E REG
     895/     4CA : C3 01                       LD      1(P3)
     896/     4CC : CA 80                       ST      EREG(P2)      ;STORE LOWER 3  BITS
     897/     4CE : 02                          CCL                   ;  INTO VARIABLE
     898/     4CF : 40                          LDE                   ;INCREMENT INDEX
     899/     4D0 : F4 01                       ADI      1
     900/     4D2 : 01                          XAE
     901/     4D3 : C3 02                       LD       2(P3)
     902/     4D5 : CA 80                       ST       EREG(P2)     ;STORE UPPER 8 BITS
     903/     4D7 : 33                          XPAL     P3           ;INTO VARIABLE
     904/     4D8 : CA FD                       ST       LSTK(P2)     ;UPDATE STACK POINTER
     905/     4DA : (MACRO)              X10:    JS       P3,EXECIL
     905/     4DA : C4 00                      LDI    H(EXECIL-1)
     905/     4DC : 37                         XPAH   P3
     905/     4DD : C4 75                      LDI    L(EXECIL-1)
     905/     4DF : 33                         XPAL   P3
     905/     4E0 : 3F                         XPPC   P3
     906/     4E1 :                      
     907/     4E1 :                      
     908/     4E1 :                     ;*************************************
     909/     4E1 :                     ;*   TEST FOR  VARIABLE  IN TEXT     *
     910/     4E1 :                     ;*************************************
     911/     4E1 :                      
     912/     4E1 : C5 01               TSTVAR:  LD      @1(P1)
     913/     4E3 : E4 20                        XRI     ' '             ;SLEW OFF SPACES
     914/     4E5 : 98 FA                        JZ      TSTVAR 
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 17 - 08.05.2023 15:13:29


     915/     4E7 : C1 FF                        LD      -1(P1)          ;CHARACTER IN QUESTION
     916/     4E9 : 03                           SCL
     917/     4EA : FC 5B                        CAI     'Z'+1           ;SUBTRACT 'Z'+l
     918/     4EC : 94 05                        JP      TV_FAIL         ;N0T VARIABLE IF POSITIVE
     919/     4EE : 03                           SCL
     920/     4EF : FC E6                        CAI     'A'-'Z'-1       ;SUBTRACT 'A'
     921/     4F1 : 94 12                        JP      TVMAYBE         ;IF POS, MAY BE VARIABLE
     922/     4F3 : C5 FF               TV_FAIL: LD      @-1(P1)         ;BACKSPACE CURSOR
     923/     4F5 : C2 FB                        LD      PCLOW(P2)       ;GET TEST-FAIL ADDRESS
     924/     4F7 : 33                           XPAL    P3              ;FROM I. L. TABLE, PUT IT
     925/     4F8 : C2 FA                        LD      PCHIGH(P2)      ;INTO I.L. PROGRAM COUNTER
     926/     4FA : 37                           XPAH    P3
     927/     4FB : C3 00                        LD      (P3)
     928/     4FD : CA FA                        ST      PCHIGH(P2)
     929/     4FF : C3 01                        LD      1(P3)
     930/     501 : CA FB                        ST      PCLOW(P2)
     931/     503 : 90 D5                        JMP     X10
     932/     505 : 01                  TVMAYBE: XAE                     ;SAVE VALUE (0-25)
     933/     506 : C1 00                        LD      (P1)            ;CHECK FOLLOWING CHAR
     934/     508 : 03                           SCL                     ;MUST NOT BE A LETTER
     935/     509 : FC 5B                        CAI     'Z'+1           ;OTHERWISE WE'D BE LOOKING
     936/     50B : 94 05                        JP      TV_OK           ;AT A KEYWORD, NOT A VARIABLE
     937/     50D : 03                           SCL
     938/     50E : FC E6                        CAI     'A'-'Z'-1
     939/     510 : 94 E1                        JP      TV_FAIL
     940/     512 : C4 10               TV_OK:   LDI     H(AESTK)        ;SET PS TO CURRENT
     941/     514 : 37                           XPAH    P3              ;  STACK LOCATION
     942/     515 : AA FD                        ILD     LSTK(P2)        ;INCR STACK POINTER
     943/     517 : 33                           XPAL    P3
     944/     518 : 02                           CCL                     ;DOUBLE VARIABLE INDEX
     945/     519 : 40                           LDE
     946/     51A : 70                           ADE
     947/     51B : CB FF                        ST      -1(P3)          ;PUT INDEX ON STACK
     948/     51D : C4 02                        LDI     2               ; INCREMENT I.L.  PC,  SKIPPING
     949/     51F : 02                           CCL                     ;  OVER TEST-FAIL ADDRESS
     950/     520 : F2 FB                        ADD     PCLOW(P2)
     951/     522 : CA FB                        ST      PCLOW(P2)
     952/     524 : C4 00                        LDI     0
     953/     526 : F2 FA                        ADD     PCHIGH(P2)
     954/     528 : CA FA                        ST      PCHIGH(P2)
     955/     52A : 90 AE                        JMP     X10
     956/     52C :                      
     957/     52C :                      
     958/     52C :                     ;*************************************
     959/     52C :                     ;*      IND - EVALUATE A VARIABLE    *
     960/     52C :                     ;*************************************
     961/     52C :                      
     962/     52C : C4 10               IND:      LDI     H(AESTK)        ;SET P3 TO STACK
     963/     52E : 37                            XPAH    P3
     964/     52F : AA FD                         ILD     LSTK(P2)
     965/     531 : 33                            XPAL    P3
     966/     532 : C3 FE                         LD      -2(P3)          ;GET INDEX OFF TOP
     967/     534 : 01                            XAE                     ;PUT INDEX IN E REG
     968/     535 : C2 80                         LD      EREG(P2)        ;GET LOWER 8 BITS
     969/     537 : CB FE                         ST      -2(P3)          ;SAVE ON STACK
     970/     539 : 02                            CCL
     971/     53A : 40                            LDE                     ; INCREMENT E REG
     972/     53B : F4 01                         ADI     1
     973/     53D : 01                            XAE                  
     974/     53E : C2 80                         LD      EREG(P2)        ;GET UPPER 8 BITS
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 18 - 08.05.2023 15:13:29


     975/     540 : CB FF                         ST      -1(P3)          ;SAVE ON STACK
     976/     542 : 90 96               XI1:      JMP     X10
     977/     544 :                      
     978/     544 :                      
     979/     544 :                     ;*************************************
     980/     544 :                     ;*      RELATIONAL OPERATORS         *
     981/     544 :                     ;*************************************
     982/     544 :                      
     983/     544 : C4 01               EQ:      LDI     1                ;EACH RELATIONAL OPERATOR
     984/     546 : 90 12                        JMP     CMP              ;  LOADS A NUMBER USED LATER
     985/     548 : C4 02               NEQ:     LDI     2                ;  AS A CASE SELECTOR, AFTER
     986/     54A : 90 0E                        JMP     CMP              ;  THE TWO OPERANDS ARE COM-
     987/     54C : C4 03               LSS:     LDI     3                ;  PARED.   BASED ON THE COM-
     988/     54E : 90 0A                        JMP     CMP              ;  PARISON,  FLAGS ARE SET THAT
     989/     550 : C4 04               LEQ:     LDI     4                ;  ARE EQUIVALENT TO THOSE SET
     990/     552 : 90 06                        JMP     CMP              ;  BY THE "CMP" INSTRUCTION IN
     991/     554 : C4 05               GTR:     LDI     5                ;  THE PDP-11.  THESE PSEUDO-
     992/     556 : 90 02                        JMP     CMP              ;  FLAGS ARE USED TO DETERMINE
     993/     558 : C4 06               GEQ:     LDI     6                ;  WHETHER THE PARTICULAR
     994/     55A :                                                       ; RELATION IS SATISFIED OR NO
     995/     55A : CA EB               CMP:     ST      NUM(P2)
     996/     55C : C4 10                        LDI     H(AESTK)         ;SET P3 -> ARITH STACK
     997/     55E : 37                           XPAH    P3
     998/     55F : BA FD                        DLD     LSTK(P2)
     999/     561 : BA FD                        DLD     LSTK(P2)
    1000/     563 : 33                           XPAL    P3
    1001/     564 : 03                           SCL
    1002/     565 : C3 FE                        LD      -2(P3)           ; SUBTRACT THE TWO OPERANDS,
    1003/     567 : FB 00                        CAD     (P3)             ;  STORING RESULT IN LO & HI
    1004/     569 : CA EF                        ST      LO(P2)
    1005/     56B : C3 FF                        LD      -1(P3)
    1006/     56D : FB 01                        CAD     1(P3)
    1007/     56F : CA EE                        ST      HI(P2)
    1008/     571 : E3 FF                        XOR     -1(P3)           ;OVERFLOW OCCURS IF  SIGNS OF
    1009/     573 : 01                           XAE                      ;  RESULT AND 1ST OPERAND
    1010/     574 : C3 FF                        LD      -1(P3)           ;  DIFFER,  AND SIGNS  OF THE
    1011/     576 : E3 01                        XOR     1(P3)            ;  TWO OPERANDS DIFFER
    1012/     578 : 50                           ANE                      ;BIT 7 EQUIVALENT TO V FLAG
    1013/     579 : E2 EE                        XOR     HI(P2)           ;BIT 7 EQUIVALENT TO N XOR V
    1014/     57B : CA EA                        ST      TEMP(P2)         ;STORE IN TEMP
    1015/     57D : C2 EE                        LD      HI(P2)           ;DETERMINE IF RESULT WAS ZERO
    1016/     57F : DA EF                        OR      LO(P2)
    1017/     581 : 98 02                        JZ      SETZ             ;IF RESULT=0,  SET Z  FLAG
    1018/     583 : C4 80                        LDI     0x80              ;  ELSE CLEAR Z FLAG
    1019/     585 : E4 80               SETZ:    XRI     0x80
    1020/     587 : 01                           XAE                      ;BIT 7 OF EX = Z FLAG
    1021/     588 : BA EB                        DLD     NUM(P2)          ;TEST FOR =
    1022/     58A : 9C 05                        JNZ     NEQ1
    1023/     58C : 40                           LDE                      ;  EQUAL IF Z = 1
    1024/     58D : 90 2B                        JMP     CMP1
    1025/     58F : 90 B1               X12:     JMP     XI1
    1026/     591 : BA EB               NEQ1:    DLD     NUM(P2)          ;TEST FOR <>
    1027/     593 : 9C 05                        JNZ     LSS1
    1028/     595 : 40                           LDE                      ;  NOT EQUAL IF Z = 0
    1029/     596 : E4 80                        XRI     0x80
    1030/     598 : 90 20                        JMP     CMP1
    1031/     59A : BA EB               LSS1:    DLD     NUM(P2)          ;TEST FOR <                  
    1032/     59C : 9C 04                        JNZ     LEQ1
    1033/     59E : C2 EA                        LD      TEMP(P2)         ;  LESS THAN IF (N XOR V)=l
    1034/     5A0 : 90 18                        JMP     CMP1
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 19 - 08.05.2023 15:13:29


    1035/     5A2 : BA EB               LEQ1:    DLD     NUM(P2)          ;TEST FOR <=
    1036/     5A4 : 9C 05                        JNZ     GTR1
    1037/     5A6 : 40                           LDE                      ;  LESS THAN OR EQUAL
    1038/     5A7 : DA EA                        OR      TEMP(P2)         ;   IF (Z OR (N XOR V))=l
    1039/     5A9 : 90 0F                        JMP     CMP1
    1040/     5AB : BA EB               GTR1:    DLD     NUM(P2)          ;TEST FOR >
    1041/     5AD : 9C 07                        JNZ     GEQ1
    1042/     5AF : 40                           LDE                      ;  GREATER THAN
    1043/     5B0 : DA EA                        OR      TEMP(P2)         ;   IF (Z OR (N XOR V))=0
    1044/     5B2 : E4 80                        XRI     0x80
    1045/     5B4 : 90 04                        JMP     CMP1
    1046/     5B6 : C2 EA               GEQ1:    LD      TEMP(P2)         ;GREATER THAN OR EQUAL
    1047/     5B8 : E4 80                        XRI     0x80             ;  IF (N XOR V)=0
    1048/     5BA : 94 04               CMP1:    JP      FALSE1           ;IS RELATION SATISFIED?
    1049/     5BC : C4 01                        LDI     1                ;YES - PUSH 1  ON STACK
    1050/     5BE : 90 02                        JMP     CMP2
    1051/     5C0 : C4 00               FALSE1:  LDI     0                ;N0 - PUSH 0 ON STACK
    1052/     5C2 : CB FE               CMP2:    ST      -2(P3)
    1053/     5C4 : C4 00                        LDI     0 
    1054/     5C6 : CB FF                        ST      -1(P3)
    1055/     5C8 : (MACRO)                       JS      P3,RTN           ;DO AN I. L.  RETURN
    1055/     5C8 : C4 00                      LDI    H(RTN-1)
    1055/     5CA : 37                         XPAH   P3
    1055/     5CB : C4 F5                      LDI    L(RTN-1)
    1055/     5CD : 33                         XPAL   P3
    1055/     5CE : 3F                         XPPC   P3
    1056/     5CF : 90 BE                        JMP     X12
    1057/     5D1 :                      
    1058/     5D1 :                      
    1059/     5D1 :                     ;*************************************
    1060/     5D1 :                     ;*     IF STATEMENT TEST FOR ZERO    *
    1061/     5D1 :                     ;*************************************
    1062/     5D1 :                                                                
    1063/     5D1 : C2 EF               CMPR:   LD      LO(P2)          ;GET LOW & HI BYTES OF EXPR.
    1064/     5D3 : DA EE                       OR      HI(P2)          ;TEST IF EXPRESSION IS ZERO (LATER CHANGED TO 'ANI 01'(R.MARIN JAN 2008))
    1065/     5D5 : 98 02                       JZ      FAIL            ;YES - IT IS
    1066/     5D7 : 90 B6                       JMP     X12             ;N0 - IT ISN'T SO CONTINUE
    1067/     5D9 : C5 01               FAIL:   LD      @1(P1)          ;SKIP TO NEXT LINE IN PROGRAM
    1068/     5DB : E4 0D                       XRI     0x0D            ;  (I.E.  TIL NEXT CR)
    1069/     5DD : 9C FA                       JNZ     FAIL
    1070/     5DF : (MACRO)                      JS      P3,NXT          ;CALL NXT AND RETURN
    1070/     5DF : C4 02                      LDI    H(NXT-1)
    1070/     5E1 : 37                         XPAH   P3
    1070/     5E2 : C4 83                      LDI    L(NXT-1)
    1070/     5E4 : 33                         XPAL   P3
    1070/     5E5 : 3F                         XPPC   P3
    1071/     5E6 : 90 A7               X12A:   JMP     X12
    1072/     5E8 :                      
    1073/     5E8 :                      
    1074/     5E8 :                     ;*************************************
    1075/     5E8 :                     ;*         AND, OR, & NOT            *
    1076/     5E8 :                     ;*************************************
    1077/     5E8 :                      
    1078/     5E8 : C4 01               ANDOP:  LDI     1               ;EACH OPERATION HAS ITS
    1079/     5EA : 90 06                       JMP     AON1            ;OWN CASE SELECTOR.
    1080/     5EC : C4 02               OROP:   LDI     2   
    1081/     5EE : 90 02                       JMP     AON1
    1082/     5F0 : C4 03               NOTOP:  LDI     3
    1083/     5F2 : CA EB               AON1:   ST      NUM(P2)                                        
    1084/     5F4 : C4 10                       LDI     H(AESTK)        ;SET P3 -> ARITH. STACK
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 20 - 08.05.2023 15:13:29


    1085/     5F6 : 37                          XPAH    P3
    1086/     5F7 : BA FD                       DLD     LSTK(P2)
    1087/     5F9 : BA FD                       DLD     LSTK(P2)
    1088/     5FB : 33                          XPAL    P3
    1089/     5FC : BA EB                       DLD     NUM(P2)         ;TEST FOR  AND
    1090/     5FE : 9C 0E                       JNZ     AON_0R
    1091/     600 : C3 01                       LD      1(P3)           ; REPLACE TWO TOP ITEMS ON
    1092/     602 : D3 FF                       AND     -1(P3)          ;  STACK BY THEIR  AND
    1093/     604 : CB FF                       ST      -1(P3)
    1094/     606 : C3 00                       LD      0(P3)
    1095/     608 : D3 FE                       AND     -2(P3)
    1096/     60A : CB FE                       ST      -2(P3)
    1097/     60C : 90 D8                       JMP     X12A
    1098/     60E : BA EB               AON_0R: DLD     NUM(P2)         ;TEST FOR  OR
    1099/     610 : 9C 0E                       JNZ     AON_NT
    1100/     612 : C3 01                       LD      1(P3)           ;REPLACE TWO TOP ITEMS ON
    1101/     614 : DB FF                       OR      -1(P3)          ;  STACK BY THEIR 'OR'
    1102/     616 : CB FF                       ST      -1(P3)
    1103/     618 : C3 00                       LD      0(P3)
    1104/     61A : DB FE                       OR      -2(P3)
    1105/     61C : CB FE                       ST      -2(P3)
    1106/     61E : 90 C6                       JMP     X12A
    1107/     620 : C7 01               AON_NT: LD      @1(P3)          ; NOT  OPERATION
    1108/     622 : E4 FF                       XRI     0xFF
    1109/     624 : CB FF                       ST      -1(P3)          ; REPLACE TOP ITEM ON STACK
    1110/     626 : C7 01                       LD      @1(P3)          ;  BY ITS ONE'S COMPLEMENT
    1111/     628 : E4 FF                       XRI     0xFF
    1112/     62A : CB FF                       ST      -1(P3)
    1113/     62C : 33                          XPAL    P3
    1114/     62D : CA FD                       ST      LSTK(P2)         ;STACK POINTER FIXUP
    1115/     62F : 90 B5               X12B:   JMP     X12A
    1116/     631 :                      
    1117/     631 :                      
    1118/     631 :                     ;*************************************
    1119/     631 :                     ;*      EXCHANGE CURSOR WITH RAM     *
    1120/     631 :                     ;*************************************
    1121/     631 :                      
    1122/     631 : C2 F1               XCHGP1: LD      P1L0W(P2)        ;THIS ROUTINE IS HANDY WHEN
    1123/     633 : 31                          XPAL    P1               ;EXECUTING AN 'INPUT' STMT
    1124/     634 : CA F1                       ST      P1L0W(P2)        ;IT EXCHANGES THE CURRENT
    1125/     636 : C2 F0                       LD      P1HIGH(P2)       ;TEXT CURSOR WITH ONE SAVED
    1126/     638 : 35                          XPAH    P1               ;IN RAM
    1127/     639 : CA F0                       ST      P1HIGH(P2)
    1128/     63B : 3F                          XPPC    P3
    1129/     63C :                      
    1130/     63C :                      
    1131/     63C :                     ;*************************************
    1132/     63C :                     ;*        CHECK RUN MODE             *
    1133/     63C :                     ;*************************************
    1134/     63C :                      
    1135/     63C : C2 F4               CKMODE: LD      RUNMOD(P2)       ;THIS ROUTINE CAUSES AN ERROR
    1136/     63E : 98 01                       JZ      CK1              ;IF CURRENTLY IN EDIT MODE
    1137/     640 : 3F                          XPPC    P3
    1138/     641 : C4 03               CK1:    LDI     3
    1139/     643 : CA EB               E8:     ST      NUM(P2)          ;ERROR IF RUN MODE = 0
    1140/     645 : (MACRO)                      JS      P3,ERR2          ;MINOR KLUGE
    1140/     645 : C4 02                      LDI    H(ERR2-1)
    1140/     647 : 37                         XPAH   P3
    1140/     648 : C4 1E                      LDI    L(ERR2-1)
    1140/     64A : 33                         XPAL   P3
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 21 - 08.05.2023 15:13:29


    1140/     64B : 3F                         XPPC   P3
    1141/     64C :                      
    1142/     64C :                      
    1143/     64C :                     ;*************************************
    1144/     64C :                     ;*     GET  HEXADECIMAL NUMBER       *
    1145/     64C :                     ;*************************************
    1146/     64C :                      
    1147/     64C : AA FD               HEX:    ILD     LSTK(P2)        ;POINT P3 AT ARITH STACK
    1148/     64E : AA FD                       ILD     LSTK(P2)
    1149/     650 : 33                          XPAL    P3
    1150/     651 : C4 10                       LDI     H(AESTK)
    1151/     653 : 37                          XPAH    P3
    1152/     654 : C4 00                       LDI      0              ;NUMBER INITIALLY ZERO
    1153/     656 : CB FF                       ST      -1(P3)          ;PUT IT ON STACK
    1154/     658 : CB FE                       ST      -2(P3)
    1155/     65A : CA EB                       ST      NUM(P2)         ;ZERO NUMBER OF DIGITS
    1156/     65C : C5 01               HSKIP:  LD      @1(P1)          ;SKIP ANY SPACES
    1157/     65E : E4 20                       XRI     ' '
    1158/     660 : 98 FA                       JZ      HSKIP
    1159/     662 : C5 FF                       LD      @-1(P1)
    1160/     664 : C1 00               LOOP7:  LD      (P1)            ;GET A CHARACTER
    1161/     666 : 03                          SCL
    1162/     667 : FC 3A                       CAI     '9'+1           ;CHECK FOR A NUMERIC CHAR
    1163/     669 : 94 09                       JP      HLETR
    1164/     66B : 03                          SCL
    1165/     66C : FC F6                       CAI     '0'-'9'-1       ;IF NUMERIC, SHIFT NUMBER
    1166/     66E : 94 13                       JP      HENTER          ;  AND ADD NEW HEX DIGIT
    1167/     670 : 90 32                       JMP     HEND
    1168/     672 : 90 BB               X12C:   JMP     X12B
    1169/     674 : 03                  HLETR:  SCL                     ;CHECK FOR HEX LETTER
    1170/     675 : FC 0D                       CAI     'G'-'9'-1
    1171/     677 : 94 2B                       JP      HEND
    1172/     679 : 03                          SCL
    1173/     67A : FC FA                       CAI     'A'-'G'
    1174/     67C : 94 02                       JP      HX0K
    1175/     67E : 90 24                       JMP     HEND
    1176/     680 : 02                  HX0K:   CCL                     ;ADD 10 TO GET TRUE VALUE
    1177/     681 : F4 0A                       ADI     10              ;  OF LETTER
    1178/     683 : 01                  HENTER: XAE                     ;NEW DIGIT IN EX REG
    1179/     684 : C4 04                       LDI     4               ;SET SHIFT COUNTER
    1180/     686 : CA EA                       ST      TEMP(P2)
    1181/     688 : CA EB                       ST      NUM(P2)         ;DIGIT COUNT IS NON-ZERO
    1182/     68A : C3 FE               HSHIFT: LD      -2(P3)          ;SHIFT NUMBER LEFT BY 4
    1183/     68C : 02                          CCL
    1184/     68D : F3 FE                       ADD     -2(P3)
    1185/     68F : CB FE                       ST      -2(P3)
    1186/     691 : C3 FF                       LD      -1(P3)
    1187/     693 : F3 FF                       ADD     -1(P3)
    1188/     695 : CB FF                       ST      -1(P3)
    1189/     697 : BA EA                       DLD     TEMP(P2)
    1190/     699 : 9C EF                       JNZ     HSHIFT
    1191/     69B : C3 FE                       LD      -2(P3)          ;ADD NEW DIGIT
    1192/     69D : 58                          ORE                     ; INTO NUMBER
    1193/     69E : CB FE                       ST      -2(P3)
    1194/     6A0 : C5 01                       LD      @1(P1)          ;ADVANCE THE CURSOR
    1195/     6A2 : 90 C0                       JMP     LOOP7           ;GET NEXT CHAR
    1196/     6A4 : C2 EB               HEND:   LD      NUM(P2)         ;CHECK IF THERE WERE
    1197/     6A6 : 9C 87                       JNZ     X12B            ;MORE THAN 0 CHARACTERS
    1198/     6A8 : C4 05                       LDI     5               ;ERROR IF THERE WERE NONE
    1199/     6AA : 90 97               E8B:    JMP     E8
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 22 - 08.05.2023 15:13:29


    1200/     6AC :                      
    1201/     6AC :                      
    1202/     6AC :                     ;*************************************
    1203/     6AC :                     ;*      TEST FOR NUMBER IN TEXT      *
    1204/     6AC :                     ;*************************************
    1205/     6AC :                      
    1206/     6AC :                     ;  THIS ROUTINE TESTS FOR A NUMBER IN THE TEXT.  IF  NO
    1207/     6AC :                     ;  NUMBER IS FOUND, I.L. CONTROL PASSES TO THE ADDRESS
    1208/     6AC :                     ;  INDICATED IN THE 'TSTN' INSTRUCTION. OTHERWISE, THE
    1209/     6AC :                     ;  NUMBER IS SCANNED AND PUT ON THE ARITHMETIC STACK,
    1210/     6AC :                     ;  WITH I.L. CONTROL PASSING TO THE NEXT INSTRUCTION.
    1211/     6AC :                      
    1212/     6AC : C5 01               TSTNUM: LD      @1(P1)
    1213/     6AE : E4 20                       XRI     ' '             ;  SKIP OVER ANY SPACES
    1214/     6B0 : 98 FA                       JZ      TSTNUM
    1215/     6B2 : C5 FF                       LD      @-1(P1)         ;GET FIRST CHAR
    1216/     6B4 : 03                          SCL                     ;TEST FOR DIGIT
    1217/     6B5 : FC 3A                       CAI     '9'+1
    1218/     6B7 : 94 05                       JP      TNABRT
    1219/     6B9 : 03                          SCL
    1220/     6BA : FC F6                       CAI     '0'-'9'-1
    1221/     6BC : 94 21                       JP      TNL1
    1222/     6BE : C2 FB               TNABRT: LD      PCLOW(P2)        ;CET TEST-FAIL ADDRESS
    1223/     6C0 : 33                          XPAL    P3               ;FROM  I. L. TABLE
    1224/     6C1 : C2 FA                       LD      PCHIGH(P2)
    1225/     6C3 : 37                          XPAH    P3
    1226/     6C4 : C3 00                       LD      (P3)             ;PUT TEST-FAIL ADDRESS
    1227/     6C6 : CA FA                       ST      PCHIGH(P2)       ;INTO  I. L. PC
    1228/     6C8 : C3 01                       LD      1(P3)
    1229/     6CA : CA FB                       ST      PCLOW(P2)
    1230/     6CC : 90 A4                       JMP     X12C
    1231/     6CE : C4 02               TNRET:  LDI     2                ;SKIP OVER ONE IL INSTRUCTION
    1232/     6D0 : 02                          CCL                      ;IF NUMBER IS DONE
    1233/     6D1 : F2 FB                       ADD     PCLOW(P2)
    1234/     6D3 : CA FB                       ST      PCLOW(P2)
    1235/     6D5 : C4 00                       LDI     0
    1236/     6D7 : F2 FA                       ADD     PCHIGH(P2)
    1237/     6D9 : CA FA                       ST      PCHIGH(P2)
    1238/     6DB : 90 95               X13:    JMP     X12C
    1239/     6DD : 90 CB               ESA:    JMP     E8B
    1240/     6DF : 01                  TNL1:   XAE                      ;SAVE DIGIT IN  EX  REG
    1241/     6E0 : C4 10                       LDI     H(AESTK)         ;POINT  P3 AT AE STACK
    1242/     6E2 : 37                          XPAH    P3
    1243/     6E3 : AA FD                       ILD     LSTK(P2)
    1244/     6E5 : AA FD                       ILD     LSTK(P2)
    1245/     6E7 : 33                          XPAL    P3
    1246/     6E8 : C4 00                       LDI     0
    1247/     6EA : CB FF                       ST      -1(P3)
    1248/     6EC : 40                          LDE
    1249/     6ED : CB FE                       ST      -2(P3)
    1250/     6EF : C5 01               LOOP8:  LD      @1(P1)           ;GET NEXT  CHAR
    1251/     6F1 : C1 00                       LD      (P1)
    1252/     6F3 : 03                          SCL                      ;TEST IF IT IS DIGIT
    1253/     6F4 : FC 3A                       CAI     '9'+1
    1254/     6F6 : 94 D6                       JP      TNRET            ;RETURN  IF IT ISN'T
    1255/     6F8 : 03                          SCL
    1256/     6F9 : FC F6                       CAI     '0'-'9'-1
    1257/     6FB : 94 02                       JP      TNL2
    1258/     6FD : 90 CF                       JMP     TNRET
    1259/     6FF : 01                  TNL2:   XAE                      ;SAVE DIGIT
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 23 - 08.05.2023 15:13:29


    1260/     700 : C3 FF                       LD      -1(P3)           ;PUT RESULT IN SCRATCH SPACE
    1261/     702 : CB 01                       ST      1(P3)
    1262/     704 : C3 FE                       LD      -2(P3)
    1263/     706 : CB 00                       ST      (P3)
    1264/     708 : C4 02                       LDI     2
    1265/     70A : CA EA                       ST      TEMP(P2)         ;MULTIPLY RESULT BY 10
    1266/     70C : 02                  TNSHFT: CCL                      ;FIRST MULTIPLY BY 4
    1267/     70D : C3 FE                       LD      -2(P3)
    1268/     70F : F3 FE                       ADD     -2(P3)
    1269/     711 : CB FE                       ST      -2(P3)
    1270/     713 : C3 FF                       LD      -1(P3)
    1271/     715 : F3 FF                       ADD     -1(P3)
    1272/     717 : CB FF                       ST      -1(P3)
    1273/     719 : D4 80                       ANI     0x80            ; MAKE SURE N0 OVERFLOW
    1274/     71B : 9C 34                       JNZ     TNERR           ;OCCURRED
    1275/     71D : BA EA                       DLD     TEMP(P2)
    1276/     71F : 9C EB                       JNZ     TNSHFT
    1277/     721 : 02                          CCL                     ;THEN ADD OLD RESULT,
    1278/     722 : C3 FE                       LD       -2(P3)         ;SO WE HAVE RESULT * 5
    1279/     724 : F3 00                       ADD     (P3)
    1280/     726 : CB FE                       ST       -2(P3)
    1281/     728 : C3 FF                       LD       -1(P3)
    1282/     72A : F3 01                       ADD     1(P3)
    1283/     72C : CB FF                       ST       -1(P3)
    1284/     72E : D4 80                       ANI     0x80            ;MAKE SURE NO OVERFLOW
    1285/     730 : 9C 1F                       JNZ     TNERR           ;OCCURRED
    1286/     732 : 02                          CCL                     ;THEN MULTIPLY BY TWO
    1287/     733 : C3 FE                       LD      -2(P3)
    1288/     735 : F3 FE                       ADD     -2(P3)
    1289/     737 : CB FE                       ST      -2(P3)
    1290/     739 : C3 FF                       LD      -1(P3)
    1291/     73B : F3 FF                       ADD     -1(P3)
    1292/     73D : CB FF                       ST      -1(P3)
    1293/     73F : D4 80                       ANI     0x80            ;MAKE SURE NO OVERFLOW
    1294/     741 : 9C 0E                       JNZ     TNERR           ;OCCURRED
    1295/     743 : 02                          CCL                     ;THEN ADD IN NEW DIGIT
    1296/     744 : 40                          LDE
    1297/     745 : F3 FE                       ADD     -2(P3)
    1298/     747 : CB FE                       ST      -2(P3)
    1299/     749 : C4 00                       LDI     0
    1300/     74B : F3 FF                       ADD     -1(P3)
    1301/     74D : CB FF                       ST      -1(P3)
    1302/     74F : 94 9E                       JP      LOOP8           ;REPEAT IF NO OVERFLOW
    1303/     751 : C4 06               TNERR:  LDI     6
    1304/     753 : 90 88               E9:     JMP     ESA             ;ELSE REPORT ERROR
    1305/     755 : 90 84               X14:    JMP     X13
    1306/     757 :                      
    1307/     757 :                      
    1308/     757 :                     ;*************************************
    1309/     757 :                     ;*      GET LINE  FROM TELETYPE      *
    1310/     757 :                     ;*************************************
    1311/     757 :                      
    1312/     757 : (MACRO)              GETL:   LDPI    P1,LBUF        ;SET P1  TO LBUF
    1312/     757 : C4 10                      LDI     H(LBUF)
    1312/     759 : 35                         XPAH    P1
    1312/     75A : C4 D6                      LDI     L(LBUF)
    1312/     75C : 31                         XPAL    P1
    1313/     75D : C4 00                       LDI     0              ;CLEAR NO.  OF CHAR
    1314/     75F : CA E7                       ST      CHRNUM(P2)
    1315/     761 : (MACRO)                      LDPI    P3,PUTC-1      ;POINT P3 AT PUTC ROUTINE
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 24 - 08.05.2023 15:13:29


    1315/     761 : C4 0F                      LDI     H(PUTC-1)
    1315/     763 : 37                         XPAH    P3
    1315/     764 : C4 C1                      LDI     L(PUTC-1)
    1315/     766 : 33                         XPAL    P3
    1316/     767 : C2 F4                       LD      RUNMOD(P2)     ;PRINT  '? '  IF RUNNING
    1317/     769 : 98 08                       JZ      GETL0          ;(I.E. DURING  'INPUT')
    1318/     76B : C4 3F                       LDI     '?'
    1319/     76D : 3F                          XPPC     P3
    1320/     76E : C4 20                       LDI     ' '
    1321/     770 : 3F                          XPPC    P3
    1322/     771 : 90 03                       JMP     GETL1
    1323/     773 : C4 3E               GETL0:  LDI     '>'             ; OTHERWISE PRINT '>'
    1324/     775 : 3F                          XPPC    P3   
    1325/     776 : (MACRO)              GETL1:  JS      P3,GECO         ;GET CHARACTER
    1325/     776 : C4 0F                      LDI    H(GECO-1)
    1325/     778 : 37                         XPAH   P3
    1325/     779 : C4 76                      LDI    L(GECO-1)
    1325/     77B : 33                         XPAL   P3
    1325/     77C : 3F                         XPPC   P3
    1326/     77D : C4 C1                       LDI     L(PUTC)-1       ;POINT PS AT PUTC AGAIN
    1327/     77F : 33                          XPAL    P3
    1328/     780 : 40                          LDE                     ;GET TYPED CHAR
    1329/     781 : 98 F3                       JZ      GETL1           ;IGNORE NULLS
    1330/     783 : E4 0A                       XRI     0x0A            ;IGNORE LINE FEED
    1331/     785 : 98 EF                       JZ      GETL1
    1332/     787 : 40                          LDE
    1333/     788 : E4 0D                       XRI     0x0D            ;CHECK FOR CR
    1334/     78A : 98 50                       JZ      GETLCR
    1335/     78C : 40                          LDE
    1336/     78D : E4 5F                       XRI     'O'+0x10        ;CHECK FOR SHIFT/0
    1337/     78F : 98 41                       JZ      GETRUB
    1338/     791 : 40                          LDE                     ;CHECK FOR CTRL/H
    1339/     792 : E4 08                       XRI     8
    1340/     794 : 98 36                       JZ      GXH
    1341/     796 : 40                          LDE
    1342/     797 : E4 15                       XRI     0x15            ;CHECK FOR CTRL/U
    1343/     799 : 98 0F                       JZ      GXU
    1344/     79B : 40                          LDE
    1345/     79C : E4 03                       XRI     3               ;CHECK FOR CTRL/C
    1346/     79E : 9C 1A                       JNZ     GENTR
    1347/     7A0 : C4 5E                       LDI     '^'             ;ECHO CONTROL/C AS ^C
    1348/     7A2 : 3F                          XPPC    P3
    1349/     7A3 : C4 43                       LDI     'C'
    1350/     7A5 : 3F                          XPPC    P3
    1351/     7A6 : C4 0E                       LDI     14              ; CAUSE A BREAK
    1352/     7A8 : 90 A9                       JMP     E9
    1353/     7AA : C4 5E               GXU:    LDI     '^'             ;ECHO CONTROL/U AS ^U
    1354/     7AC : 3F                          XPPC    P3
    1355/     7AD : C4 55                       LDI     'U'
    1356/     7AF : 3F                          XPPC    P3
    1357/     7B0 : C4 0D                       LDI     0x0D            ; PRINT CR/LF
    1358/     7B2 : 3F                          XPPC    P3                                          
    1359/     7B3 : C4 0A                       LDI     0x0A
    1360/     7B5 : 3F                          XPPC    P3
    1361/     7B6 : 90 9F                       JMP     GETL            ;GO GET ANOTHER LINE
    1362/     7B8 : 90 9B               X15:    JMP     X14
    1363/     7BA : 40                  GENTR:  LDE
    1364/     7BB : CD 01                       ST      @1(P1)          ;PUT CHAR IN LBUF
    1365/     7BD : AA E7                       ILD     CHRNUM(P2)      ;INCREMENT CHRNUM
    1366/     7BF : E4 48                       XRI     72              ;IF=72, LINE FULL
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 25 - 08.05.2023 15:13:29


    1367/     7C1 : 9C B3                       JNZ     GETL1
    1368/     7C3 : C4 0D                       LDI     0x0D
    1369/     7C5 : 01                          XAE                     ;SAVE CARRIAGE RET
    1370/     7C6 : 40                          LDE
    1371/     7C7 : 3F                          XPPC    P3              ; PRINT IT
    1372/     7C8 : 90 12                       JMP     GETLCR          ; STORE IT IN LBUF
    1373/     7CA : 90 87               E10:    JMP     E9                                              
    1374/     7CC : C4 20               GXH:    LDI     ' '             ; BLANK OUT THE CHARACTER
    1375/     7CE : 3F                          XPPC    P3
    1376/     7CF : C4 08                       LDI     8               ; PRINT ANOTHER BACKSPACE
    1377/     7D1 : 3F                          XPPC    P3
    1378/     7D2 : C2 E7               GETRUB: LD      CHRNUM(P2)
    1379/     7D4 : 98 A0                       JZ      GETL1
    1380/     7D6 : BA E7                       DLD     CHRNUM(P2)      ;0NE LESS CHAR
    1381/     7D8 : C5 FF                       LD      @-1(P1)         ;BACKSPACE CURSOR
    1382/     7DA : 90 9A                       JMP     GETL1
    1383/     7DC : 40                  GETLCR: LDE
    1384/     7DD : CD 01                       ST      @1(P1)          ;STORE CR IN LBUF
    1385/     7DF : C4 0A                       LDI     0x0A            ;PRINT LINE FEED
    1386/     7E1 : 3F                          XPPC    P3
    1387/     7E2 : C4 10                       LDI     H(LBUF)         ;SET P1 TO BEGIN-
    1388/     7E4 : 35                          XPAH    P1              ;  NING OF LBUF
    1389/     7E5 : C4 D6                       LDI     L(LBUF)
    1390/     7E7 : 31                          XPAL    P1
    1391/     7E8 : 90 CE               X16:    JMP     X15
    1392/     7EA :                      
    1393/     7EA :                      
    1394/     7EA :                     ;*************************************
    1395/     7EA :                     ;*     EVAL -- GET MEMORY CONTENTS   *
    1396/     7EA :                     ;*************************************
    1397/     7EA :                      
    1398/     7EA :                      ;  THIS ROUTINE IMPLEMENTS THE  '@' OPERATOR IN EXPRESSIONS
    1399/     7EA :                      
    1400/     7EA : C4 10               EVAL:   LDI     H(AESTK)
    1401/     7EC : 37                          XPAH    P3
    1402/     7ED : C2 FD                       LD      LSTK(P2)
    1403/     7EF : 33                          XPAL    P3              ;P3 -> ARITH STACK  
    1404/     7F0 : C3 FF                       LD      -1(P3)          ;GET ADDR OFF STACK,
    1405/     7F2 : 35                          XPAH    P1              ;AND INTO P1,
    1406/     7F3 : 01                          XAE                     ;SAVING OLD P1 IN  EX & LO
    1407/     7F4 : C3 FE                       LD      -2(P3)                                       
    1408/     7F6 : 31                          XPAL    P1
    1409/     7F7 : CA EF                       ST      LO(P2)
    1410/     7F9 : C1 00                       LD      0(P1)           ;GET MEMORY CONTENTS,
    1411/     7FB : CB FE                       ST      -2(P3)          ;SHOVE ONTO STACK
    1412/     7FD : C4 00                       LDI     0
    1413/     7FF : CB FF                       ST      -1(P3)          ;HIGH ORDER 3 BITS  ZEROED
    1414/     801 : C2 EF                       LD      LO(P2)
    1415/     803 : 31                          XPAL    P1              ;RESTORE ORIGINAL P1
    1416/     804 : 40                          LDE
    1417/     805 : 35                          XPAH    P1
    1418/     806 : 90 B0                       JMP     X15
    1419/     808 :                      
    1420/     808 :                      
    1421/     808 :                     ;*************************************
    1422/     808 :                     ;*    MOVE - STORE INTO MEMORY       *
    1423/     808 :                     ;*************************************
    1424/     808 :                      
    1425/     808 :                     ;  THIS ROUTINE IMPLEMENTS THE STATEMENT:
    1426/     808 :                     ;      '@'  FACTOR  '='  REL-EXP
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 26 - 08.05.2023 15:13:29


    1427/     808 :                      
    1428/     808 : C4 10               MOVE:   LDI     H(AESTK)
    1429/     80A : 37                          XPAH    P3
    1430/     80B : C2 FD                       LD      LSTK(P2)
    1431/     80D : 33                          XPAL    P3              ;P3 -> ARITH STACK
    1432/     80E : C7 FE                       LD      @-2(P3)         ;GET BYTE  TO  BE MOVED
    1433/     810 : 01                          XAE                                                    
    1434/     811 : C7 FF                       LD      @-1(P3)         ;NOW GET ADDRESS INTO P3
    1435/     813 : CA EA                       ST      TEMP(P2)
    1436/     815 : C7 FF                       LD      @-1(P3)
    1437/     817 : 33                          XPAL    P3
    1438/     818 : CA FD                       ST      LSTK(P2)        ;STACK PTR UPDATED NOW
    1439/     81A : C2 EA                       LD      TEMP(P2)
    1440/     81C : 37                          XPAH    P3
    1441/     81D : 40                          LDE
    1442/     81E : CB 00                       ST      0(P3)           ;MOVE THE  BYTE INTO MEMORY
    1443/     820 : 90 C6               X17:    JMP     X16
    1444/     822 : 90 A6               Ell:    JMP     E10
    1445/     824 :                      
    1446/     824 :                     ;*************************************
    1447/     824 :                     ;*            TEXT EDITOR            *
    1448/     824 :                     ;*************************************
    1449/     824 :                                                                  
    1450/     824 :                     ;INPUTS TO THIS ROUTINE: POINTER TO LINE BUFFER IN P1L0W &
    1451/     824 :                     ;  P1HIGH.   P1 POINTS TO THE INSERTION POINT IN THE TEXT.
    1452/     824 :                     ;  THE A.E.  STACK HAS THE LINE NUMBER ON IT (STACK POINTER
    1453/     824 :                     ;  IS ALREADY POPPED).
    1454/     824 :                      
    1455/     824 :                     ; EACH LINE IN THE NIBL TEXT IS STORED IN THE  FOLLOWING
    1456/     824 :                     ;  FORMAT:  TWO BYTES CONTAINING THE LINE NUMBER (IN BINARY,
    1457/     824 :                     ;  HIGH ORDER BYTE FIRST),  THEN ONE BYTE CONTAINING THE
    1458/     824 :                     ;  LENGTH OF THE LINE., AND FINALLY THE LINE ITSELF FOLLOWED
    1459/     824 :                     ;  BY A CARRIAGE RETURN.   THE LAST LINE IN  THE TEXT IS
    1460/     824 :                     ;  FOLLOWED BY TWO CONSECUTIVE BYTES OF XFF.
    1461/     824 :                                           
    1462/     824 : C4 10               INSRT:  LDI     H(AESTK)        ;POINT P3  AT  AE STACK,
    1463/     826 : 37                          XPAH    P3              ;WHICH HAS THE LINE #
    1464/     827 : C2 FD                       LD      LSTK(P2)        ;ON IT
    1465/     829 : 33                          XPAL    P3
    1466/     82A : C3 01                       LD      1(P3)           ;SAVE NEW  LINE'S NUMBER
    1467/     82C : CA F7                       ST      HILINE(P2)
    1468/     82E : C3 00                       LD      0(P3)
    1469/     830 : CA F8                       ST      LOLINE(P2)
    1470/     832 : C2 F1                       LD      P1L0W(P2)        ;PUT POINTER  TO LBUF INTO P3
    1471/     834 : 33                          XPAL    P3
    1472/     835 : C2 F0                       LD      P1HIGH(P2)
    1473/     837 : 37                          XPAH    P3
    1474/     838 : C4 04                       LDI     4               ;INITIALLY LENGTH OF NEW LINE
    1475/     83A : CA E7                       ST      CHRNUM(P2)      ;  = 4.  ADD 1  TO LENGTH FOR
    1476/     83C : C7 01               INSRT1: LD      @1(P3)          ;  EACH CHAR IN LINE UP TO,
    1477/     83E : E4 0D                       XRI     0x0D            ;  BUT NOT  INCLUDING,
    1478/     840 : 98 04                       JZ      INSRT2          ;  CARRIAGE RETURN
    1479/     842 : AA E7                       ILD     CHRNUM(P2)
    1480/     844 : 90 F6                       JMP     INSRT1
    1481/     846 : C2 E7               INSRT2: LD      CHRNUM(P2)      ; IF LENGTH STILL 4,
    1482/     848 : E4 04                       XRI     4               ;  WE'LL DELETE A LINE,
    1483/     84A : 9C 02                       JNZ     INSRT3          ;  SO SET LENGTH = 0
    1484/     84C : CA E7                       ST      CHRNUM(P2)
    1485/     84E : C2 E7               INSRT3: LD      CHRNUM(P2)      ;PUT NEW LINE LENGTH IN EX
    1486/     850 : 01                          XAE
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 27 - 08.05.2023 15:13:29


    1487/     851 : C2 F2                       LD      LABLHI(P2)       ; IS NEW LINE REPLACING OLD?
    1488/     853 : 94 06                       JP      INSRT4          ;YES - DO REPLACE
    1489/     855 : D4 7F                       ANI     0x7F            ;N0 - WE'LL INSERT LINE HERE,
    1490/     857 : CA F2                       ST      LABLHI(P2)       ;  WHERE FNDLBL GOT US
    1491/     859 : 90 18                       JMP     AMOVE           ;BUT FIR3T MAKE ROOM
    1492/     85B : C5 03               INSRT4: LD      @3(P1)          ;SKIP LINE # AND LENGTH
    1493/     85D : 40                          LDE                     ;EX,  NOW HOLDING NEW LINE
    1494/     85E : 02                          CCL                     ;  LENGTH,  WILL SOON HOLD
    1495/     85F : F4 FC                       ADI     -4              ;  DISPLACEMENT OF LINES
    1496/     861 : 01                          XAE                     ;  TO BE MOVED
    1497/     862 : C5 01               INSRT5: LD      @1(P1)          ;SUBTRACT 1 FROM DISPLACEMENT
    1498/     864 : E4 0D                       XRI     0x0D            ;  FOR EACH CHAR IN LINE BEING
    1499/     866 : 98 0B                       JZ      AMOVE           ;  REPLACED
    1500/     868 : 40                          LDE
    1501/     869 : 02                          CCL
    1502/     86A : F4 FF                       ADI      -1
    1503/     86C : 01                          XAE
    1504/     86D : 90 F3                       JMP      INSRT5
    1505/     86F : 90 AF               X19:    JMP      X17
    1506/     871 : 90 AF               E12:    JMP      Ell
    1507/     873 : 40                  AMOVE:  LDE                       ;IF DISPLACEMENT AND LENGTH
    1508/     874 : DA E7                       OR       CHRNUM(P2)       ;  OF NEW LINE ARE 0,  RETURN
    1509/     876 : 98 F7                       JZ       X19
    1510/     878 : C4 7A                       LDI      L(DOSTAK)        ; CLEAR SOME STACKS
    1511/     87A : CA FF                       ST       DOPTR(P2)
    1512/     87C : C4 6A                       LDI      L(SBRSTK)
    1513/     87E : CA FC                       ST       SBRPTR(P2)
    1514/     880 : C4 8A                       LDI      L(FORSTK)                                    
    1515/     882 : CA FE                       ST       FORPTR(P2)
    1516/     884 : 40                          LDE
    1517/     885 : 98 60                       JZ       INSAD0           ;DON'T NEED TO MOVE LINES
    1518/     887 : 94 10                       JP       INSUP0           ;SKIP IF DISP.  POSITIVE
    1519/     889 : C1 00               ADOWN:  LD       0(P1)            ; NEGATIVE DISPLACEMENT:
    1520/     88B : C9 80                       ST       EREG(P1)         ;DO;
    1521/     88D : C5 01                       LD       @1(P1)           ;    M(P1+DISP)  = M(P1);
    1522/     88F : 94 F8                       JP       ADOWN            ;    P1 = Pl+1;
    1523/     891 : C1 00                       LD       0(P1)            ;UNTIL M(P1)<0 & M(P1-1)<0;
    1524/     893 : 94 F4                       JP       ADOWN
    1525/     895 : C9 80                       ST       EREG(P1)         ;M(P1+DISP) = M(P1);
    1526/     897 : 90 4E                       JMP      INSAD0
    1527/     899 : C1 FE               INSUP0: LD       -2(P1)           ;POSITIVE DISPLACEMENT:
    1528/     89B : CA EA                       ST       TEMP(P2)         ;FLAG BEGINNING OF MOVE WITH
    1529/     89D : C4 FF                       LDI      -1               ;  A -1 FOLLOWED BY 30,  WHICH
    1530/     89F : C9 FE                       ST       -2(P1)           ;  CAN NEVER APPEAR IN A
    1531/     8A1 : C4 50                       LDI      80               ;  NIBL TEXT
    1532/     8A3 : C9 FF                       ST       -1(P1)
    1533/     8A5 : C5 01               INSUP1: LD       @1(P1)          ; ADVANCE P1 TO END OF TEXT
    1534/     8A7 : 94 FC                       JP       INSUP1
    1535/     8A9 : C1 00                       LD       0(P1)
    1536/     8AB : 94 F8                       JP       INSUP1
    1537/     8AD : 35                          XPAH     P1              ;SAVE P1 IN LO, HI
    1538/     8AE : CA EE                       ST       HI(P2)
    1539/     8B0 : 35                          XPAH     P1   
    1540/     8B1 : 31                          XPAL     P1
    1541/     8B2 : CA EF                       ST       LO(P2)
    1542/     8B4 : 31                          XPAL     P1
    1543/     8B5 : C2 EF                       LD       LO(P2)          ;ADD DISPLACEMENT TO
    1544/     8B7 : 02                          CCL                      ;VALUE OF P1, TO CHECK
    1545/     8B8 : 70                          ADE                      ;WHETHER WE'RE OUT OF
    1546/     8B9 : C4 00                       LDI     0                ;RAM FOR USER'S PROGRAM
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 28 - 08.05.2023 15:13:29


    1547/     8BB : F2 EE                       ADD     HI(P2)
    1548/     8BD : E2 EE                       XOR     HI(P2)
    1549/     8BF : D4 F0                       ANI     0xF0
    1550/     8C1 : 98 03                       JZ      INSUP2
    1551/     8C3 : C4 00                       LDI     0                ;IF OUT OF RAM,  CHANGE
    1552/     8C5 : 01                          XAE                      ;  DISPLACEMENT TO ZERO
    1553/     8C6 : C4 FF               INSUP2: LDI     -1
    1554/     8C8 : C9 80               INSUP3: ST      EREG(P1)         ;MOVE TEXT UP UNTIL WE REACH
    1555/     8CA : C5 FF                       LD      @-1(P1)          ;  THE FLAGS SET ABOVE
    1556/     8CC : 94 FA                       JP      INSUP3
    1557/     8CE : C1 01                       LD      1(P1)
    1558/     8D0 : E4 50                       XRI     80
    1559/     8D2 : 98 04                       JZ      INSUP4
    1560/     8D4 : C1 00                       LD      0(P1)
    1561/     8D6 : 90 F0                       JMP     INSUP3
    1562/     8D8 : C2 EA               INSUP4: LD      TEMP(P2)         ;RESTORE THE FLAGGED LOCATION
    1563/     8DA : C9 00                       ST      0(P1)            ;  TO THEIR ORIGINAL VALUES
    1564/     8DC : C4 0D                       LDI     0x0D
    1565/     8DE : C9 01                       ST      1(P1)
    1566/     8E0 : 40                          LDE                     ;IF DISPLACEMENT = 0,  WE'RE
    1567/     8E1 : 9C 04                       JNZ     INSAD0          ;  OUT OF RAM,  SO REPORT ERROR
    1568/     8E3 : C4 02                       LDI     2
    1569/     8E5 : 90 8A               E12A:   JMP     E12
    1570/     8E7 : C2 E7               INSAD0: LD      CHRNUM(P2)      ;INSERT NEW LINE
    1571/     8E9 : 98 84               X19A:   JZ      X19             ;  UNLESS LENGTH IS ZERO
    1572/     8EB : C2 F1                       LD      P1L0W(P2)       ;POINT P1 AT LINE BUFFER
    1573/     8ED : 31                          XPAL    P1
    1574/     8EE : C2 F0                       LD      P1HIGH(P2)
    1575/     8F0 : 35                          XPAH    P1
    1576/     8F1 : C2 F3                       LD      LABLLO(P2)      ;POINT P3 AT INSERTION PLACE
    1577/     8F3 : 33                          XPAL    P3
    1578/     8F4 : C2 F2                       LD      LABLHI(P2)
    1579/     8F6 : 37                          XPAH    P3
    1580/     8F7 : C2 F7                       LD      HILINE(P2)      ;PUT LINE NUMBER INTO TEXT
    1581/     8F9 : CF 01                       ST      @1(P3)
    1582/     8FB : C2 F8                       LD      LOLINE(P2)
    1583/     8FD : CF 01                       ST      @1(P3)
    1584/     8FF : C2 E7                       LD      CHRNUM(P2)      ;STORE LINE LENGTH IN TEXT
    1585/     901 : CF 01                       ST      @1(P3)
    1586/     903 : C5 01               INSAD1: LD      @1(P1)          ;PUT REST OF CHARS
    1587/     905 : CF 01                       ST      @1(P3)          ;(INCLUDING OR) INTO TEXT
    1588/     907 : E4 0D                       XRI     0x0D
    1589/     909 : 9C F8                       JNZ     INSAD1
    1590/     90B : 90 DC                       JMP     X19A            ;RETURN
    1591/     90D : (MACRO)              X20:    JS      P3,EXECIL
    1591/     90D : C4 00                      LDI    H(EXECIL-1)
    1591/     90F : 37                         XPAH   P3
    1591/     910 : C4 75                      LDI    L(EXECIL-1)
    1591/     912 : 33                         XPAL   P3
    1591/     913 : 3F                         XPPC   P3
    1592/     914 : 90 CF               E13:    JMP     E12A
    1593/     916 :                      
    1594/     916 :                      
    1595/     916 :                     ;************************************
    1596/     916 :                     ;*       POP ARITHMETIC STACK       *
    1597/     916 :                     ;************************************
    1598/     916 :                      
    1599/     916 : BA FD               POPAE:  DLD     LSTK(P2)        ;THIS ROUTINE POP  THE  A. E.
    1600/     918 : BA FD                       DLD     LSTK(P2)        ;STACK, AND PUTS  THE  RESULT
    1601/     91A : 33                          XPAL    P3              ;INTO  LO(P2) AND  HI(P2)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 29 - 08.05.2023 15:13:29


    1602/     91B : C4 10                       LDI     H(AESTK)
    1603/     91D : 37                          XPAH    P3
    1604/     91E : C3 00                       LD      (P3)
    1605/     920 : CA EF                       ST      LO(P2)
    1606/     922 : C3 01                       LD      1(P3)
    1607/     924 : CA EE                       ST      HI(P2)
    1608/     926 : 90 E5                       JMP     X20
    1609/     928 :                      
    1610/     928 :                      
    1611/     928 :                     ;*************************************
    1612/     928 :                     ;*              UNTIL                *
    1613/     928 :                     ;*************************************
    1614/     928 :                      
    1615/     928 : C2 FF               UNTIL:  LD      DOPTR(P2)       ; CHECK  FOR DO-STACK  UNDERFLOW
    1616/     92A : 01                          XAE
    1617/     92B : 40                          LDE 
    1618/     92C : E4 7A                       XRI     L(DOSTAK)
    1619/     92E : 9C 04                       JNZ     UNTL1
    1620/     930 : C4 0F                       LDI     15
    1621/     932 : 90 E0                       JMP     E13                                         
    1622/     934 : C2 EF               UNTL1:  LD      LO(P2)          ; CHECK  FOR EXPRESSION  = 0
    1623/     936 : DA EE                       OR      HI(P2)          ;<- CHANGED AFTER 12/17/76 TO 'ANI 01' (R.MARIN, JAN 2008)
    1624/     938 : 98 06                       JZ      SREDO           ;IF ZERO, REPEAT DO-LOOP
    1625/     93A : BA FF                       DLD     DOPTR(P2)       ;ELSE POP SAVE STACK
    1626/     93C : BA FF                       DLD     DOPTR(P2)
    1627/     93E : 90 CD                       JMP     X20             ;CONTINUE TO NEXT  STMT
    1628/     940 : 40                  SREDO:  LDE                     ;POINT  P3 AT DO-STACK
    1629/     941 : 33                          XPAL    P3
    1630/     942 : C4 10                       LDI     H(DOSTAK)
    1631/     944 : 37                          XPAH    P3
    1632/     945 : C3 FF                       LD      -1(P3)          ;LOAD P1 FROM DO STACK
    1633/     947 : 35                          XPAH    P1
    1634/     948 : C3 FE                       LD      -2(P3)
    1635/     94A : 31                          XPAL    P1              ;CURSOR NOW POINTS TO  FIRST
    1636/     94B : 90 C0                       JMP     X20             ;STATEMENT OF DO-LOOP
    1637/     94D :                      
    1638/     94D :                     ;*************************************
    1639/     94D :                     ;*     STORE INTO STATUS REGISTER    *
    1640/     94D :                     ;*************************************
    1641/     94D :                      
    1642/     94D :                     ; THIS ROUTINE IMPLEMENTS THE STATEMENT:
    1643/     94D :                     ;      'STAT' '='  REL-EXP
    1644/     94D :                      
    1645/     94D : C2 EF               MOVESR:  LD      LO(P2)          ;LOW BYTE GOES TO STATUS
    1646/     94F : D4 F7                        ANI     0xF7            ;BUT WITH IEN BIT CLEARED
    1647/     951 : 07                           CAS
    1648/     952 : 90 B9               X21:     JMP     X20
    1649/     954 : 90 BE               E14:     JMP     E13
    1650/     956 :                      
    1651/     956 :                      
    1652/     956 :                     ;*************************************
    1653/     956 :                     ;*         STAT FUNCTION             *
    1654/     956 :                     ;*************************************
    1655/     956 :                      
    1656/     956 : C4 10               STATUS: LDI     H(AESTK)
    1657/     958 : 37                          XPAH    P3              ;POINT P3 AT AE STACK
    1658/     959 : AA FD                       ILD     LSTK(P2)
    1659/     95B : AA FD                       ILD     LSTK(P2)
    1660/     95D : 33                          XPAL    P3
    1661/     95E : 06                          CSA
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 30 - 08.05.2023 15:13:29


    1662/     95F : CB FE                       ST      -2(P3)          ;STATUS REG IS, LOW BYTE
    1663/     961 : C4 00                       LDI     0
    1664/     963 : CB FF                       ST      -1(P3)          ;ZERO IS HIGH BYTE
    1665/     965 : 90 EB                       JMP     X21
    1666/     967 :                      
    1667/     967 :                      
    1668/     967 :                     ;*************************************
    1669/     967 :                     ;*    MACHINE LANGUAGE SUBROUTINE    *
    1670/     967 :                     ;*************************************
    1671/     967 :                      
    1672/     967 :                     ;  THIS ROUTINE IMPLEMENTS THE 'LINK' STATEMENT
    1673/     967 :                      
    1674/     967 : C2 EE               CALLML: LD      HI(P2)          ;GET HIGH BYTE OF ADDRESS
    1675/     969 : 37                          XPAH    P3
    1676/     96A : C2 EF                       LD      LO(P2)          ;GET LOW BYTE
    1677/     96C : 33                          XPAL    P3              ;P3 -> USER'S ROUTINE
    1678/     96D : C7 FF                       LD      @-1(P3)         ;CORRECT P3
    1679/     96F : 3F                          XPPC    P3              ;CALL ROUTINE (PRAY IT WORKS)
    1680/     970 : (MACRO)                      LDPI    P2,VARS         ;RESTORE RAM POINTER
    1680/     970 : C4 10                      LDI     H(VARS)
    1680/     972 : 36                         XPAH    P2
    1680/     973 : C4 1C                      LDI     L(VARS)
    1680/     975 : 32                         XPAL    P2
    1681/     976 : 90 DA                       JMP     X21             ;RETURN
    1682/     978 :                      
    1683/     978 :                      
    1684/     978 :                     ;*************************************
    1685/     978 :                     ;*        SAVE DO LOOP ADDRESS       *
    1686/     978 :                     ;*************************************
    1687/     978 :                      
    1688/     978 :                     ;  THIS ROUTINE IMPLEMENTS THE 'DO' STATEMENT.
    1689/     978 :                      
    1690/     978 : C2 FF               SAVEDO: LD      DOPTR(P2)       ;CHECK FOR STACK OVERFLOW
    1691/     97A : E4 8A                       XRI     L(FORSTK)
    1692/     97C : 9C 04                       JNZ     SVDO1
    1693/     97E : C4 0A                       LDI     10
    1694/     980 : 90 D2               E15:    JMP     E14
    1695/     982 : AA FF               SVDO1:  ILD     DOPTR(P2)
    1696/     984 : AA FF                       ILD     DOPTR(P2)
    1697/     986 : 33                          XPAL    P3
    1698/     987 : C4 10                       LDI     H(DOSTAK)
    1699/     989 : 37                          XPAH    P3              ;P3 -> TOP OF DO STACK
    1700/     98A : 35                          XPAH    P1              ;SAVE CURSOR ON THE STACK
    1701/     98B : CB FF                       ST      -1(P3)
    1702/     98D : 35                          XPAH    P1
    1703/     98E : 31                          XPAL    P1
    1704/     98F : CB FE                       ST      -2(P3)
    1705/     991 : 31                          XPAL    P1
    1706/     992 : 90 BE               X22:    JMP     X21
    1707/     994 :                      
    1708/     994 :                      
    1709/     994 :                     ;*************************************
    1710/     994 :                     ;*        TOP OF RAM FUNCTION        *
    1711/     994 :                     ;*************************************
    1712/     994 :                      
    1713/     994 : C2 E9               TOP:    LD      TEMP2(P2)       ;SET P3 TO POINT TO
    1714/     996 : 37                          XPAH    P3              ;START OF NIBL TEXT
    1715/     997 : C2 E8                       LD      TEMP3(P2)
    1716/     999 : 33                          XPAL    P3
    1717/     99A : C3 00               TOP0:   LD      (P3)            ;HAVE WE HIT END OF TEXT?
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 31 - 08.05.2023 15:13:29


    1718/     99C : 94 02                       JP      TOP1            ;NO - SKIP TO NEXT LINE
    1719/     99E : 90 07                       JMP     TOP2            ;YES - PUT CURSOR ON STACK
    1720/     9A0 : C3 02               TOP1:   LD      2(P3)           ;GET LENGTH OF LINE
    1721/     9A2 : 01                          XAE
    1722/     9A3 : C7 80                       LD      @EREG(P3)       ;SKIP TO NEXT LINE
    1723/     9A5 : 90 F3                       JMP     TOP0            ;GO CHECK FOR EOF
    1724/     9A7 : C7 02               TOP2:   LD      @2(P3)          ;P3 := P3 + 2
    1725/     9A9 : AA FD                       ILD     LSTK(P2)        ;SET PS TO STACK,  SAVING
    1726/     9AB : AA FD                       ILD     LSTK(P2)        ;OLD P3 (WHICH CONTAINS TOP)
    1727/     9AD : 33                          XPAL    P3              ;ON IT SOMEHOW
    1728/     9AE : 01                          XAE
    1729/     9AF : C4 10                       LDI     H(AESTK)
    1730/     9B1 : 37                          XPAH    P3
    1731/     9B2 : CB FF                       ST      -1(P3)
    1732/     9B4 : 40                          LDE
    1733/     9B5 : CB FE                       ST      -2(P3)
    1734/     9B7 : 90 D9                       JMP     X22
    1735/     9B9 :                      
    1736/     9B9 :                      
    1737/     9B9 :                     ;*************************************
    1738/     9B9 :                     ;*       SKIP TO NEXT NIBL LINE      *
    1739/     9B9 :                     ;*************************************
    1740/     9B9 :                      
    1741/     9B9 : C5 01               IGNORE: LD      @1(P1)          ;SCAN TIL WE'RE PAST
    1742/     9BB : E4 0D                       XRI     0x0D            ;CARRIAGE RETURN
    1743/     9BD : 9C FA                       JNZ     IGNORE
    1744/     9BF : 3F                          XPPC    P3
    1745/     9C0 :                      
    1746/     9C0 :                      
    1747/     9C0 :                     ;*************************************
    1748/     9C0 :                     ;*          MODULO FUNCTION          *
    1749/     9C0 :                     ;*************************************
    1750/     9C0 :                      
    1751/     9C0 : C2 FD               MODULO: LD      LSTK(P2)        ;THIS ROUTINE MUST BE
    1752/     9C2 : 33                          XPAL    P3              ;IMMEDIATELY AFTER A
    1753/     9C3 : C4 10                       LDI     H(AESTK)        ;DIVIDE TO WORK CORRECTLY
    1754/     9C5 : 37                          XPAH    P3
    1755/     9C6 : C3 03                       LD      3(P3)           ;GET LOW BYTE OF REMAINDER
    1756/     9C8 : CB FE                       ST      -2(P3)          ;PUT ON STACK
    1757/     9CA : C3 02                       LD      2(P3)           ;GET HIGH  BYTE  OF REMAINDER
    1758/     9CC : CB FF                       ST      -1(P3)          ;PUT ON STACK
    1759/     9CE : 90 C2               X23:    JMP     X22
    1760/     9D0 : 90 AE               E16:    JMP     E15
    1761/     9D2 :                      
    1762/     9D2 :                      
    1763/     9D2 :                     ;*************************************
    1764/     9D2 :                     ;*          RANDOM FUNCTION          *
    1765/     9D2 :                     ;*************************************
    1766/     9D2 :                      
    1767/     9D2 : C4 08               RANDOM: LDI     8               ;LOOP COUNTER FOR MULTIPLY
    1768/     9D4 : CA EB                       ST      NUM(P2)
    1769/     9D6 : C2 E5                       LD      RNDX(P2)
    1770/     9D8 : 01                          XAE
    1771/     9D9 : C2 E4                       LD      RNDY(P2)
    1772/     9DB : CA E9                       ST      TEMP2(P2)
    1773/     9DD : C2 E5               LOOP9:  LD      RNDX(P2)        ;MULTIPLY  THE SEEDS BY 9
    1774/     9DF : 02                          CCL
    1775/     9E0 : 70                          ADE
    1776/     9E1 : 01                          XAE
    1777/     9E2 : C2 E4                       LD      RNDY(P2)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 32 - 08.05.2023 15:13:29


    1778/     9E4 : 02                          CCL
    1779/     9E5 : F2 E9                       ADD     TEMP2(P2)
    1780/     9E7 : CA E4                       ST      RNDY(P2)
    1781/     9E9 : BA EB                       DLD     NUM(P2)
    1782/     9EB : 9C F0                       JNZ     LOOP9
    1783/     9ED : 40                          LDE                     ;ADD 7 TO  SEEDS
    1784/     9EE : 02                          CCL
    1785/     9EF : F4 07                       ADI     7
    1786/     9F1 : 01                          XAE
    1787/     9F2 : C2 E4                       LD      RNDY(P2)
    1788/     9F4 : 02                          CCL
    1789/     9F5 : F4 07                       ADI     7
    1790/     9F7 : 1E                          RR
    1791/     9F8 : CA E4                       ST      RNDY(P2)
    1792/     9FA : AA E6                       ILD     RNDF(P2)        ;HAVE WE GONE THROUGH
    1793/     9FC : 98 03                       JZ      RND1            ;  256 GENERATIONS?
    1794/     9FE : 40                          LDE                     ;IF SO,  SKIP GENERATING
    1795/     9FF : CA E5                       ST      RNDX(P2)        ;  THE NEW  RNDX
    1796/     A01 : C2 FD               RND1:   LD      LSTK(P2)        ;START MESSING WITH THE STACK
    1797/     A03 : 33                          XPAL    P3
    1798/     A04 : C4 10                       LDI     H(AESTK)
    1799/     A06 : 37                          XPAH    P3
    1800/     A07 : C4 01                       LDI     1               ;FIRST PUT 1 ON STACK
    1801/     A09 : CB 00                       ST      (P3)
    1802/     A0B : C4 00                       LDI     0
    1803/     A0D : CB 01                       ST      1(P3)
    1804/     A0F : C3 FE                       LD      -2(P3)           ;PUT EXPR2 ON STACK
    1805/     A11 : CB 02                       ST      2(P3)
    1806/     A13 : C3 FF                       LD      -1(P3)
    1807/     A15 : CB 03                       ST      3(P3)
    1808/     A17 : C3 FC                       LD      -4(P3)           ;PUT EXPR1 ON STACK
    1809/     A19 : CB 04                       ST      4(P3)
    1810/     A1B : C3 FD                       LD      -3(P3)
    1811/     A1D : CB 05                       ST      5(P3)
    1812/     A1F : C2 E4                       LD      RNDY(P2)         ;PUT RANDOM # ON STACK
    1813/     A21 : CB FE                       ST      -2(P3)
    1814/     A23 : C2 E5                       LD      RNDX(P2)
    1815/     A25 : E4 FF                       XRI     0xFF
    1816/     A27 : D4 7F                       ANI     0x7F
    1817/     A29 : CB FF                       ST      -1(P3)
    1818/     A2B : C7 06                       LD      @6(P3)           ; ADD 6 TO STACK POINTER
    1819/     A2D : 33                          XPAL    P3
    1820/     A2E : CA FD                       ST      LSTK(P2)
    1821/     A30 : 90 9C               X24:    JMP     X23
    1822/     A32 : 90 9C               E16A:   JMP     E16
    1823/     A34 :                      
    1824/     A34 :                      
    1825/     A34 :                     ;*************************************
    1826/     A34 :                     ;*     PU3H 1 ON ARITHMETIC STACK    *
    1827/     A34 :                     ;*************************************
    1828/     A34 :                      
    1829/     A34 : AA FD               LIT1:   ILD     LSTK(P2)
    1830/     A36 : AA FD                       ILD     LSTK(P2)
    1831/     A38 : 33                          XPAL    P3
    1832/     A39 : C4 10                       LDI     H(AESTK)
    1833/     A3B : 37                          XPAH    P3
    1834/     A3C : C4 00                       LDI     0
    1835/     A3E : CB FF                       ST      -1(P3)
    1836/     A40 : C4 01                       LDI     1
    1837/     A42 : CB FE                       ST      -2(P3)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 33 - 08.05.2023 15:13:29


    1838/     A44 : 90 EA                       JMP     X24
    1839/     A46 :                      
    1840/     A46 :                      
    1841/     A46 :                     ;*************************************
    1842/     A46 :                     ;*      FOR-LOOP INITIALIZATION      *
    1843/     A46 :                     ;*************************************
    1844/     A46 :                      
    1845/     A46 : C2 FE               SAVFOR: LD       FORPTR(P2)    ; CHECK FOR FOR STACK
    1846/     A48 : E4 A6                       XRI      L(PCSTAK)     ;  OVERFLOW
    1847/     A4A : 9C 04                       JNZ      SFOR1
    1848/     A4C : C4 0A                       LDI      10
    1849/     A4E : 90 E2               E17:    JMP      E16A
    1850/     A50 : E4 A6               SFOR1:  XRI      L(PCSTAK)
    1851/     A52 : 31                          XPAL     P1            ; POINT P1 AT FOR STACK
    1852/     A53 : CA F1                       ST       P1L0W(P2)     ; SAVING OLD P1
    1853/     A55 : C4 10                       LDI      H(FORSTK)
    1854/     A57 : 35                          XPAH     P1
    1855/     A58 : CA F0                       ST       P1HIGH(P2)
    1856/     A5A : C2 FD                       LD       LSTK(P2)      ; POINT P2 AT AE STACK
    1857/     A5C : 33                          XPAL     P3
    1858/     A5D : C4 10                       LDI      H(AESTK)
    1859/     A5F : 37                          XPAH     P3
    1860/     A60 : C3 F9                       LD       -7(P3)        ;GET  VARIABLE INDEX
    1861/     A62 : CD 01                       ST       @1(P1)        ;SAVE ON  FOR-STACK
    1862/     A64 : C3 FC                       LD       -4(P3)        ;GET  L(LIMIT)
    1863/     A66 : CD 01                       ST       @1(P1)        ;SAVE
    1864/     A68 : C3 FD                       LD       -3(P3)        ;GET  H(LIMIT)
    1865/     A6A : CD 01                       ST       @1(P1)        ;SAVE
    1866/     A6C : C3 FE                       LD       -2(P3)        ;GET  L(STEP)
    1867/     A6E : CD 01                       ST       @1(P1)        ;SAVE
    1868/     A70 : C3 FF                       LD       -1(P3)        ;GET  H(STEP)
    1869/     A72 : CD 01                       ST       @1(P1)        ;SAVE
    1870/     A74 : C2 F1                       LD       P1L0W(P2)     ;GET  L(P1)
    1871/     A76 : CD 01                       ST       @1(P1)        ;SAVE
    1872/     A78 : C2 F0                       LD       P1HIGH(P2)    ;GET  H(P1)
    1873/     A7A : CD 01                       ST       @1(P1)        ;SAVE
    1874/     A7C : 35                          XPAH     P1            ;RESTORE  OLD P1
    1875/     A7D : C2 F1                       LD       P1L0W(P2)
    1876/     A7F : 31                          XPAL     P1
    1877/     A80 : CA FE                       ST       FORPTR(P2)    ;UPDATE POR STACK PTR
    1878/     A82 : C7 FC                       LD       @-4(P3)
    1879/     A84 : 33                          XPAL     P3
    1880/     A85 : CA FD                       ST       LSTK(P2)      ;UPDATE AE STACK  PTR
    1881/     A87 : 90 A7               X25:    JMP      X24
    1882/     A89 :                      
    1883/     A89 :                      
    1884/     A89 :                     ;*************************************
    1885/     A89 :                     ;*    FIRST PART OF  'NEXT VAR'      *
    1886/     A89 :                     ;*************************************
    1887/     A89 :                      
    1888/     A89 : C2 FE               NEXTV:  LD       FORPTR(P2)     ;POINT P1 AT FOR  STACK,
    1889/     A8B : E4 8A                       XRI      L(FORSTK)      ;CHECKING FOR UNDERFLOW
    1890/     A8D : 9C 04                       JNZ      QNXTV1
    1891/     A8F : C4 0B                       LDI      11             ;REPORT ERROR
    1892/     A91 : 90 BB                       JMP      E17
    1893/     A93 : E4 8A               QNXTV1: XRI      L(FORSTK)
    1894/     A95 : 31                          XPAL     P1
    1895/     A96 : CA F1                       ST       P1L0W(P2)      ;SAVE OLD P1
    1896/     A98 : C4 10                       LDI      H(FORSTK)
    1897/     A9A : 35                          XPAH     P1
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 34 - 08.05.2023 15:13:29


    1898/     A9B : CA F0                       ST       P1HIGH(P2) 
    1899/     A9D : C2 FD                       LD       LSTK(P2)       ;POINT P3 AT AE STACK
    1900/     A9F : 33                          XPAL     P3
    1901/     AA0 : C4 10                       LDI      H(AESTK)
    1902/     AA2 : 37                          XPAH     P3
    1903/     AA3 : C7 FF                       LD       @-1(P3)        ;GET  VARIABLE  INDEX
    1904/     AA5 : E1 F9                       XOR      -7(P1)         ;COMPARE  WITH  INDEX
    1905/     AA7 : 98 04                       JZ       NXTV10         ;ON  FOR  STACK: ERROR
    1906/     AA9 : C4 0C                       LDI      12             ;IF NOT EQUAL
    1907/     AAB : 90 A1               E18:    JMP      E17
    1908/     AAD : E1 F9               NXTV10: XOR      -7(P1)         ;RESTORE  INDEX
    1909/     AAF : 01                          XAE                     ;SAVE IN  EREG
    1910/     AB0 : C2 80                       LD      EREG(P2)        ;GET L(VARIABLE)
    1911/     AB2 : 02                          CCL          
    1912/     AB3 : F1 FC                       ADD     -4(P1)          ;ADD L(STEP)
    1913/     AB5 : CA 80                       ST      EREG(P2)        ;STORE  IN VARIABLE
    1914/     AB7 : CB 00                       ST      (P3)            ;AND ON STACK
    1915/     AB9 : C6 01                       LD      @1(P2)          ;INCREMENT RAM PTR
    1916/     ABB : C2 80                       LD      EREG(P2)        ;GET H(VARIABLE)
    1917/     ABD : F1 FD                       ADD     -3(P1)          ;ADD H(STEP)
    1918/     ABF : CA 80                       ST      EREG(P2)        ;STORE IN VARIABLE
    1919/     AC1 : CB 01                       ST      1(P3)           ;AND ON STACK
    1920/     AC3 : C6 FF                       LD      @-1(P2)         ;RESTORE RAM POINTER
    1921/     AC5 : C1 FA                       LD      -6(P1)          ;GET L(LIMIT)
    1922/     AC7 : CB 02                       ST      2(P3)           ;PUT ON STACK
    1923/     AC9 : C1 FB                       LD      -5(P1)          ;GET H(LIMIT)
    1924/     ACB : CB 03                       ST      3(P3)           ;PUT ON STACK
    1925/     ACD : C1 FD                       LD      -3(P1)          ;GET H(STEP)
    1926/     ACF : 94 10                       JP      NXTV2           ;IF NEGATIVE, INVERT
    1927/     AD1 : C4 04                       LDI     4               ;ITEMS ON A. E.  STACK
    1928/     AD3 : CA EB                       ST      NUM(P2)         ;NUM = LOOP  COUNTER
    1929/     AD5 : C7 01               LOOP10: LD      @1(P3)          ;GET BYTE FROM STACK
    1930/     AD7 : E4 FF                       XRI     0xFF            ;INVERT IT
    1931/     AD9 : CB FF                       ST      -1(P3)          ;PUT BACK ON STACK
    1932/     ADB : BA EB                       DLD     NUM(P2)         ;DO UNTIL NUM = 0
    1933/     ADD : 9C F6                       JNZ     LOOP10
    1934/     ADF : 90 02                       JMP     NXTV3
    1935/     AE1 : C7 04               NXTV2:  LD      @4(P3)          ;UPDATE AE STACK POINTER
    1936/     AE3 : 33                  NXTV3:  XPAL    P3
    1937/     AE4 : CA FD                       ST      LSTK(P2)
    1938/     AE6 : C2 F1                       LD      P1L0W(P2)       ;RESTORE OLD P1
    1939/     AE8 : 31                          XPAL    P1
    1940/     AE9 : C2 F0                       LD      P1HIGH(P2)
    1941/     AEB : 35                          XPAH    P1
    1942/     AEC : 90 99               X26:    JMP     X25
    1943/     AEE :                      
    1944/     AEE :                      
    1945/     AEE :                     ;*************************************
    1946/     AEE :                     ;*     SECOND PART OF 'NEXT VAR'     *
    1947/     AEE :                     ;*************************************
    1948/     AEE :                      
    1949/     AEE : C2 EF               NEXTV1: LD      LO(P2)        ;IS FOR-LOOP  OVER WITH?
    1950/     AF0 : 98 08                       JZ      X_REDO        ;N0 - REPEAT LOOP
    1951/     AF2 : C2 FE                       LD      FORPTR(P2)    ;YES - POP FOR-STACK
    1952/     AF4 : 02                          CCL
    1953/     AF5 : F4 F9                       ADI     -7
    1954/     AF7 : CA FE                       ST      FORPTR(P2)
    1955/     AF9 : 3F                          XPPC    P3            ; RETURN TO I.L. INTERPRETER
    1956/     AFA : C2 FE               X_REDO: LD      FORPTR(P2)    ; POINT P3 AT FOR STACK
    1957/     AFC : 33                          XPAL    P3                                            
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 35 - 08.05.2023 15:13:29


    1958/     AFD : C4 10                       LDI     H(FORSTK)
    1959/     AFF : 37                          XPAH    P3                              
    1960/     B00 : C3 FF                       LD      -1(P3)        ;GET OLD P1 OFF STACK
    1961/     B02 : 35                          XPAH    P1
    1962/     B03 : C3 FE                       LD      -2(P3)
    1963/     B05 : 31                          XPAL    P1
    1964/     B06 : 90 E4                       JMP     X26
    1965/     B08 : 90 A1               E19:    JMP     E18
    1966/     B0A :                      
    1967/     B0A :                      
    1968/     B0A :                     ;************************************
    1969/     B0A :                     ;*      PRINT MEMORY AS STRING      *
    1970/     B0A :                     ;************************************
    1971/     B0A :                      
    1972/     B0A :                     ;  THIS ROUTINE IMPLEMENTS THE STATEMENT:
    1973/     B0A :                     ;      'PRINT' '$' FACTOR
    1974/     B0A :                      
    1975/     B0A : C2 EE               PSTRNG: LD      HI(P2)          ;POINT P1 AT STRING TO PRINT
    1976/     B0C : 35                          XPAH    P1
    1977/     B0D : C2 EF                       LD      LO(P2)
    1978/     B0F : 31                          XPAL    P1
    1979/     B10 : (MACRO)                      LDPI    P3,PUTC-1       ;POINT P3 AT PUTC ROUTINE
    1979/     B10 : C4 0F                      LDI     H(PUTC-1)
    1979/     B12 : 37                         XPAH    P3
    1979/     B13 : C4 C1                      LDI     L(PUTC-1)
    1979/     B15 : 33                         XPAL    P3
    1980/     B16 : C5 01               PRSTR1: LD      @1(P1)          ;GET A CHARACTER
    1981/     B18 : E4 0D                       XRI     0x0D            ;IS IT A CARRIAGE RETURN?
    1982/     B1A : 98 D0                       JZ      X26             ;YES - WE'RE DONE
    1983/     B1C : E4 0D                       XRI     0x0D            ;NO - PRINT THE CHARACTER
    1984/     B1E : 3F                          XPPC    P3
    1985/     B1F : 06                          CSA                     ;MAKE SURE NO ONE IS
    1986/     B20 : D4 20                       ANI     0x20            ;TYPING ON THE TTY
    1987/     B22 : 9C F2                       JNZ     PRSTR1          ;BEFORE REPEATING LOOP
    1988/     B24 : 90 C6                       JMP     X26
    1989/     B26 :                      
    1990/     B26 :                      
    1991/     B26 :                     ;************************************
    1992/     B26 :                     ;*        INPUT A STRING            *
    1993/     B26 :                     ;************************************
    1994/     B26 :                      
    1995/     B26 :                     ;  THIS ROUTINE IMPLEMENTS THE STATEMENT:
    1996/     B26 :                     ;       'INPUT' '$' FACTOR
    1997/     B26 :                      
    1998/     B26 : C2 EE               ISTRNG: LD      HI(P2)          ;GET ADDRESS TO STORE THE
    1999/     B28 : 37                          XPAH    P3              ;  STRING,  PUT IT INTO P3
    2000/     B29 : C2 EF                       LD      LO(P2)
    2001/     B2B : 33                          XPAL    P3
    2002/     B2C : C5 01               INPST2: LD      @1(P1)          ;GET A BYTE FROM LINE BUFFER
    2003/     B2E : CF 01                       ST      @1(P3)          ;PUT IT IN SPECIFIED LOCATION
    2004/     B30 : E4 0D                       XRI     0x0D            ;DO UNTIL CHAR = CARR.  RETURN
    2005/     B32 : 9C F8                       JNZ     INPST2
    2006/     B34 : 90 B6               X27:    JMP     X26
    2007/     B36 :                      
    2008/     B36 :                      
    2009/     B36 :                     ;************************************
    2010/     B36 :                     ;*   STRING CONSTANT ASSIGNMENT     *
    2011/     B36 :                     ;************************************
    2012/     B36 :                      
    2013/     B36 :                     ;  THIS ROUTINE IMPLEMENTS THE STATEMENT:
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 36 - 08.05.2023 15:13:29


    2014/     B36 :                     ;       '$'  FACTOR  '=' STRING
    2015/     B36 :                              
    2016/     B36 : C2 EF               PUTSTR: LD      LO(P2)          ;GET ADDRESS TO STORE STRING,
    2017/     B38 : 33                          XPAL    P3              ;  PUT IT INTO P3
    2018/     B39 : C2 EE                       LD      HI(P2)
    2019/     B3B : 37                          XPAH    P3
    2020/     B3C : C5 01               LOOP11: LD      @1(P1)         ;GET A BYTE FROM STRING
    2021/     B3E : E4 22                       XRI     '"'            ;CHECK FOR END OF STRING
    2022/     B40 : 98 0E                       JZ      STREND
    2023/     B42 : E4 2F                       XRI     '"' | 0x0D     ;MAKE SURE THERE'S NO CR
    2024/     B44 : 9C 04                       JNZ     PTSTR1
    2025/     B46 : C4 07                       LDI     7
    2026/     B48 : 90 BE                       JMP     E19            ;ERROR IF CARRIAGE RETURN
    2027/     B4A : E4 0D               PTSTR1: XRI     0x0D           ;RESTORE CHARACTER
    2028/     B4C : CF 01                       ST      @1(P3)         ;PUT IN SPECIFIED LOCATION
    2029/     B4E : 90 EC                       JMP     LOOP11         ;GET NEXT CHARACTER
    2030/     B50 : C4 0D               STREND: LDI     0x0D           ;APPEND CARRIAGE RETURN
    2031/     B52 : CB 00                       ST      (P3)           ;  TO STRING
    2032/     B54 : 90 DE                       JMP     X27
    2033/     B56 :                      
    2034/     B56 :                      
    2035/     B56 :                     ;************************************
    2036/     B56 :                     ;*           MOVE STRING            *
    2037/     B56 :                     ;************************************
    2038/     B56 :                      
    2039/     B56 :                     ;  THIS  ROUTINE  IMPLEMENTS  THE  STATEMENT:
    2040/     B56 :                     ;       '$' FACTOR  '='  '$' FACTOR
    2041/     B56 :                      
    2042/     B56 : C2 FD               MOVSTR: LD      LSTK(P2)        ;POINT P3 AT A. E.  STACK
    2043/     B58 : 33                          XPAL    P3
    2044/     B59 : C4 10                       LDI     H(AESTK)
    2045/     B5B : 37                          XPAH    P3
    2046/     B5C : C7 FF                       LD      @-1(P3)         ;GET ADDRESS OF SOURCE STRING
    2047/     B5E : 35                          XPAH    P1              ;INTO P1
    2048/     B5F : C7 FF                       LD      @-1(P3)
    2049/     B61 : 31                          XPAL    P1
    2050/     B62 : C7 FF                       LD      @-1(P3)         ;GET ADDRESS OF DESTINATION
    2051/     B64 : 01                          XAE                     ;STRING INTO P3
    2052/     B65 : C7 FF                       LD      @-1(P3)
    2053/     B67 : 33                          XPAL    P3
    2054/     B68 : CA FD                       ST      LSTK(P2)        ;UPDATE STACK POINTER
    2055/     B6A : 40                          LDE
    2056/     B6B : 37                          XPAH    P3
    2057/     B6C : C5 01               LOOP12: LD      @1(P1)          ;GET A SOURCE CHARACTER
    2058/     B6E : CF 01                       ST      @1(P3)          ;SEND IT TO DESTINATION
    2059/     B70 : E4 0D                       XRI     0x0D            ;REPEAT UNTIL CARRIAGE RET.
    2060/     B72 : 98 C0                       JZ      X27
    2061/     B74 : 06                          CSA                     ;OR KEYBOARD INTERRUPT
    2062/     B75 : D4 20                       ANI     0x20
    2063/     B77 : 9C F3                       JNZ     LOOP12
    2064/     B79 : 90 B9                       JMP     X27                                           
    2065/     B7B :                      
    2066/     B7B :                      
    2067/     B7B :                     ;************************************
    2068/     B7B :                     ;*    PUT PAGE NUMBER ON STACK      *
    2069/     B7B :                     ;************************************
    2070/     B7B :                      
    2071/     B7B : AA FD               PUTPGE:  ILD     LSTK(P2)
    2072/     B7D : AA FD                        ILD     LSTK(P2)
    2073/     B7F : 33                           XPAL    P3
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 37 - 08.05.2023 15:13:29


    2074/     B80 : C4 10                        LDI     H(AESTK)
    2075/     B82 : 37                           XPAH    P3
    2076/     B83 : C2 F6                        LD      PAGE(P2)
    2077/     B85 : CB FE                        ST      -2(P3)
    2078/     B87 : C4 00                        LDI     0
    2079/     B89 : CB FF                        ST      -1(P3)
    2080/     B8B : 90 A7                        JMP     X27
    2081/     B8D :                      
    2082/     B8D :                      
    2083/     B8D :                     ;************************************
    2084/     B8D :                     ;*        ASSIGN NEW PAGE           *
    2085/     B8D :                     ;************************************
    2086/     B8D :                      
    2087/     B8D : C2 EF               NUPAGE:  LD      LO(P2)         ;GET PAGE  #  FROM  STACK,
    2088/     B8F : D4 07                        ANI     7              ;GET  THE  LOW  3 BITS
    2089/     B91 : 9C 02                        JNZ     NUPGE0         ;PAGE  0 BECOMES PAGE  1
    2090/     B93 : C4 01                        LDI     1
    2091/     B95 : CA F6               NUPGE0:  ST      PAGE(P2)
    2092/     B97 : 3F                           XPPC    P3             ; RETURN
    2093/     B98 :                      
    2094/     B98 :                     ;*************************************
    2095/     B98 :                     ;*         FIND START OF PAGE        *
    2096/     B98 :                     ;*************************************
    2097/     B98 :                      
    2098/     B98 :                     ;  THIS ROUTINE COMPUTES THE START OF THE CURRENT TEXT PAGE,
    2099/     B98 :                     ;  STORING THE ADDRESS IN TEMP2(P2) [THE HIGH BYTE], AND
    2100/     B98 :                     ;  TEMP3(P2) [THE LOW BYTE].
    2101/     B98 :                      
    2102/     B98 : C2 F6               FNDPGE:  LD      PAGE(P2)
    2103/     B9A : E4 01                        XRI     1               ;SPECIAL CASE IS PAGE 1, BUT
    2104/     B9C : 9C 09                        JNZ     FPGE1           ;OTHERS ARE CONVENTIONAL
    2105/     B9E : C4 11                        LDI     H(PGM)          ;PAGE 1 STARTS AT 'PGM'
    2106/     BA0 : CA E9                        ST      TEMP2(P2)
    2107/     BA2 : C4 20                        LDI     L(PGM)
    2108/     BA4 : CA E8                        ST      TEMP3(P2)
    2109/     BA6 : 3F                           XPPC    P3              ;RETURN
    2110/     BA7 : E4 01               FPGE1:   XRI     1               ;RESTORE PAGE  #
    2111/     BA9 : 01                           XAE                     ;SAVE  IT
    2112/     BAA : C4 04                        LDI     4               ;LOOP  COUNTER  = 4
    2113/     BAC : CA EB                        ST      NUM(P2)
    2114/     BAE : 40                  LOOP13:  LDE                     ; MULTIPLY  PAGE# BY  16
    2115/     BAF : 02                           CCL                                 
    2116/     BB0 : 70                           ADE
    2117/     BB1 : 01                           XAE
    2118/     BB2 : BA EB                        DLD     NUM(P2)
    2119/     BB4 : 9C F8                        JNZ     LOOP13
    2120/     BB6 : 40                           LDE
    2121/     BB7 : CA E9                        ST      TEMP2(P2)       ;TEMP2 HAS HIGH BYTE
    2122/     BB9 : C4 02                        LDI     2               ;  OF ADDRESS NOW
    2123/     BBB : CA E8                        ST      TEMP3(P2)       ;LOW BYTE IS ALWAYS 2
    2124/     BBD : 3F                           XPPC    P3
    2125/     BBE :                      
    2126/     BBE :                      
    2127/     BBE :                     ;************************************
    2128/     BBE :                     ;*      MOVE CURSOR TO NEW PAGE     *
    2129/     BBE :                     ;************************************
    2130/     BBE :                      
    2131/     BBE : C2 E9               CHPAGE: LD      TEMP2(P2)       ;PUT START OF PAGE
    2132/     BC0 : 35                          XPAH    P1              ;INTO P1. THIS ROUTINE
    2133/     BC1 : C2 E8                       LD      TEMP3(P2)       ;MUST BE CALLED RIGHT
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 38 - 08.05.2023 15:13:29


    2134/     BC3 : 31                          XPAL    P1              ;AFTER 'FNDPGE'
    2135/     BC4 : 3F                          XPPC    P3              ;RETURN
    2136/     BC5 :                      
    2137/     BC5 :                      
    2138/     BC5 :                     ;************************************
    2139/     BC5 :                     ;*      DETERMINE CURRENT PAGE      *
    2140/     BC5 :                     ;************************************
    2141/     BC5 :                      
    2142/     BC5 : 35                  DETPGE: XPAH    P1              ;CURRENT PAGE IS HIGH
    2143/     BC6 : 01                          XAE                     ;PART OF CURSOR DIVIDED
    2144/     BC7 : 40                          LDE                     ;BY 16
    2145/     BC8 : 35                          XPAH    P1
    2146/     BC9 : 40                          LDE
    2147/     BCA : 1C                          SR
    2148/     BCB : 1C                          SR
    2149/     BCC : 1C                          SR
    2150/     BCD : 1C                          SR
    2151/     BCE : CA F6                       ST      PAGE(P2)
    2152/     BD0 : 3F                          XPPC    P3              ;RETURN
    2153/     BD1 :                      
    2154/     BD1 :                      
    2155/     BD1 :                     ;************************************
    2156/     BD1 :                     ;*         CLEAR CURRENT PAGE       *
    2157/     BD1 :                     ;************************************
    2158/     BD1 :                      
    2159/     BD1 : C2 E9               NEWPGM: LD      TEMP2(P2)       ;POINT P1 AT CURRENT PAGE
    2160/     BD3 : 35                          XPAH    P1
    2161/     BD4 : C2 E8                       LD      TEMP3(P2)
    2162/     BD6 : 31                          XPAL    P1
    2163/     BD7 : C4 0D                       LDI     0x0D            ;PUT DUMMY END-OF-LINE
    2164/     BD9 : C9 FF                       ST      -1(P1)          ;  JUST BEFORE TEXT
    2165/     BDB : C4 FF                       LDI     -1              ;PUT -1 AT START OF TEXT
    2166/     BDD : C9 00                       ST      (P1)
    2167/     BDF : C9 01                       ST      1(P1)
    2168/     BE1 : 3F                          XPPC    P3              ;RETURN
    2169/     BE2 :                      
    2170/     BE2 :                      
    2171/     BE2 :                     ;*************************************
    2172/     BE2 :                     ;*      FIND LINE NUMBER IN TEXT     *
    2173/     BE2 :                     ;*************************************
    2174/     BE2 :                      
    2175/     BE2 :                     ; INPUTS:  THE START OF THE CURRENT PAGE  IN TEMP2 AND TEMPS,
    2176/     BE2 :                     ;          THE LINE NUMBER TO LOOK FOR  IN LO AND HI.
    2177/     BE2 :                     ; OUTPUTS: THE ADDRESS OF THE FIRST LINE  IN THE NIBL TEXT
    2178/     BE2 :                     ;          WHOSE LINE NUMBER IS GREATER THAN OR EQUAL TO THE
    2179/     BE2 :                     ;          NUMBER IN HI AND LO,  RETURNED  IN P1 AND  ALSO IN
    2180/     BE2 :                     ;          IN THE RAM VARIABLES LABLLO AND LABLHI.   THE SIGN
    2181/     BE2 :                     ;          BIT OF LABLHI IS SET IF EXACT LINE  IS NOT FOUND.
    2182/     BE2 :                             
    2183/     BE2 : C2 E9               FNDLBL: LD      TEMP2(P2)       ; POINT P1 AT START OF TEXT
    2184/     BE4 : 35                          XPAH    P1
    2185/     BE5 : C2 E8                       LD      TEMP3(P2)
    2186/     BE7 : 31                          XPAL    P1
    2187/     BE8 : C1 00               FLBL1:  LD      (P1)            ;HAVE WE HIT END OF TEXT?
    2188/     BEA : E4 FF                       XRI     0xFF
    2189/     BEC : 94 12                       JP      FLBL2           ;YES - STOP  LOOKING
    2190/     BEE : 03                          SCL                     ; NO - COMPARE LINE NUMBERS
    2191/     BEF : C1 01                       LD      1(P1)           ;  BY SUBTRACTING
    2192/     BF1 : FA EF                       CAD     LO(P2)
    2193/     BF3 : C1 00                       LD      0(P1)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 39 - 08.05.2023 15:13:29


    2194/     BF5 : FA EE                       CAD     HI(P2)          ;IS TEXT LINE # >= LINE #?
    2195/     BF7 : 94 07                       JP      FLBL2           ;YES - STOP  LOOKING.
    2196/     BF9 : C1 02                       LD      2(P1)           ;NO - TRY NEXT LINE IN TEXT
    2197/     BFB : 01                          XAE
    2198/     BFC : C5 80                       LD      @EREG(P1)       ;  SKIP LENGTH OF  LINE
    2199/     BFE : 90 E8                       JMP     FLBL1
    2200/     C00 : 31                  FLBL2:  XPAL    P1              ;SAVE ADDRESS OF FOUND LINE
    2201/     C01 : CA F3                       ST      LABLLO(P2)      ;  IN LABLHI  AND LABLLO
    2202/     C03 : 31                          XPAL    P1
    2203/     C04 : 35                          XPAH    P1
    2204/     C05 : CA F2                       ST      LABLHI(P2)
    2205/     C07 : 35                          XPAH    P1
    2206/     C08 : C2 EF                       LD      LO(P2)          ;WAS THERE AN EXACT MATCH?
    2207/     C0A : E1 01                       XOR     1(P1)
    2208/     C0C : 9C 07                       JNZ     FLBL3
    2209/     C0E : C2 EE                       LD      HI(P2)
    2210/     C10 : E1 00                       XOR     0(P1)
    2211/     C12 : 9C 01                       JNZ     FLBL3           ;NO - FLAG THE ADDRESS
    2212/     C14 : 3F                          XPPC    P3              ;YES - RETURN NORMALLY
    2213/     C15 : C2 F2               FLBL3:  LD      LABLHI(P2)      ;SET SIGN BIT OF  HIGH PART
    2214/     C17 : DC 80                       ORI     0x80            ;  OF ADDRESS TO INDICATE
    2215/     C19 : CA F2                       ST      LABLHI(P2)      ;  INEXACT MATCH OF LINE #'S
    2216/     C1B : 3F                          XPPC    P3
    2217/     C1C :                      
    2218/     C1C :                             
    2219/     C1C :                                          
    2220/     C1C :                     ;***********************************
    2221/     C1C :                     ;*       I. L.  MACROS             *
    2222/     C1C :                     ;***********************************
    2223/     C1C :                      
    2224/     C1C : =0x2000              TSTBITH =        TSTBIT*256
    2225/     C1C : =0x8000              CALBITH =        CALBIT*256
    2226/     C1C : =0x4000              JMPBITH =        JMPBIT*256
    2227/     C1C :                      
    2228/     C1C :                     
    2229/     C1C :                     TSTR     MACRO   FAIL,A,B 
    2230/     C1C :                              DB      H((FAIL & 0x0FFF)| TSTBITH)
    2231/     C1C :                              DB      L((FAIL & 0x0FFF)| TSTBITH)
    2232/     C1C :                              IFB     B
    2233/     C1C :                                DB    A |0x80 
    2234/     C1C :                              ELSE
    2235/     C1C :                                DB    A 
    2236/     C1C :                                DB    B |0x80
    2237/     C1C :                              ENDIF
    2238/     C1C :                              ENDM
    2239/     C1C :                      
    2240/     C1C :                     TSTCR    MACRO   FAIL
    2241/     C1C :                              DB      H(FAIL & 0x0FFF | TSTBITH)
    2242/     C1C :                              DB      L(FAIL & 0x0FFF | TSTBITH)
    2243/     C1C :                              DB      0x0D|0x80
    2244/     C1C :                              ENDM
    2245/     C1C :                      
    2246/     C1C :                     TSTV     MACRO   FAIL
    2247/     C1C :                              DB      H((TSTVAR-1) & 0x0FFF)
    2248/     C1C :                              DB      L((TSTVAR-1) & 0x0FFF)
    2249/     C1C :                              DB      H(FAIL)
    2250/     C1C :                              DB      L(FAIL)
    2251/     C1C :                              ENDM
    2252/     C1C :                      
    2253/     C1C :                     TSTN     MACRO   FAIL
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 40 - 08.05.2023 15:13:29


    2254/     C1C :                              DB      H((TSTNUM-1) & 0x0FFF)
    2255/     C1C :                              DB      L((TSTNUM-1) & 0x0FFF)
    2256/     C1C :                              DB      H(FAIL)
    2257/     C1C :                              DB      L(FAIL)
    2258/     C1C :                              ENDM
    2259/     C1C :                      
    2260/     C1C :                     JUMP     MACRO   ADR
    2261/     C1C :                              DB      H(ADR & 0x0FFF  | JMPBITH)
    2262/     C1C :                              DB      L(ADR & 0x0FFF  | JMPBITH)
    2263/     C1C :                              ENDM
    2264/     C1C :                      
    2265/     C1C :                     CALL     MACRO   ADR
    2266/     C1C :                              DB      H(ADR & 0x0FFF  | CALBITH)
    2267/     C1C :                              DB      L(ADR & 0x0FFF  | CALBITH)
    2268/     C1C :                              ENDM
    2269/     C1C :                     
    2270/     C1C :                     DO       MACRO   ADR
    2271/     C1C :                              IFNB    ADR 
    2272/     C1C :                              DB      H((ADR-1) & 0x0FFF)
    2273/     C1C :                              DB      L((ADR-1) & 0x0FFF)
    2274/     C1C :                              SHIFT
    2275/     C1C :                              DO      ALLARGS
    2276/     C1C :                              ENDIF
    2277/     C1C :                              ENDM 
    2278/     C1C :                     
    2279/     C1C :                              
    2280/     C1C :                      
    2281/     C1C :                     ;*************************************
    2282/     C1C :                     ;*           I. L. TABLE             *
    2283/     C1C :                     ;*************************************
    2284/     C1C :                      
    2285/     C1C : (MACRO)              START:  DO       NLINE
    2285/     C1C : =>NOT BLANK                   IFNB    NLINE 
    2285/     C1C : 02                           DB      H((NLINE-1) & 0x0FFF)
    2285/     C1D : 0C                           DB      L((NLINE-1) & 0x0FFF)
    2285/     C1E :                              SHIFT
    2285/     C1E :  (MACRO-2)                    DO      
    2285/     C1E : =>BLANK                       IFNB     
    2285/     C1E :                              DB      H((-1) & 0x0FFF)
    2285/     C1E :                              DB      L((-1) & 0x0FFF)
    2285/     C1E :                              SHIFT
    2285/     C1E :                              DO      
    2285/     C1E : [2285]                        ENDIF
    2285/     C1E : [2285]                        ENDIF
    2286/     C1E : (MACRO)              PROMPT: DO       GETL
    2286/     C1E : =>NOT BLANK                   IFNB    GETL 
    2286/     C1E : 07                           DB      H((GETL-1) & 0x0FFF)
    2286/     C1F : 56                           DB      L((GETL-1) & 0x0FFF)
    2286/     C20 :                              SHIFT
    2286/     C20 :  (MACRO-2)                    DO      
    2286/     C20 : =>BLANK                       IFNB     
    2286/     C20 :                              DB      H((-1) & 0x0FFF)
    2286/     C20 :                              DB      L((-1) & 0x0FFF)
    2286/     C20 :                              SHIFT
    2286/     C20 :                              DO      
    2286/     C20 : [2286]                        ENDIF
    2286/     C20 : [2286]                        ENDIF
    2287/     C20 : (MACRO)                      TSTCR    PRMPT1
    2287/     C20 : 2C                           DB      H(PRMPT1 & 0x0FFF | TSTBITH)
    2287/     C21 : 25                           DB      L(PRMPT1 & 0x0FFF | TSTBITH)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 41 - 08.05.2023 15:13:29


    2287/     C22 : 8D                           DB      0x0D|0x80
    2288/     C23 : (MACRO)                      JUMP     PROMPT
    2288/     C23 : 4C                           DB      H(PROMPT & 0x0FFF  | JMPBITH)
    2288/     C24 : 1E                           DB      L(PROMPT & 0x0FFF  | JMPBITH)
    2289/     C25 : (MACRO)              PRMPT1: TSTN     LIST
    2289/     C25 : 06                           DB      H((TSTNUM-1) & 0x0FFF)
    2289/     C26 : AB                           DB      L((TSTNUM-1) & 0x0FFF)
    2289/     C27 : 0C                           DB      H(LIST)
    2289/     C28 : 35                           DB      L(LIST)
    2290/     C29 : (MACRO)                      DO       FNDPGE,XCHGP1,POPAE,FNDLBL,INSRT
    2290/     C29 : =>NOT BLANK                   IFNB    FNDPGE 
    2290/     C29 : 0B                           DB      H((FNDPGE-1) & 0x0FFF)
    2290/     C2A : 97                           DB      L((FNDPGE-1) & 0x0FFF)
    2290/     C2B :                              SHIFT
    2290/     C2B :  (MACRO-2)                    DO      XCHGP1,POPAE,FNDLBL,INSRT
    2290/     C2B : =>NOT BLANK                   IFNB    XCHGP1 
    2290/     C2B : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2290/     C2C : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2290/     C2D :                              SHIFT
    2290/     C2D :   (MACRO-3)                   DO      POPAE,FNDLBL,INSRT
    2290/     C2D : =>NOT BLANK                   IFNB    POPAE 
    2290/     C2D : 09                           DB      H((POPAE-1) & 0x0FFF)
    2290/     C2E : 15                           DB      L((POPAE-1) & 0x0FFF)
    2290/     C2F :                              SHIFT
    2290/     C2F :    (MACRO-4)                  DO      FNDLBL,INSRT
    2290/     C2F : =>NOT BLANK                   IFNB    FNDLBL 
    2290/     C2F : 0B                           DB      H((FNDLBL-1) & 0x0FFF)
    2290/     C30 : E1                           DB      L((FNDLBL-1) & 0x0FFF)
    2290/     C31 :                              SHIFT
    2290/     C31 :     (MACRO-5)                 DO      INSRT
    2290/     C31 : =>NOT BLANK                   IFNB    INSRT 
    2290/     C31 : 08                           DB      H((INSRT-1) & 0x0FFF)
    2290/     C32 : 23                           DB      L((INSRT-1) & 0x0FFF)
    2290/     C33 :                              SHIFT
    2290/     C33 :      (MACRO-6)                DO      
    2290/     C33 : =>BLANK                       IFNB     
    2290/     C33 :                              DB      H((-1) & 0x0FFF)
    2290/     C33 :                              DB      L((-1) & 0x0FFF)
    2290/     C33 :                              SHIFT
    2290/     C33 :                              DO      
    2290/     C33 : [2290]                        ENDIF
    2290/     C33 : [2290]                        ENDIF
    2290/     C33 : [2290]                        ENDIF
    2290/     C33 : [2290]                        ENDIF
    2290/     C33 : [2290]                        ENDIF
    2290/     C33 : [2290]                        ENDIF
    2291/     C33 : (MACRO)                      JUMP     PROMPT
    2291/     C33 : 4C                           DB      H(PROMPT & 0x0FFF  | JMPBITH)
    2291/     C34 : 1E                           DB      L(PROMPT & 0x0FFF  | JMPBITH)
    2292/     C35 :                      
    2293/     C35 : (MACRO)              LIST:   TSTR     RUN,"LIS",'T'
    2293/     C35 : 2C                           DB      H((RUN & 0x0FFF)| TSTBITH)
    2293/     C36 : 51                           DB      L((RUN & 0x0FFF)| TSTBITH)
    2293/     C37 : =>NOT BLANK                   IFB     'T'
    2293/     C37 :                                DB    "LIS" |0x80 
    2293/     C37 : =>TRUE                        ELSE
    2293/     C37 : 4C 49 53                       DB    "LIS" 
    2293/     C3A : D4                             DB    'T' |0x80
    2293/     C3B : [2293]                        ENDIF
    2294/     C3B : (MACRO)                      DO       FNDPGE
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 42 - 08.05.2023 15:13:29


    2294/     C3B : =>NOT BLANK                   IFNB    FNDPGE 
    2294/     C3B : 0B                           DB      H((FNDPGE-1) & 0x0FFF)
    2294/     C3C : 97                           DB      L((FNDPGE-1) & 0x0FFF)
    2294/     C3D :                              SHIFT
    2294/     C3D :  (MACRO-2)                    DO      
    2294/     C3D : =>BLANK                       IFNB     
    2294/     C3D :                              DB      H((-1) & 0x0FFF)
    2294/     C3D :                              DB      L((-1) & 0x0FFF)
    2294/     C3D :                              SHIFT
    2294/     C3D :                              DO      
    2294/     C3D : [2294]                        ENDIF
    2294/     C3D : [2294]                        ENDIF
    2295/     C3D : (MACRO)                      TSTN     LIST1
    2295/     C3D : 06                           DB      H((TSTNUM-1) & 0x0FFF)
    2295/     C3E : AB                           DB      L((TSTNUM-1) & 0x0FFF)
    2295/     C3F : 0C                           DB      H(LIST1)
    2295/     C40 : 47                           DB      L(LIST1)
    2296/     C41 : (MACRO)                      DO       POPAE,FNDLBL
    2296/     C41 : =>NOT BLANK                   IFNB    POPAE 
    2296/     C41 : 09                           DB      H((POPAE-1) & 0x0FFF)
    2296/     C42 : 15                           DB      L((POPAE-1) & 0x0FFF)
    2296/     C43 :                              SHIFT
    2296/     C43 :  (MACRO-2)                    DO      FNDLBL
    2296/     C43 : =>NOT BLANK                   IFNB    FNDLBL 
    2296/     C43 : 0B                           DB      H((FNDLBL-1) & 0x0FFF)
    2296/     C44 : E1                           DB      L((FNDLBL-1) & 0x0FFF)
    2296/     C45 :                              SHIFT
    2296/     C45 :   (MACRO-3)                   DO      
    2296/     C45 : =>BLANK                       IFNB     
    2296/     C45 :                              DB      H((-1) & 0x0FFF)
    2296/     C45 :                              DB      L((-1) & 0x0FFF)
    2296/     C45 :                              SHIFT
    2296/     C45 :                              DO      
    2296/     C45 : [2296]                        ENDIF
    2296/     C45 : [2296]                        ENDIF
    2296/     C45 : [2296]                        ENDIF
    2297/     C45 : (MACRO)                      JUMP     LIST2
    2297/     C45 : 4C                           DB      H(LIST2 & 0x0FFF  | JMPBITH)
    2297/     C46 : 49                           DB      L(LIST2 & 0x0FFF  | JMPBITH)
    2298/     C47 : (MACRO)              LIST1:  DO       CHPAGE
    2298/     C47 : =>NOT BLANK                   IFNB    CHPAGE 
    2298/     C47 : 0B                           DB      H((CHPAGE-1) & 0x0FFF)
    2298/     C48 : BD                           DB      L((CHPAGE-1) & 0x0FFF)
    2298/     C49 :                              SHIFT
    2298/     C49 :  (MACRO-2)                    DO      
    2298/     C49 : =>BLANK                       IFNB     
    2298/     C49 :                              DB      H((-1) & 0x0FFF)
    2298/     C49 :                              DB      L((-1) & 0x0FFF)
    2298/     C49 :                              SHIFT
    2298/     C49 :                              DO      
    2298/     C49 : [2298]                        ENDIF
    2298/     C49 : [2298]                        ENDIF
    2299/     C49 : (MACRO)              LIST2:  DO       LST
    2299/     C49 : =>NOT BLANK                   IFNB    LST 
    2299/     C49 : 02                           DB      H((LST-1) & 0x0FFF)
    2299/     C4A : D8                           DB      L((LST-1) & 0x0FFF)
    2299/     C4B :                              SHIFT
    2299/     C4B :  (MACRO-2)                    DO      
    2299/     C4B : =>BLANK                       IFNB     
    2299/     C4B :                              DB      H((-1) & 0x0FFF)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 43 - 08.05.2023 15:13:29


    2299/     C4B :                              DB      L((-1) & 0x0FFF)
    2299/     C4B :                              SHIFT
    2299/     C4B :                              DO      
    2299/     C4B : [2299]                        ENDIF
    2299/     C4B : [2299]                        ENDIF
    2300/     C4B : (MACRO)              LIST3:  CALL     PRNUM
    2300/     C4B : 8F                           DB      H(PRNUM & 0x0FFF  | CALBITH)
    2300/     C4C : 2F                           DB      L(PRNUM & 0x0FFF  | CALBITH)
    2301/     C4D : (MACRO)                      DO       LST3
    2301/     C4D : =>NOT BLANK                   IFNB    LST3 
    2301/     C4D : 03                           DB      H((LST3-1) & 0x0FFF)
    2301/     C4E : 05                           DB      L((LST3-1) & 0x0FFF)
    2301/     C4F :                              SHIFT
    2301/     C4F :  (MACRO-2)                    DO      
    2301/     C4F : =>BLANK                       IFNB     
    2301/     C4F :                              DB      H((-1) & 0x0FFF)
    2301/     C4F :                              DB      L((-1) & 0x0FFF)
    2301/     C4F :                              SHIFT
    2301/     C4F :                              DO      
    2301/     C4F : [2301]                        ENDIF
    2301/     C4F : [2301]                        ENDIF
    2302/     C4F : (MACRO)                      JUMP     START
    2302/     C4F : 4C                           DB      H(START & 0x0FFF  | JMPBITH)
    2302/     C50 : 1C                           DB      L(START & 0x0FFF  | JMPBITH)
    2303/     C51 : (MACRO)              RUN:    TSTR     CLR,"RU",'N'
    2303/     C51 : 2C                           DB      H((CLR & 0x0FFF)| TSTBITH)
    2303/     C52 : 60                           DB      L((CLR & 0x0FFF)| TSTBITH)
    2303/     C53 : =>NOT BLANK                   IFB     'N'
    2303/     C53 :                                DB    "RU" |0x80 
    2303/     C53 : =>TRUE                        ELSE
    2303/     C53 : 52 55                          DB    "RU" 
    2303/     C55 : CE                             DB    'N' |0x80
    2303/     C56 : [2303]                        ENDIF
    2304/     C56 : (MACRO)                      DO       DONE
    2304/     C56 : =>NOT BLANK                   IFNB    DONE 
    2304/     C56 : 01                           DB      H((DONE-1) & 0x0FFF)
    2304/     C57 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2304/     C58 :                              SHIFT
    2304/     C58 :  (MACRO-2)                    DO      
    2304/     C58 : =>BLANK                       IFNB     
    2304/     C58 :                              DB      H((-1) & 0x0FFF)
    2304/     C58 :                              DB      L((-1) & 0x0FFF)
    2304/     C58 :                              SHIFT
    2304/     C58 :                              DO      
    2304/     C58 : [2304]                        ENDIF
    2304/     C58 : [2304]                        ENDIF
    2305/     C58 : (MACRO)              BEGIN:  DO       FNDPGE,CHPAGE,STRT,NXT
    2305/     C58 : =>NOT BLANK                   IFNB    FNDPGE 
    2305/     C58 : 0B                           DB      H((FNDPGE-1) & 0x0FFF)
    2305/     C59 : 97                           DB      L((FNDPGE-1) & 0x0FFF)
    2305/     C5A :                              SHIFT
    2305/     C5A :  (MACRO-2)                    DO      CHPAGE,STRT,NXT
    2305/     C5A : =>NOT BLANK                   IFNB    CHPAGE 
    2305/     C5A : 0B                           DB      H((CHPAGE-1) & 0x0FFF)
    2305/     C5B : BD                           DB      L((CHPAGE-1) & 0x0FFF)
    2305/     C5C :                              SHIFT
    2305/     C5C :   (MACRO-3)                   DO      STRT,NXT
    2305/     C5C : =>NOT BLANK                   IFNB    STRT 
    2305/     C5C : 02                           DB      H((STRT-1) & 0x0FFF)
    2305/     C5D : BF                           DB      L((STRT-1) & 0x0FFF)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 44 - 08.05.2023 15:13:29


    2305/     C5E :                              SHIFT
    2305/     C5E :    (MACRO-4)                  DO      NXT
    2305/     C5E : =>NOT BLANK                   IFNB    NXT 
    2305/     C5E : 02                           DB      H((NXT-1) & 0x0FFF)
    2305/     C5F : 83                           DB      L((NXT-1) & 0x0FFF)
    2305/     C60 :                              SHIFT
    2305/     C60 :     (MACRO-5)                 DO      
    2305/     C60 : =>BLANK                       IFNB     
    2305/     C60 :                              DB      H((-1) & 0x0FFF)
    2305/     C60 :                              DB      L((-1) & 0x0FFF)
    2305/     C60 :                              SHIFT
    2305/     C60 :                              DO      
    2305/     C60 : [2305]                        ENDIF
    2305/     C60 : [2305]                        ENDIF
    2305/     C60 : [2305]                        ENDIF
    2305/     C60 : [2305]                        ENDIF
    2305/     C60 : [2305]                        ENDIF
    2306/     C60 : (MACRO)              CLR:    TSTR     NEW,"CLEA",'R'
    2306/     C60 : 2C                           DB      H((NEW & 0x0FFF)| TSTBITH)
    2306/     C61 : 6D                           DB      L((NEW & 0x0FFF)| TSTBITH)
    2306/     C62 : =>NOT BLANK                   IFB     'R'
    2306/     C62 :                                DB    "CLEA" |0x80 
    2306/     C62 : =>TRUE                        ELSE
    2306/     C62 : 43 4C 45 41                    DB    "CLEA" 
    2306/     C66 : D2                             DB    'R' |0x80
    2306/     C67 : [2306]                        ENDIF
    2307/     C67 : (MACRO)                      DO       DONE,CLEAR,NXT
    2307/     C67 : =>NOT BLANK                   IFNB    DONE 
    2307/     C67 : 01                           DB      H((DONE-1) & 0x0FFF)
    2307/     C68 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2307/     C69 :                              SHIFT
    2307/     C69 :  (MACRO-2)                    DO      CLEAR,NXT
    2307/     C69 : =>NOT BLANK                   IFNB    CLEAR 
    2307/     C69 : 00                           DB      H((CLEAR-1) & 0x0FFF)
    2307/     C6A : 50                           DB      L((CLEAR-1) & 0x0FFF)
    2307/     C6B :                              SHIFT
    2307/     C6B :   (MACRO-3)                   DO      NXT
    2307/     C6B : =>NOT BLANK                   IFNB    NXT 
    2307/     C6B : 02                           DB      H((NXT-1) & 0x0FFF)
    2307/     C6C : 83                           DB      L((NXT-1) & 0x0FFF)
    2307/     C6D :                              SHIFT
    2307/     C6D :    (MACRO-4)                  DO      
    2307/     C6D : =>BLANK                       IFNB     
    2307/     C6D :                              DB      H((-1) & 0x0FFF)
    2307/     C6D :                              DB      L((-1) & 0x0FFF)
    2307/     C6D :                              SHIFT
    2307/     C6D :                              DO      
    2307/     C6D : [2307]                        ENDIF
    2307/     C6D : [2307]                        ENDIF
    2307/     C6D : [2307]                        ENDIF
    2307/     C6D : [2307]                        ENDIF
    2308/     C6D : (MACRO)              NEW:    TSTR     STMT,"NE",'W'
    2308/     C6D : 2C                           DB      H((STMT & 0x0FFF)| TSTBITH)
    2308/     C6E : 86                           DB      L((STMT & 0x0FFF)| TSTBITH)
    2308/     C6F : =>NOT BLANK                   IFB     'W'
    2308/     C6F :                                DB    "NE" |0x80 
    2308/     C6F : =>TRUE                        ELSE
    2308/     C6F : 4E 45                          DB    "NE" 
    2308/     C71 : D7                             DB    'W' |0x80
    2308/     C72 : [2308]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 45 - 08.05.2023 15:13:29


    2309/     C72 : (MACRO)                      TSTN     DFAULT
    2309/     C72 : 06                           DB      H((TSTNUM-1) & 0x0FFF)
    2309/     C73 : AB                           DB      L((TSTNUM-1) & 0x0FFF)
    2309/     C74 : 0C                           DB      H(DFAULT)
    2309/     C75 : 78                           DB      L(DFAULT)
    2310/     C76 : (MACRO)                      JUMP     NEW1
    2310/     C76 : 4C                           DB      H(NEW1 & 0x0FFF  | JMPBITH)
    2310/     C77 : 7A                           DB      L(NEW1 & 0x0FFF  | JMPBITH)
    2311/     C78 : (MACRO)              DFAULT: DO       LIT1
    2311/     C78 : =>NOT BLANK                   IFNB    LIT1 
    2311/     C78 : 0A                           DB      H((LIT1-1) & 0x0FFF)
    2311/     C79 : 33                           DB      L((LIT1-1) & 0x0FFF)
    2311/     C7A :                              SHIFT
    2311/     C7A :  (MACRO-2)                    DO      
    2311/     C7A : =>BLANK                       IFNB     
    2311/     C7A :                              DB      H((-1) & 0x0FFF)
    2311/     C7A :                              DB      L((-1) & 0x0FFF)
    2311/     C7A :                              SHIFT
    2311/     C7A :                              DO      
    2311/     C7A : [2311]                        ENDIF
    2311/     C7A : [2311]                        ENDIF
    2312/     C7A : (MACRO)              NEW1:   DO       DONE,POPAE,NUPAGE,FNDPGE,NEWPGM,NXT
    2312/     C7A : =>NOT BLANK                   IFNB    DONE 
    2312/     C7A : 01                           DB      H((DONE-1) & 0x0FFF)
    2312/     C7B : 2F                           DB      L((DONE-1) & 0x0FFF)
    2312/     C7C :                              SHIFT
    2312/     C7C :  (MACRO-2)                    DO      POPAE,NUPAGE,FNDPGE,NEWPGM,NXT
    2312/     C7C : =>NOT BLANK                   IFNB    POPAE 
    2312/     C7C : 09                           DB      H((POPAE-1) & 0x0FFF)
    2312/     C7D : 15                           DB      L((POPAE-1) & 0x0FFF)
    2312/     C7E :                              SHIFT
    2312/     C7E :   (MACRO-3)                   DO      NUPAGE,FNDPGE,NEWPGM,NXT
    2312/     C7E : =>NOT BLANK                   IFNB    NUPAGE 
    2312/     C7E : 0B                           DB      H((NUPAGE-1) & 0x0FFF)
    2312/     C7F : 8C                           DB      L((NUPAGE-1) & 0x0FFF)
    2312/     C80 :                              SHIFT
    2312/     C80 :    (MACRO-4)                  DO      FNDPGE,NEWPGM,NXT
    2312/     C80 : =>NOT BLANK                   IFNB    FNDPGE 
    2312/     C80 : 0B                           DB      H((FNDPGE-1) & 0x0FFF)
    2312/     C81 : 97                           DB      L((FNDPGE-1) & 0x0FFF)
    2312/     C82 :                              SHIFT
    2312/     C82 :     (MACRO-5)                 DO      NEWPGM,NXT
    2312/     C82 : =>NOT BLANK                   IFNB    NEWPGM 
    2312/     C82 : 0B                           DB      H((NEWPGM-1) & 0x0FFF)
    2312/     C83 : D0                           DB      L((NEWPGM-1) & 0x0FFF)
    2312/     C84 :                              SHIFT
    2312/     C84 :      (MACRO-6)                DO      NXT
    2312/     C84 : =>NOT BLANK                   IFNB    NXT 
    2312/     C84 : 02                           DB      H((NXT-1) & 0x0FFF)
    2312/     C85 : 83                           DB      L((NXT-1) & 0x0FFF)
    2312/     C86 :                              SHIFT
    2312/     C86 :       (MACRO-7)               DO      
    2312/     C86 : =>BLANK                       IFNB     
    2312/     C86 :                              DB      H((-1) & 0x0FFF)
    2312/     C86 :                              DB      L((-1) & 0x0FFF)
    2312/     C86 :                              SHIFT
    2312/     C86 :                              DO      
    2312/     C86 : [2312]                        ENDIF
    2312/     C86 : [2312]                        ENDIF
    2312/     C86 : [2312]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 46 - 08.05.2023 15:13:29


    2312/     C86 : [2312]                        ENDIF
    2312/     C86 : [2312]                        ENDIF
    2312/     C86 : [2312]                        ENDIF
    2312/     C86 : [2312]                        ENDIF
    2313/     C86 : (MACRO)              STMT:   TSTR     LET,"LE",'T'
    2313/     C86 : 2C                           DB      H((LET & 0x0FFF)| TSTBITH)
    2313/     C87 : 8B                           DB      L((LET & 0x0FFF)| TSTBITH)
    2313/     C88 : =>NOT BLANK                   IFB     'T'
    2313/     C88 :                                DB    "LE" |0x80 
    2313/     C88 : =>TRUE                        ELSE
    2313/     C88 : 4C 45                          DB    "LE" 
    2313/     C8A : D4                             DB    'T' |0x80
    2313/     C8B : [2313]                        ENDIF
    2314/     C8B : (MACRO)              LET:    TSTV     AT
    2314/     C8B : 04                           DB      H((TSTVAR-1) & 0x0FFF)
    2314/     C8C : E0                           DB      L((TSTVAR-1) & 0x0FFF)
    2314/     C8D : 0C                           DB      H(AT)
    2314/     C8E : 9A                           DB      L(AT)
    2315/     C8F : (MACRO)                      TSTR     SYNTAX,'='
    2315/     C8F : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2315/     C90 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2315/     C91 : =>BLANK                       IFB     
    2315/     C91 : BD                             DB    '=' |0x80 
    2315/     C92 : =>FALSE                       ELSE
    2315/     C92 :                                DB    '=' 
    2315/     C92 :                                DB     |0x80
    2315/     C92 : [2315]                        ENDIF
    2316/     C92 : (MACRO)                      CALL     RELEXP
    2316/     C92 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2316/     C93 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2317/     C94 : (MACRO)                      DO       STORE,DONE,NXT
    2317/     C94 : =>NOT BLANK                   IFNB    STORE 
    2317/     C94 : 04                           DB      H((STORE-1) & 0x0FFF)
    2317/     C95 : C0                           DB      L((STORE-1) & 0x0FFF)
    2317/     C96 :                              SHIFT
    2317/     C96 :  (MACRO-2)                    DO      DONE,NXT
    2317/     C96 : =>NOT BLANK                   IFNB    DONE 
    2317/     C96 : 01                           DB      H((DONE-1) & 0x0FFF)
    2317/     C97 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2317/     C98 :                              SHIFT
    2317/     C98 :   (MACRO-3)                   DO      NXT
    2317/     C98 : =>NOT BLANK                   IFNB    NXT 
    2317/     C98 : 02                           DB      H((NXT-1) & 0x0FFF)
    2317/     C99 : 83                           DB      L((NXT-1) & 0x0FFF)
    2317/     C9A :                              SHIFT
    2317/     C9A :    (MACRO-4)                  DO      
    2317/     C9A : =>BLANK                       IFNB     
    2317/     C9A :                              DB      H((-1) & 0x0FFF)
    2317/     C9A :                              DB      L((-1) & 0x0FFF)
    2317/     C9A :                              SHIFT
    2317/     C9A :                              DO      
    2317/     C9A : [2317]                        ENDIF
    2317/     C9A : [2317]                        ENDIF
    2317/     C9A : [2317]                        ENDIF
    2317/     C9A : [2317]                        ENDIF
    2318/     C9A : (MACRO)              AT:     TSTR     IF, '@'
    2318/     C9A : 2C                           DB      H((IF & 0x0FFF)| TSTBITH)
    2318/     C9B : AA                           DB      L((IF & 0x0FFF)| TSTBITH)
    2318/     C9C : =>BLANK                       IFB     
    2318/     C9C : C0                             DB    '@' |0x80 
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 47 - 08.05.2023 15:13:29


    2318/     C9D : =>FALSE                       ELSE
    2318/     C9D :                                DB    '@' 
    2318/     C9D :                                DB     |0x80
    2318/     C9D : [2318]                        ENDIF
    2319/     C9D : (MACRO)                      CALL     FACTOR
    2319/     C9D : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2319/     C9E : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2320/     C9F : (MACRO)                      TSTR     SYNTAX,'='
    2320/     C9F : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2320/     CA0 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2320/     CA1 : =>BLANK                       IFB     
    2320/     CA1 : BD                             DB    '=' |0x80 
    2320/     CA2 : =>FALSE                       ELSE
    2320/     CA2 :                                DB    '=' 
    2320/     CA2 :                                DB     |0x80
    2320/     CA2 : [2320]                        ENDIF
    2321/     CA2 : (MACRO)                      CALL     RELEXP
    2321/     CA2 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2321/     CA3 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2322/     CA4 : (MACRO)                      DO       MOVE,DONE,NXT
    2322/     CA4 : =>NOT BLANK                   IFNB    MOVE 
    2322/     CA4 : 08                           DB      H((MOVE-1) & 0x0FFF)
    2322/     CA5 : 07                           DB      L((MOVE-1) & 0x0FFF)
    2322/     CA6 :                              SHIFT
    2322/     CA6 :  (MACRO-2)                    DO      DONE,NXT
    2322/     CA6 : =>NOT BLANK                   IFNB    DONE 
    2322/     CA6 : 01                           DB      H((DONE-1) & 0x0FFF)
    2322/     CA7 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2322/     CA8 :                              SHIFT
    2322/     CA8 :   (MACRO-3)                   DO      NXT
    2322/     CA8 : =>NOT BLANK                   IFNB    NXT 
    2322/     CA8 : 02                           DB      H((NXT-1) & 0x0FFF)
    2322/     CA9 : 83                           DB      L((NXT-1) & 0x0FFF)
    2322/     CAA :                              SHIFT
    2322/     CAA :    (MACRO-4)                  DO      
    2322/     CAA : =>BLANK                       IFNB     
    2322/     CAA :                              DB      H((-1) & 0x0FFF)
    2322/     CAA :                              DB      L((-1) & 0x0FFF)
    2322/     CAA :                              SHIFT
    2322/     CAA :                              DO      
    2322/     CAA : [2322]                        ENDIF
    2322/     CAA : [2322]                        ENDIF
    2322/     CAA : [2322]                        ENDIF
    2322/     CAA : [2322]                        ENDIF
    2323/     CAA :                      
    2324/     CAA : (MACRO)              IF:     TSTR     UNT,"I",'F'
    2324/     CAA : 2C                           DB      H((UNT & 0x0FFF)| TSTBITH)
    2324/     CAB : BC                           DB      L((UNT & 0x0FFF)| TSTBITH)
    2324/     CAC : =>NOT BLANK                   IFB     'F'
    2324/     CAC :                                DB    "I" |0x80 
    2324/     CAC : =>TRUE                        ELSE
    2324/     CAC : 49                             DB    "I" 
    2324/     CAD : C6                             DB    'F' |0x80
    2324/     CAE : [2324]                        ENDIF
    2325/     CAE : (MACRO)                      CALL     RELEXP
    2325/     CAE : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2325/     CAF : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2326/     CB0 : (MACRO)                      TSTR     IF1,"THE",'N'
    2326/     CB0 : 2C                           DB      H((IF1 & 0x0FFF)| TSTBITH)
    2326/     CB1 : B6                           DB      L((IF1 & 0x0FFF)| TSTBITH)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 48 - 08.05.2023 15:13:29


    2326/     CB2 : =>NOT BLANK                   IFB     'N'
    2326/     CB2 :                                DB    "THE" |0x80 
    2326/     CB2 : =>TRUE                        ELSE
    2326/     CB2 : 54 48 45                       DB    "THE" 
    2326/     CB5 : CE                             DB    'N' |0x80
    2326/     CB6 : [2326]                        ENDIF
    2327/     CB6 : (MACRO)              IF1:    DO       POPAE,CMPR
    2327/     CB6 : =>NOT BLANK                   IFNB    POPAE 
    2327/     CB6 : 09                           DB      H((POPAE-1) & 0x0FFF)
    2327/     CB7 : 15                           DB      L((POPAE-1) & 0x0FFF)
    2327/     CB8 :                              SHIFT
    2327/     CB8 :  (MACRO-2)                    DO      CMPR
    2327/     CB8 : =>NOT BLANK                   IFNB    CMPR 
    2327/     CB8 : 05                           DB      H((CMPR-1) & 0x0FFF)
    2327/     CB9 : D0                           DB      L((CMPR-1) & 0x0FFF)
    2327/     CBA :                              SHIFT
    2327/     CBA :   (MACRO-3)                   DO      
    2327/     CBA : =>BLANK                       IFNB     
    2327/     CBA :                              DB      H((-1) & 0x0FFF)
    2327/     CBA :                              DB      L((-1) & 0x0FFF)
    2327/     CBA :                              SHIFT
    2327/     CBA :                              DO      
    2327/     CBA : [2327]                        ENDIF
    2327/     CBA : [2327]                        ENDIF
    2327/     CBA : [2327]                        ENDIF
    2328/     CBA : (MACRO)                      JUMP     STMT
    2328/     CBA : 4C                           DB      H(STMT & 0x0FFF  | JMPBITH)
    2328/     CBB : 86                           DB      L(STMT & 0x0FFF  | JMPBITH)
    2329/     CBC :                                           
    2330/     CBC : (MACRO)              UNT:    TSTR     DOSTMT,"UNTI",'L'
    2330/     CBC : 2C                           DB      H((DOSTMT & 0x0FFF)| TSTBITH)
    2330/     CBD : D1                           DB      L((DOSTMT & 0x0FFF)| TSTBITH)
    2330/     CBE : =>NOT BLANK                   IFB     'L'
    2330/     CBE :                                DB    "UNTI" |0x80 
    2330/     CBE : =>TRUE                        ELSE
    2330/     CBE : 55 4E 54 49                    DB    "UNTI" 
    2330/     CC2 : CC                             DB    'L' |0x80
    2330/     CC3 : [2330]                        ENDIF
    2331/     CC3 : (MACRO)                      DO       CKMODE
    2331/     CC3 : =>NOT BLANK                   IFNB    CKMODE 
    2331/     CC3 : 06                           DB      H((CKMODE-1) & 0x0FFF)
    2331/     CC4 : 3B                           DB      L((CKMODE-1) & 0x0FFF)
    2331/     CC5 :                              SHIFT
    2331/     CC5 :  (MACRO-2)                    DO      
    2331/     CC5 : =>BLANK                       IFNB     
    2331/     CC5 :                              DB      H((-1) & 0x0FFF)
    2331/     CC5 :                              DB      L((-1) & 0x0FFF)
    2331/     CC5 :                              SHIFT
    2331/     CC5 :                              DO      
    2331/     CC5 : [2331]                        ENDIF
    2331/     CC5 : [2331]                        ENDIF
    2332/     CC5 : (MACRO)                      CALL     RELEXP
    2332/     CC5 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2332/     CC6 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2333/     CC7 : (MACRO)                      DO       DONE,POPAE,UNTIL,DETPGE,NXT
    2333/     CC7 : =>NOT BLANK                   IFNB    DONE 
    2333/     CC7 : 01                           DB      H((DONE-1) & 0x0FFF)
    2333/     CC8 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2333/     CC9 :                              SHIFT
    2333/     CC9 :  (MACRO-2)                    DO      POPAE,UNTIL,DETPGE,NXT
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 49 - 08.05.2023 15:13:29


    2333/     CC9 : =>NOT BLANK                   IFNB    POPAE 
    2333/     CC9 : 09                           DB      H((POPAE-1) & 0x0FFF)
    2333/     CCA : 15                           DB      L((POPAE-1) & 0x0FFF)
    2333/     CCB :                              SHIFT
    2333/     CCB :   (MACRO-3)                   DO      UNTIL,DETPGE,NXT
    2333/     CCB : =>NOT BLANK                   IFNB    UNTIL 
    2333/     CCB : 09                           DB      H((UNTIL-1) & 0x0FFF)
    2333/     CCC : 27                           DB      L((UNTIL-1) & 0x0FFF)
    2333/     CCD :                              SHIFT
    2333/     CCD :    (MACRO-4)                  DO      DETPGE,NXT
    2333/     CCD : =>NOT BLANK                   IFNB    DETPGE 
    2333/     CCD : 0B                           DB      H((DETPGE-1) & 0x0FFF)
    2333/     CCE : C4                           DB      L((DETPGE-1) & 0x0FFF)
    2333/     CCF :                              SHIFT
    2333/     CCF :     (MACRO-5)                 DO      NXT
    2333/     CCF : =>NOT BLANK                   IFNB    NXT 
    2333/     CCF : 02                           DB      H((NXT-1) & 0x0FFF)
    2333/     CD0 : 83                           DB      L((NXT-1) & 0x0FFF)
    2333/     CD1 :                              SHIFT
    2333/     CD1 :      (MACRO-6)                DO      
    2333/     CD1 : =>BLANK                       IFNB     
    2333/     CD1 :                              DB      H((-1) & 0x0FFF)
    2333/     CD1 :                              DB      L((-1) & 0x0FFF)
    2333/     CD1 :                              SHIFT
    2333/     CD1 :                              DO      
    2333/     CD1 : [2333]                        ENDIF
    2333/     CD1 : [2333]                        ENDIF
    2333/     CD1 : [2333]                        ENDIF
    2333/     CD1 : [2333]                        ENDIF
    2333/     CD1 : [2333]                        ENDIF
    2333/     CD1 : [2333]                        ENDIF
    2334/     CD1 :                      
    2335/     CD1 : (MACRO)              DOSTMT: TSTR     GOTO,"D",'O'
    2335/     CD1 : 2C                           DB      H((GOTO & 0x0FFF)| TSTBITH)
    2335/     CD2 : DD                           DB      L((GOTO & 0x0FFF)| TSTBITH)
    2335/     CD3 : =>NOT BLANK                   IFB     'O'
    2335/     CD3 :                                DB    "D" |0x80 
    2335/     CD3 : =>TRUE                        ELSE
    2335/     CD3 : 44                             DB    "D" 
    2335/     CD4 : CF                             DB    'O' |0x80
    2335/     CD5 : [2335]                        ENDIF
    2336/     CD5 : (MACRO)                      DO       CKMODE,DONE,SAVEDO,NXT
    2336/     CD5 : =>NOT BLANK                   IFNB    CKMODE 
    2336/     CD5 : 06                           DB      H((CKMODE-1) & 0x0FFF)
    2336/     CD6 : 3B                           DB      L((CKMODE-1) & 0x0FFF)
    2336/     CD7 :                              SHIFT
    2336/     CD7 :  (MACRO-2)                    DO      DONE,SAVEDO,NXT
    2336/     CD7 : =>NOT BLANK                   IFNB    DONE 
    2336/     CD7 : 01                           DB      H((DONE-1) & 0x0FFF)
    2336/     CD8 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2336/     CD9 :                              SHIFT
    2336/     CD9 :   (MACRO-3)                   DO      SAVEDO,NXT
    2336/     CD9 : =>NOT BLANK                   IFNB    SAVEDO 
    2336/     CD9 : 09                           DB      H((SAVEDO-1) & 0x0FFF)
    2336/     CDA : 77                           DB      L((SAVEDO-1) & 0x0FFF)
    2336/     CDB :                              SHIFT
    2336/     CDB :    (MACRO-4)                  DO      NXT
    2336/     CDB : =>NOT BLANK                   IFNB    NXT 
    2336/     CDB : 02                           DB      H((NXT-1) & 0x0FFF)
    2336/     CDC : 83                           DB      L((NXT-1) & 0x0FFF)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 50 - 08.05.2023 15:13:29


    2336/     CDD :                              SHIFT
    2336/     CDD :     (MACRO-5)                 DO      
    2336/     CDD : =>BLANK                       IFNB     
    2336/     CDD :                              DB      H((-1) & 0x0FFF)
    2336/     CDD :                              DB      L((-1) & 0x0FFF)
    2336/     CDD :                              SHIFT
    2336/     CDD :                              DO      
    2336/     CDD : [2336]                        ENDIF
    2336/     CDD : [2336]                        ENDIF
    2336/     CDD : [2336]                        ENDIF
    2336/     CDD : [2336]                        ENDIF
    2336/     CDD : [2336]                        ENDIF
    2337/     CDD : (MACRO)              GOTO:   TSTR     RETURN,"G",'O'
    2337/     CDD : 2D                           DB      H((RETURN & 0x0FFF)| TSTBITH)
    2337/     CDE : 00                           DB      L((RETURN & 0x0FFF)| TSTBITH)
    2337/     CDF : =>NOT BLANK                   IFB     'O'
    2337/     CDF :                                DB    "G" |0x80 
    2337/     CDF : =>TRUE                        ELSE
    2337/     CDF : 47                             DB    "G" 
    2337/     CE0 : CF                             DB    'O' |0x80
    2337/     CE1 : [2337]                        ENDIF
    2338/     CE1 : (MACRO)                      TSTR     GOSUB,"T",'O'
    2338/     CE1 : 2C                           DB      H((GOSUB & 0x0FFF)| TSTBITH)
    2338/     CE2 : EB                           DB      L((GOSUB & 0x0FFF)| TSTBITH)
    2338/     CE3 : =>NOT BLANK                   IFB     'O'
    2338/     CE3 :                                DB    "T" |0x80 
    2338/     CE3 : =>TRUE                        ELSE
    2338/     CE3 : 54                             DB    "T" 
    2338/     CE4 : CF                             DB    'O' |0x80
    2338/     CE5 : [2338]                        ENDIF
    2339/     CE5 : (MACRO)                      CALL     RELEXP
    2339/     CE5 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2339/     CE6 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2340/     CE7 : (MACRO)                      DO       DONE
    2340/     CE7 : =>NOT BLANK                   IFNB    DONE 
    2340/     CE7 : 01                           DB      H((DONE-1) & 0x0FFF)
    2340/     CE8 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2340/     CE9 :                              SHIFT
    2340/     CE9 :  (MACRO-2)                    DO      
    2340/     CE9 : =>BLANK                       IFNB     
    2340/     CE9 :                              DB      H((-1) & 0x0FFF)
    2340/     CE9 :                              DB      L((-1) & 0x0FFF)
    2340/     CE9 :                              SHIFT
    2340/     CE9 :                              DO      
    2340/     CE9 : [2340]                        ENDIF
    2340/     CE9 : [2340]                        ENDIF
    2341/     CE9 : (MACRO)                      JUMP     TBL001
    2341/     CE9 : 4C                           DB      H(TBL001 & 0x0FFF  | JMPBITH)
    2341/     CEA : F6                           DB      L(TBL001 & 0x0FFF  | JMPBITH)
    2342/     CEB : (MACRO)              GOSUB:  TSTR     SYNTAX,"SU",'B'
    2342/     CEB : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2342/     CEC : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2342/     CED : =>NOT BLANK                   IFB     'B'
    2342/     CED :                                DB    "SU" |0x80 
    2342/     CED : =>TRUE                        ELSE
    2342/     CED : 53 55                          DB    "SU" 
    2342/     CEF : C2                             DB    'B' |0x80
    2342/     CF0 : [2342]                        ENDIF
    2343/     CF0 : (MACRO)                      CALL     RELEXP
    2343/     CF0 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 51 - 08.05.2023 15:13:29


    2343/     CF1 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2344/     CF2 : (MACRO)                      DO       DONE,SAV
    2344/     CF2 : =>NOT BLANK                   IFNB    DONE 
    2344/     CF2 : 01                           DB      H((DONE-1) & 0x0FFF)
    2344/     CF3 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2344/     CF4 :                              SHIFT
    2344/     CF4 :  (MACRO-2)                    DO      SAV
    2344/     CF4 : =>NOT BLANK                   IFNB    SAV 
    2344/     CF4 : 01                           DB      H((SAV-1) & 0x0FFF)
    2344/     CF5 : 09                           DB      L((SAV-1) & 0x0FFF)
    2344/     CF6 :                              SHIFT
    2344/     CF6 :   (MACRO-3)                   DO      
    2344/     CF6 : =>BLANK                       IFNB     
    2344/     CF6 :                              DB      H((-1) & 0x0FFF)
    2344/     CF6 :                              DB      L((-1) & 0x0FFF)
    2344/     CF6 :                              SHIFT
    2344/     CF6 :                              DO      
    2344/     CF6 : [2344]                        ENDIF
    2344/     CF6 : [2344]                        ENDIF
    2344/     CF6 : [2344]                        ENDIF
    2345/     CF6 : (MACRO)              TBL001: DO       FNDPGE, POPAE,FNDLBL,XFER,NXT
    2345/     CF6 : =>NOT BLANK                   IFNB    FNDPGE 
    2345/     CF6 : 0B                           DB      H((FNDPGE-1) & 0x0FFF)
    2345/     CF7 : 97                           DB      L((FNDPGE-1) & 0x0FFF)
    2345/     CF8 :                              SHIFT
    2345/     CF8 :  (MACRO-2)                    DO      POPAE,FNDLBL,XFER,NXT
    2345/     CF8 : =>NOT BLANK                   IFNB    POPAE 
    2345/     CF8 : 09                           DB      H((POPAE-1) & 0x0FFF)
    2345/     CF9 : 15                           DB      L((POPAE-1) & 0x0FFF)
    2345/     CFA :                              SHIFT
    2345/     CFA :   (MACRO-3)                   DO      FNDLBL,XFER,NXT
    2345/     CFA : =>NOT BLANK                   IFNB    FNDLBL 
    2345/     CFA : 0B                           DB      H((FNDLBL-1) & 0x0FFF)
    2345/     CFB : E1                           DB      L((FNDLBL-1) & 0x0FFF)
    2345/     CFC :                              SHIFT
    2345/     CFC :    (MACRO-4)                  DO      XFER,NXT
    2345/     CFC : =>NOT BLANK                   IFNB    XFER 
    2345/     CFC : 01                           DB      H((XFER-1) & 0x0FFF)
    2345/     CFD : 68                           DB      L((XFER-1) & 0x0FFF)
    2345/     CFE :                              SHIFT
    2345/     CFE :     (MACRO-5)                 DO      NXT
    2345/     CFE : =>NOT BLANK                   IFNB    NXT 
    2345/     CFE : 02                           DB      H((NXT-1) & 0x0FFF)
    2345/     CFF : 83                           DB      L((NXT-1) & 0x0FFF)
    2345/     D00 :                              SHIFT
    2345/     D00 :      (MACRO-6)                DO      
    2345/     D00 : =>BLANK                       IFNB     
    2345/     D00 :                              DB      H((-1) & 0x0FFF)
    2345/     D00 :                              DB      L((-1) & 0x0FFF)
    2345/     D00 :                              SHIFT
    2345/     D00 :                              DO      
    2345/     D00 : [2345]                        ENDIF
    2345/     D00 : [2345]                        ENDIF
    2345/     D00 : [2345]                        ENDIF
    2345/     D00 : [2345]                        ENDIF
    2345/     D00 : [2345]                        ENDIF
    2345/     D00 : [2345]                        ENDIF
    2346/     D00 :                      
    2347/     D00 : (MACRO)              RETURN: TSTR     NEXT,"RETUR",'N'
    2347/     D00 : 2D                           DB      H((NEXT & 0x0FFF)| TSTBITH)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 52 - 08.05.2023 15:13:29


    2347/     D01 : 10                           DB      L((NEXT & 0x0FFF)| TSTBITH)
    2347/     D02 : =>NOT BLANK                   IFB     'N'
    2347/     D02 :                                DB    "RETUR" |0x80 
    2347/     D02 : =>TRUE                        ELSE
    2347/     D02 : 52 45 54 55 52                 DB    "RETUR" 
    2347/     D07 : CE                             DB    'N' |0x80
    2347/     D08 : [2347]                        ENDIF
    2348/     D08 : (MACRO)                      DO       DONE,RSTR,DETPGE,NXT
    2348/     D08 : =>NOT BLANK                   IFNB    DONE 
    2348/     D08 : 01                           DB      H((DONE-1) & 0x0FFF)
    2348/     D09 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2348/     D0A :                              SHIFT
    2348/     D0A :  (MACRO-2)                    DO      RSTR,DETPGE,NXT
    2348/     D0A : =>NOT BLANK                   IFNB    RSTR 
    2348/     D0A : 01                           DB      H((RSTR-1) & 0x0FFF)
    2348/     D0B : 42                           DB      L((RSTR-1) & 0x0FFF)
    2348/     D0C :                              SHIFT
    2348/     D0C :   (MACRO-3)                   DO      DETPGE,NXT
    2348/     D0C : =>NOT BLANK                   IFNB    DETPGE 
    2348/     D0C : 0B                           DB      H((DETPGE-1) & 0x0FFF)
    2348/     D0D : C4                           DB      L((DETPGE-1) & 0x0FFF)
    2348/     D0E :                              SHIFT
    2348/     D0E :    (MACRO-4)                  DO      NXT
    2348/     D0E : =>NOT BLANK                   IFNB    NXT 
    2348/     D0E : 02                           DB      H((NXT-1) & 0x0FFF)
    2348/     D0F : 83                           DB      L((NXT-1) & 0x0FFF)
    2348/     D10 :                              SHIFT
    2348/     D10 :     (MACRO-5)                 DO      
    2348/     D10 : =>BLANK                       IFNB     
    2348/     D10 :                              DB      H((-1) & 0x0FFF)
    2348/     D10 :                              DB      L((-1) & 0x0FFF)
    2348/     D10 :                              SHIFT
    2348/     D10 :                              DO      
    2348/     D10 : [2348]                        ENDIF
    2348/     D10 : [2348]                        ENDIF
    2348/     D10 : [2348]                        ENDIF
    2348/     D10 : [2348]                        ENDIF
    2348/     D10 : [2348]                        ENDIF
    2349/     D10 : (MACRO)              NEXT:   TSTR     FOR,"NEX",'T'
    2349/     D10 : 2D                           DB      H((FOR & 0x0FFF)| TSTBITH)
    2349/     D11 : 2A                           DB      L((FOR & 0x0FFF)| TSTBITH)
    2349/     D12 : =>NOT BLANK                   IFB     'T'
    2349/     D12 :                                DB    "NEX" |0x80 
    2349/     D12 : =>TRUE                        ELSE
    2349/     D12 : 4E 45 58                       DB    "NEX" 
    2349/     D15 : D4                             DB    'T' |0x80
    2349/     D16 : [2349]                        ENDIF
    2350/     D16 : (MACRO)                      DO       CKMODE
    2350/     D16 : =>NOT BLANK                   IFNB    CKMODE 
    2350/     D16 : 06                           DB      H((CKMODE-1) & 0x0FFF)
    2350/     D17 : 3B                           DB      L((CKMODE-1) & 0x0FFF)
    2350/     D18 :                              SHIFT
    2350/     D18 :  (MACRO-2)                    DO      
    2350/     D18 : =>BLANK                       IFNB     
    2350/     D18 :                              DB      H((-1) & 0x0FFF)
    2350/     D18 :                              DB      L((-1) & 0x0FFF)
    2350/     D18 :                              SHIFT
    2350/     D18 :                              DO      
    2350/     D18 : [2350]                        ENDIF
    2350/     D18 : [2350]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 53 - 08.05.2023 15:13:29


    2351/     D18 : (MACRO)                      TSTV     SYNTAX
    2351/     D18 : 04                           DB      H((TSTVAR-1) & 0x0FFF)
    2351/     D19 : E0                           DB      L((TSTVAR-1) & 0x0FFF)
    2351/     D1A : 0E                           DB      H(SYNTAX)
    2351/     D1B : 2F                           DB      L(SYNTAX)
    2352/     D1C : (MACRO)                      DO       DONE,NEXTV
    2352/     D1C : =>NOT BLANK                   IFNB    DONE 
    2352/     D1C : 01                           DB      H((DONE-1) & 0x0FFF)
    2352/     D1D : 2F                           DB      L((DONE-1) & 0x0FFF)
    2352/     D1E :                              SHIFT
    2352/     D1E :  (MACRO-2)                    DO      NEXTV
    2352/     D1E : =>NOT BLANK                   IFNB    NEXTV 
    2352/     D1E : 0A                           DB      H((NEXTV-1) & 0x0FFF)
    2352/     D1F : 88                           DB      L((NEXTV-1) & 0x0FFF)
    2352/     D20 :                              SHIFT
    2352/     D20 :   (MACRO-3)                   DO      
    2352/     D20 : =>BLANK                       IFNB     
    2352/     D20 :                              DB      H((-1) & 0x0FFF)
    2352/     D20 :                              DB      L((-1) & 0x0FFF)
    2352/     D20 :                              SHIFT
    2352/     D20 :                              DO      
    2352/     D20 : [2352]                        ENDIF
    2352/     D20 : [2352]                        ENDIF
    2352/     D20 : [2352]                        ENDIF
    2353/     D20 : (MACRO)                      CALL     GTROP
    2353/     D20 : 8E                           DB      H(GTROP & 0x0FFF  | CALBITH)
    2353/     D21 : 5F                           DB      L(GTROP & 0x0FFF  | CALBITH)
    2354/     D22 : (MACRO)                      DO       POPAE, NEXTV1,DETPGE,NXT
    2354/     D22 : =>NOT BLANK                   IFNB    POPAE 
    2354/     D22 : 09                           DB      H((POPAE-1) & 0x0FFF)
    2354/     D23 : 15                           DB      L((POPAE-1) & 0x0FFF)
    2354/     D24 :                              SHIFT
    2354/     D24 :  (MACRO-2)                    DO      NEXTV1,DETPGE,NXT
    2354/     D24 : =>NOT BLANK                   IFNB    NEXTV1 
    2354/     D24 : 0A                           DB      H((NEXTV1-1) & 0x0FFF)
    2354/     D25 : ED                           DB      L((NEXTV1-1) & 0x0FFF)
    2354/     D26 :                              SHIFT
    2354/     D26 :   (MACRO-3)                   DO      DETPGE,NXT
    2354/     D26 : =>NOT BLANK                   IFNB    DETPGE 
    2354/     D26 : 0B                           DB      H((DETPGE-1) & 0x0FFF)
    2354/     D27 : C4                           DB      L((DETPGE-1) & 0x0FFF)
    2354/     D28 :                              SHIFT
    2354/     D28 :    (MACRO-4)                  DO      NXT
    2354/     D28 : =>NOT BLANK                   IFNB    NXT 
    2354/     D28 : 02                           DB      H((NXT-1) & 0x0FFF)
    2354/     D29 : 83                           DB      L((NXT-1) & 0x0FFF)
    2354/     D2A :                              SHIFT
    2354/     D2A :     (MACRO-5)                 DO      
    2354/     D2A : =>BLANK                       IFNB     
    2354/     D2A :                              DB      H((-1) & 0x0FFF)
    2354/     D2A :                              DB      L((-1) & 0x0FFF)
    2354/     D2A :                              SHIFT
    2354/     D2A :                              DO      
    2354/     D2A : [2354]                        ENDIF
    2354/     D2A : [2354]                        ENDIF
    2354/     D2A : [2354]                        ENDIF
    2354/     D2A : [2354]                        ENDIF
    2354/     D2A : [2354]                        ENDIF
    2355/     D2A :                      
    2356/     D2A : (MACRO)              FOR:    TSTR     STAT,"FO",'R'
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 54 - 08.05.2023 15:13:29


    2356/     D2A : 2D                           DB      H((STAT & 0x0FFF)| TSTBITH)
    2356/     D2B : 54                           DB      L((STAT & 0x0FFF)| TSTBITH)
    2356/     D2C : =>NOT BLANK                   IFB     'R'
    2356/     D2C :                                DB    "FO" |0x80 
    2356/     D2C : =>TRUE                        ELSE
    2356/     D2C : 46 4F                          DB    "FO" 
    2356/     D2E : D2                             DB    'R' |0x80
    2356/     D2F : [2356]                        ENDIF
    2357/     D2F : (MACRO)                      DO       CKMODE
    2357/     D2F : =>NOT BLANK                   IFNB    CKMODE 
    2357/     D2F : 06                           DB      H((CKMODE-1) & 0x0FFF)
    2357/     D30 : 3B                           DB      L((CKMODE-1) & 0x0FFF)
    2357/     D31 :                              SHIFT
    2357/     D31 :  (MACRO-2)                    DO      
    2357/     D31 : =>BLANK                       IFNB     
    2357/     D31 :                              DB      H((-1) & 0x0FFF)
    2357/     D31 :                              DB      L((-1) & 0x0FFF)
    2357/     D31 :                              SHIFT
    2357/     D31 :                              DO      
    2357/     D31 : [2357]                        ENDIF
    2357/     D31 : [2357]                        ENDIF
    2358/     D31 : (MACRO)                      TSTV     SYNTAX
    2358/     D31 : 04                           DB      H((TSTVAR-1) & 0x0FFF)
    2358/     D32 : E0                           DB      L((TSTVAR-1) & 0x0FFF)
    2358/     D33 : 0E                           DB      H(SYNTAX)
    2358/     D34 : 2F                           DB      L(SYNTAX)
    2359/     D35 : (MACRO)                      TSTR     SYNTAX,'='
    2359/     D35 : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2359/     D36 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2359/     D37 : =>BLANK                       IFB     
    2359/     D37 : BD                             DB    '=' |0x80 
    2359/     D38 : =>FALSE                       ELSE
    2359/     D38 :                                DB    '=' 
    2359/     D38 :                                DB     |0x80
    2359/     D38 : [2359]                        ENDIF
    2360/     D38 : (MACRO)                      CALL     RELEXP
    2360/     D38 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2360/     D39 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2361/     D3A : (MACRO)                      TSTR     SYNTAX,"T",'O'
    2361/     D3A : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2361/     D3B : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2361/     D3C : =>NOT BLANK                   IFB     'O'
    2361/     D3C :                                DB    "T" |0x80 
    2361/     D3C : =>TRUE                        ELSE
    2361/     D3C : 54                             DB    "T" 
    2361/     D3D : CF                             DB    'O' |0x80
    2361/     D3E : [2361]                        ENDIF
    2362/     D3E : (MACRO)                      CALL     RELEXP
    2362/     D3E : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2362/     D3F : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2363/     D40 : (MACRO)                      TSTR     FORI,"STE",'P'
    2363/     D40 : 2D                           DB      H((FORI & 0x0FFF)| TSTBITH)
    2363/     D41 : 4A                           DB      L((FORI & 0x0FFF)| TSTBITH)
    2363/     D42 : =>NOT BLANK                   IFB     'P'
    2363/     D42 :                                DB    "STE" |0x80 
    2363/     D42 : =>TRUE                        ELSE
    2363/     D42 : 53 54 45                       DB    "STE" 
    2363/     D45 : D0                             DB    'P' |0x80
    2363/     D46 : [2363]                        ENDIF
    2364/     D46 : (MACRO)                      CALL     RELEXP
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 55 - 08.05.2023 15:13:29


    2364/     D46 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2364/     D47 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2365/     D48 : (MACRO)                      JUMP     FOR2
    2365/     D48 : 4D                           DB      H(FOR2 & 0x0FFF  | JMPBITH)
    2365/     D49 : 4C                           DB      L(FOR2 & 0x0FFF  | JMPBITH)
    2366/     D4A : (MACRO)              FORI:   DO       LIT1
    2366/     D4A : =>NOT BLANK                   IFNB    LIT1 
    2366/     D4A : 0A                           DB      H((LIT1-1) & 0x0FFF)
    2366/     D4B : 33                           DB      L((LIT1-1) & 0x0FFF)
    2366/     D4C :                              SHIFT
    2366/     D4C :  (MACRO-2)                    DO      
    2366/     D4C : =>BLANK                       IFNB     
    2366/     D4C :                              DB      H((-1) & 0x0FFF)
    2366/     D4C :                              DB      L((-1) & 0x0FFF)
    2366/     D4C :                              SHIFT
    2366/     D4C :                              DO      
    2366/     D4C : [2366]                        ENDIF
    2366/     D4C : [2366]                        ENDIF
    2367/     D4C : (MACRO)              FOR2:   DO       DONE,SAVFOR,STORE,NXT
    2367/     D4C : =>NOT BLANK                   IFNB    DONE 
    2367/     D4C : 01                           DB      H((DONE-1) & 0x0FFF)
    2367/     D4D : 2F                           DB      L((DONE-1) & 0x0FFF)
    2367/     D4E :                              SHIFT
    2367/     D4E :  (MACRO-2)                    DO      SAVFOR,STORE,NXT
    2367/     D4E : =>NOT BLANK                   IFNB    SAVFOR 
    2367/     D4E : 0A                           DB      H((SAVFOR-1) & 0x0FFF)
    2367/     D4F : 45                           DB      L((SAVFOR-1) & 0x0FFF)
    2367/     D50 :                              SHIFT
    2367/     D50 :   (MACRO-3)                   DO      STORE,NXT
    2367/     D50 : =>NOT BLANK                   IFNB    STORE 
    2367/     D50 : 04                           DB      H((STORE-1) & 0x0FFF)
    2367/     D51 : C0                           DB      L((STORE-1) & 0x0FFF)
    2367/     D52 :                              SHIFT
    2367/     D52 :    (MACRO-4)                  DO      NXT
    2367/     D52 : =>NOT BLANK                   IFNB    NXT 
    2367/     D52 : 02                           DB      H((NXT-1) & 0x0FFF)
    2367/     D53 : 83                           DB      L((NXT-1) & 0x0FFF)
    2367/     D54 :                              SHIFT
    2367/     D54 :     (MACRO-5)                 DO      
    2367/     D54 : =>BLANK                       IFNB     
    2367/     D54 :                              DB      H((-1) & 0x0FFF)
    2367/     D54 :                              DB      L((-1) & 0x0FFF)
    2367/     D54 :                              SHIFT
    2367/     D54 :                              DO      
    2367/     D54 : [2367]                        ENDIF
    2367/     D54 : [2367]                        ENDIF
    2367/     D54 : [2367]                        ENDIF
    2367/     D54 : [2367]                        ENDIF
    2367/     D54 : [2367]                        ENDIF
    2368/     D54 :                      
    2369/     D54 : (MACRO)              STAT:   TSTR     PGE,"STA",'T'
    2369/     D54 : 2D                           DB      H((PGE & 0x0FFF)| TSTBITH)
    2369/     D55 : 67                           DB      L((PGE & 0x0FFF)| TSTBITH)
    2369/     D56 : =>NOT BLANK                   IFB     'T'
    2369/     D56 :                                DB    "STA" |0x80 
    2369/     D56 : =>TRUE                        ELSE
    2369/     D56 : 53 54 41                       DB    "STA" 
    2369/     D59 : D4                             DB    'T' |0x80
    2369/     D5A : [2369]                        ENDIF
    2370/     D5A : (MACRO)                      TSTR     SYNTAX,'='
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 56 - 08.05.2023 15:13:29


    2370/     D5A : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2370/     D5B : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2370/     D5C : =>BLANK                       IFB     
    2370/     D5C : BD                             DB    '=' |0x80 
    2370/     D5D : =>FALSE                       ELSE
    2370/     D5D :                                DB    '=' 
    2370/     D5D :                                DB     |0x80
    2370/     D5D : [2370]                        ENDIF
    2371/     D5D : (MACRO)                      CALL     RELEXP
    2371/     D5D : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2371/     D5E : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2372/     D5F : (MACRO)                      DO       POPAE,MOVESR
    2372/     D5F : =>NOT BLANK                   IFNB    POPAE 
    2372/     D5F : 09                           DB      H((POPAE-1) & 0x0FFF)
    2372/     D60 : 15                           DB      L((POPAE-1) & 0x0FFF)
    2372/     D61 :                              SHIFT
    2372/     D61 :  (MACRO-2)                    DO      MOVESR
    2372/     D61 : =>NOT BLANK                   IFNB    MOVESR 
    2372/     D61 : 09                           DB      H((MOVESR-1) & 0x0FFF)
    2372/     D62 : 4C                           DB      L((MOVESR-1) & 0x0FFF)
    2372/     D63 :                              SHIFT
    2372/     D63 :   (MACRO-3)                   DO      
    2372/     D63 : =>BLANK                       IFNB     
    2372/     D63 :                              DB      H((-1) & 0x0FFF)
    2372/     D63 :                              DB      L((-1) & 0x0FFF)
    2372/     D63 :                              SHIFT
    2372/     D63 :                              DO      
    2372/     D63 : [2372]                        ENDIF
    2372/     D63 : [2372]                        ENDIF
    2372/     D63 : [2372]                        ENDIF
    2373/     D63 : (MACRO)                      DO       DONE,NXT
    2373/     D63 : =>NOT BLANK                   IFNB    DONE 
    2373/     D63 : 01                           DB      H((DONE-1) & 0x0FFF)
    2373/     D64 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2373/     D65 :                              SHIFT
    2373/     D65 :  (MACRO-2)                    DO      NXT
    2373/     D65 : =>NOT BLANK                   IFNB    NXT 
    2373/     D65 : 02                           DB      H((NXT-1) & 0x0FFF)
    2373/     D66 : 83                           DB      L((NXT-1) & 0x0FFF)
    2373/     D67 :                              SHIFT
    2373/     D67 :   (MACRO-3)                   DO      
    2373/     D67 : =>BLANK                       IFNB     
    2373/     D67 :                              DB      H((-1) & 0x0FFF)
    2373/     D67 :                              DB      L((-1) & 0x0FFF)
    2373/     D67 :                              SHIFT
    2373/     D67 :                              DO      
    2373/     D67 : [2373]                        ENDIF
    2373/     D67 : [2373]                        ENDIF
    2373/     D67 : [2373]                        ENDIF
    2374/     D67 :                      
    2375/     D67 : (MACRO)              PGE:    TSTR     DOLLAR,"PAG",'E'
    2375/     D67 : 2D                           DB      H((DOLLAR & 0x0FFF)| TSTBITH)
    2375/     D68 : 7E                           DB      L((DOLLAR & 0x0FFF)| TSTBITH)
    2375/     D69 : =>NOT BLANK                   IFB     'E'
    2375/     D69 :                                DB    "PAG" |0x80 
    2375/     D69 : =>TRUE                        ELSE
    2375/     D69 : 50 41 47                       DB    "PAG" 
    2375/     D6C : C5                             DB    'E' |0x80
    2375/     D6D : [2375]                        ENDIF
    2376/     D6D : (MACRO)                      TSTR     SYNTAX,'='
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 57 - 08.05.2023 15:13:29


    2376/     D6D : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2376/     D6E : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2376/     D6F : =>BLANK                       IFB     
    2376/     D6F : BD                             DB    '=' |0x80 
    2376/     D70 : =>FALSE                       ELSE
    2376/     D70 :                                DB    '=' 
    2376/     D70 :                                DB     |0x80
    2376/     D70 : [2376]                        ENDIF
    2377/     D70 : (MACRO)                      CALL     RELEXP
    2377/     D70 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2377/     D71 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2378/     D72 : (MACRO)                      DO       DONE,POPAE,NUPAGE,FNDPGE,CHPAGE,NXT
    2378/     D72 : =>NOT BLANK                   IFNB    DONE 
    2378/     D72 : 01                           DB      H((DONE-1) & 0x0FFF)
    2378/     D73 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2378/     D74 :                              SHIFT
    2378/     D74 :  (MACRO-2)                    DO      POPAE,NUPAGE,FNDPGE,CHPAGE,NXT
    2378/     D74 : =>NOT BLANK                   IFNB    POPAE 
    2378/     D74 : 09                           DB      H((POPAE-1) & 0x0FFF)
    2378/     D75 : 15                           DB      L((POPAE-1) & 0x0FFF)
    2378/     D76 :                              SHIFT
    2378/     D76 :   (MACRO-3)                   DO      NUPAGE,FNDPGE,CHPAGE,NXT
    2378/     D76 : =>NOT BLANK                   IFNB    NUPAGE 
    2378/     D76 : 0B                           DB      H((NUPAGE-1) & 0x0FFF)
    2378/     D77 : 8C                           DB      L((NUPAGE-1) & 0x0FFF)
    2378/     D78 :                              SHIFT
    2378/     D78 :    (MACRO-4)                  DO      FNDPGE,CHPAGE,NXT
    2378/     D78 : =>NOT BLANK                   IFNB    FNDPGE 
    2378/     D78 : 0B                           DB      H((FNDPGE-1) & 0x0FFF)
    2378/     D79 : 97                           DB      L((FNDPGE-1) & 0x0FFF)
    2378/     D7A :                              SHIFT
    2378/     D7A :     (MACRO-5)                 DO      CHPAGE,NXT
    2378/     D7A : =>NOT BLANK                   IFNB    CHPAGE 
    2378/     D7A : 0B                           DB      H((CHPAGE-1) & 0x0FFF)
    2378/     D7B : BD                           DB      L((CHPAGE-1) & 0x0FFF)
    2378/     D7C :                              SHIFT
    2378/     D7C :      (MACRO-6)                DO      NXT
    2378/     D7C : =>NOT BLANK                   IFNB    NXT 
    2378/     D7C : 02                           DB      H((NXT-1) & 0x0FFF)
    2378/     D7D : 83                           DB      L((NXT-1) & 0x0FFF)
    2378/     D7E :                              SHIFT
    2378/     D7E :       (MACRO-7)               DO      
    2378/     D7E : =>BLANK                       IFNB     
    2378/     D7E :                              DB      H((-1) & 0x0FFF)
    2378/     D7E :                              DB      L((-1) & 0x0FFF)
    2378/     D7E :                              SHIFT
    2378/     D7E :                              DO      
    2378/     D7E : [2378]                        ENDIF
    2378/     D7E : [2378]                        ENDIF
    2378/     D7E : [2378]                        ENDIF
    2378/     D7E : [2378]                        ENDIF
    2378/     D7E : [2378]                        ENDIF
    2378/     D7E : [2378]                        ENDIF
    2378/     D7E : [2378]                        ENDIF
    2379/     D7E :                      
    2380/     D7E : (MACRO)              DOLLAR: TSTR     PRINT,'$'
    2380/     D7E : 2D                           DB      H((PRINT & 0x0FFF)| TSTBITH)
    2380/     D7F : 9E                           DB      L((PRINT & 0x0FFF)| TSTBITH)
    2380/     D80 : =>BLANK                       IFB     
    2380/     D80 : A4                             DB    '$' |0x80 
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 58 - 08.05.2023 15:13:29


    2380/     D81 : =>FALSE                       ELSE
    2380/     D81 :                                DB    '$' 
    2380/     D81 :                                DB     |0x80
    2380/     D81 : [2380]                        ENDIF
    2381/     D81 : (MACRO)                      CALL     FACTOR
    2381/     D81 : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2381/     D82 : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2382/     D83 : (MACRO)                      TSTR     SYNTAX,'='
    2382/     D83 : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2382/     D84 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2382/     D85 : =>BLANK                       IFB     
    2382/     D85 : BD                             DB    '=' |0x80 
    2382/     D86 : =>FALSE                       ELSE
    2382/     D86 :                                DB    '=' 
    2382/     D86 :                                DB     |0x80
    2382/     D86 : [2382]                        ENDIF
    2383/     D86 : (MACRO)                      TSTR     DOLR1, '"'
    2383/     D86 : 2D                           DB      H((DOLR1 & 0x0FFF)| TSTBITH)
    2383/     D87 : 8F                           DB      L((DOLR1 & 0x0FFF)| TSTBITH)
    2383/     D88 : =>BLANK                       IFB     
    2383/     D88 : A2                             DB    '"' |0x80 
    2383/     D89 : =>FALSE                       ELSE
    2383/     D89 :                                DB    '"' 
    2383/     D89 :                                DB     |0x80
    2383/     D89 : [2383]                        ENDIF
    2384/     D89 : (MACRO)                      DO       POPAE,PUTSTR
    2384/     D89 : =>NOT BLANK                   IFNB    POPAE 
    2384/     D89 : 09                           DB      H((POPAE-1) & 0x0FFF)
    2384/     D8A : 15                           DB      L((POPAE-1) & 0x0FFF)
    2384/     D8B :                              SHIFT
    2384/     D8B :  (MACRO-2)                    DO      PUTSTR
    2384/     D8B : =>NOT BLANK                   IFNB    PUTSTR 
    2384/     D8B : 0B                           DB      H((PUTSTR-1) & 0x0FFF)
    2384/     D8C : 35                           DB      L((PUTSTR-1) & 0x0FFF)
    2384/     D8D :                              SHIFT
    2384/     D8D :   (MACRO-3)                   DO      
    2384/     D8D : =>BLANK                       IFNB     
    2384/     D8D :                              DB      H((-1) & 0x0FFF)
    2384/     D8D :                              DB      L((-1) & 0x0FFF)
    2384/     D8D :                              SHIFT
    2384/     D8D :                              DO      
    2384/     D8D : [2384]                        ENDIF
    2384/     D8D : [2384]                        ENDIF
    2384/     D8D : [2384]                        ENDIF
    2385/     D8D : (MACRO)                      JUMP     DOLR2
    2385/     D8D : 4D                           DB      H(DOLR2 & 0x0FFF  | JMPBITH)
    2385/     D8E : 9A                           DB      L(DOLR2 & 0x0FFF  | JMPBITH)
    2386/     D8F : (MACRO)              DOLR1:  TSTR     SYNTAX,'$'
    2386/     D8F : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2386/     D90 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2386/     D91 : =>BLANK                       IFB     
    2386/     D91 : A4                             DB    '$' |0x80 
    2386/     D92 : =>FALSE                       ELSE
    2386/     D92 :                                DB    '$' 
    2386/     D92 :                                DB     |0x80
    2386/     D92 : [2386]                        ENDIF
    2387/     D92 : (MACRO)                      CALL     FACTOR
    2387/     D92 : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2387/     D93 : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2388/     D94 : (MACRO)                      DO       XCHGP1,MOVSTR,XCHGP1
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 59 - 08.05.2023 15:13:29


    2388/     D94 : =>NOT BLANK                   IFNB    XCHGP1 
    2388/     D94 : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2388/     D95 : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2388/     D96 :                              SHIFT
    2388/     D96 :  (MACRO-2)                    DO      MOVSTR,XCHGP1
    2388/     D96 : =>NOT BLANK                   IFNB    MOVSTR 
    2388/     D96 : 0B                           DB      H((MOVSTR-1) & 0x0FFF)
    2388/     D97 : 55                           DB      L((MOVSTR-1) & 0x0FFF)
    2388/     D98 :                              SHIFT
    2388/     D98 :   (MACRO-3)                   DO      XCHGP1
    2388/     D98 : =>NOT BLANK                   IFNB    XCHGP1 
    2388/     D98 : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2388/     D99 : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2388/     D9A :                              SHIFT
    2388/     D9A :    (MACRO-4)                  DO      
    2388/     D9A : =>BLANK                       IFNB     
    2388/     D9A :                              DB      H((-1) & 0x0FFF)
    2388/     D9A :                              DB      L((-1) & 0x0FFF)
    2388/     D9A :                              SHIFT
    2388/     D9A :                              DO      
    2388/     D9A : [2388]                        ENDIF
    2388/     D9A : [2388]                        ENDIF
    2388/     D9A : [2388]                        ENDIF
    2388/     D9A : [2388]                        ENDIF
    2389/     D9A : (MACRO)              DOLR2:  DO       DONE,NXT
    2389/     D9A : =>NOT BLANK                   IFNB    DONE 
    2389/     D9A : 01                           DB      H((DONE-1) & 0x0FFF)
    2389/     D9B : 2F                           DB      L((DONE-1) & 0x0FFF)
    2389/     D9C :                              SHIFT
    2389/     D9C :  (MACRO-2)                    DO      NXT
    2389/     D9C : =>NOT BLANK                   IFNB    NXT 
    2389/     D9C : 02                           DB      H((NXT-1) & 0x0FFF)
    2389/     D9D : 83                           DB      L((NXT-1) & 0x0FFF)
    2389/     D9E :                              SHIFT
    2389/     D9E :   (MACRO-3)                   DO      
    2389/     D9E : =>BLANK                       IFNB     
    2389/     D9E :                              DB      H((-1) & 0x0FFF)
    2389/     D9E :                              DB      L((-1) & 0x0FFF)
    2389/     D9E :                              SHIFT
    2389/     D9E :                              DO      
    2389/     D9E : [2389]                        ENDIF
    2389/     D9E : [2389]                        ENDIF
    2389/     D9E : [2389]                        ENDIF
    2390/     D9E :                      
    2391/     D9E : (MACRO)              PRINT:  TSTR     INPUT,"P",'R'
    2391/     D9E : 2D                           DB      H((INPUT & 0x0FFF)| TSTBITH)
    2391/     D9F : D1                           DB      L((INPUT & 0x0FFF)| TSTBITH)
    2391/     DA0 : =>NOT BLANK                   IFB     'R'
    2391/     DA0 :                                DB    "P" |0x80 
    2391/     DA0 : =>TRUE                        ELSE
    2391/     DA0 : 50                             DB    "P" 
    2391/     DA1 : D2                             DB    'R' |0x80
    2391/     DA2 : [2391]                        ENDIF
    2392/     DA2 : (MACRO)                      TSTR     PR1,"IN",'T'
    2392/     DA2 : 2D                           DB      H((PR1 & 0x0FFF)| TSTBITH)
    2392/     DA3 : A7                           DB      L((PR1 & 0x0FFF)| TSTBITH)
    2392/     DA4 : =>NOT BLANK                   IFB     'T'
    2392/     DA4 :                                DB    "IN" |0x80 
    2392/     DA4 : =>TRUE                        ELSE
    2392/     DA4 : 49 4E                          DB    "IN" 
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 60 - 08.05.2023 15:13:29


    2392/     DA6 : D4                             DB    'T' |0x80
    2392/     DA7 : [2392]                        ENDIF
    2393/     DA7 : (MACRO)              PR1:    TSTR     PR2,'"'
    2393/     DA7 : 2D                           DB      H((PR2 & 0x0FFF)| TSTBITH)
    2393/     DA8 : AE                           DB      L((PR2 & 0x0FFF)| TSTBITH)
    2393/     DA9 : =>BLANK                       IFB     
    2393/     DA9 : A2                             DB    '"' |0x80 
    2393/     DAA : =>FALSE                       ELSE
    2393/     DAA :                                DB    '"' 
    2393/     DAA :                                DB     |0x80
    2393/     DAA : [2393]                        ENDIF
    2394/     DAA : (MACRO)                      DO       PRS
    2394/     DAA : =>NOT BLANK                   IFNB    PRS 
    2394/     DAA : 01                           DB      H((PRS-1) & 0x0FFF)
    2394/     DAB : 75                           DB      L((PRS-1) & 0x0FFF)
    2394/     DAC :                              SHIFT
    2394/     DAC :  (MACRO-2)                    DO      
    2394/     DAC : =>BLANK                       IFNB     
    2394/     DAC :                              DB      H((-1) & 0x0FFF)
    2394/     DAC :                              DB      L((-1) & 0x0FFF)
    2394/     DAC :                              SHIFT
    2394/     DAC :                              DO      
    2394/     DAC : [2394]                        ENDIF
    2394/     DAC : [2394]                        ENDIF
    2395/     DAC : (MACRO)                      JUMP     COMMA
    2395/     DAC : 4D                           DB      H(COMMA & 0x0FFF  | JMPBITH)
    2395/     DAD : C1                           DB      L(COMMA & 0x0FFF  | JMPBITH)
    2396/     DAE : (MACRO)              PR2:    TSTR     PR3,'$'
    2396/     DAE : 2D                           DB      H((PR3 & 0x0FFF)| TSTBITH)
    2396/     DAF : BD                           DB      L((PR3 & 0x0FFF)| TSTBITH)
    2396/     DB0 : =>BLANK                       IFB     
    2396/     DB0 : A4                             DB    '$' |0x80 
    2396/     DB1 : =>FALSE                       ELSE
    2396/     DB1 :                                DB    '$' 
    2396/     DB1 :                                DB     |0x80
    2396/     DB1 : [2396]                        ENDIF
    2397/     DB1 : (MACRO)                      CALL     FACTOR
    2397/     DB1 : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2397/     DB2 : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2398/     DB3 : (MACRO)                      DO       XCHGP1,POPAE,PSTRNG,XCHGP1
    2398/     DB3 : =>NOT BLANK                   IFNB    XCHGP1 
    2398/     DB3 : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2398/     DB4 : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2398/     DB5 :                              SHIFT
    2398/     DB5 :  (MACRO-2)                    DO      POPAE,PSTRNG,XCHGP1
    2398/     DB5 : =>NOT BLANK                   IFNB    POPAE 
    2398/     DB5 : 09                           DB      H((POPAE-1) & 0x0FFF)
    2398/     DB6 : 15                           DB      L((POPAE-1) & 0x0FFF)
    2398/     DB7 :                              SHIFT
    2398/     DB7 :   (MACRO-3)                   DO      PSTRNG,XCHGP1
    2398/     DB7 : =>NOT BLANK                   IFNB    PSTRNG 
    2398/     DB7 : 0B                           DB      H((PSTRNG-1) & 0x0FFF)
    2398/     DB8 : 09                           DB      L((PSTRNG-1) & 0x0FFF)
    2398/     DB9 :                              SHIFT
    2398/     DB9 :    (MACRO-4)                  DO      XCHGP1
    2398/     DB9 : =>NOT BLANK                   IFNB    XCHGP1 
    2398/     DB9 : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2398/     DBA : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2398/     DBB :                              SHIFT
    2398/     DBB :     (MACRO-5)                 DO      
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 61 - 08.05.2023 15:13:29


    2398/     DBB : =>BLANK                       IFNB     
    2398/     DBB :                              DB      H((-1) & 0x0FFF)
    2398/     DBB :                              DB      L((-1) & 0x0FFF)
    2398/     DBB :                              SHIFT
    2398/     DBB :                              DO      
    2398/     DBB : [2398]                        ENDIF
    2398/     DBB : [2398]                        ENDIF
    2398/     DBB : [2398]                        ENDIF
    2398/     DBB : [2398]                        ENDIF
    2398/     DBB : [2398]                        ENDIF
    2399/     DBB : (MACRO)                      JUMP     COMMA
    2399/     DBB : 4D                           DB      H(COMMA & 0x0FFF  | JMPBITH)
    2399/     DBC : C1                           DB      L(COMMA & 0x0FFF  | JMPBITH)
    2400/     DBD : (MACRO)              PR3:    CALL     RELEXP
    2400/     DBD : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2400/     DBE : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2401/     DBF : (MACRO)                      CALL     PRNUM
    2401/     DBF : 8F                           DB      H(PRNUM & 0x0FFF  | CALBITH)
    2401/     DC0 : 2F                           DB      L(PRNUM & 0x0FFF  | CALBITH)
    2402/     DC1 : (MACRO)              COMMA:  TSTR     PR4,','
    2402/     DC1 : 2D                           DB      H((PR4 & 0x0FFF)| TSTBITH)
    2402/     DC2 : C6                           DB      L((PR4 & 0x0FFF)| TSTBITH)
    2402/     DC3 : =>BLANK                       IFB     
    2402/     DC3 : AC                             DB    ',' |0x80 
    2402/     DC4 : =>FALSE                       ELSE
    2402/     DC4 :                                DB    ',' 
    2402/     DC4 :                                DB     |0x80
    2402/     DC4 : [2402]                        ENDIF
    2403/     DC4 : (MACRO)                      JUMP     PR1
    2403/     DC4 : 4D                           DB      H(PR1 & 0x0FFF  | JMPBITH)
    2403/     DC5 : A7                           DB      L(PR1 & 0x0FFF  | JMPBITH)
    2404/     DC6 : (MACRO)              PR4:    TSTR     PR5,';'
    2404/     DC6 : 2D                           DB      H((PR5 & 0x0FFF)| TSTBITH)
    2404/     DC7 : CB                           DB      L((PR5 & 0x0FFF)| TSTBITH)
    2404/     DC8 : =>BLANK                       IFB     
    2404/     DC8 : BB                             DB    ';' |0x80 
    2404/     DC9 : =>FALSE                       ELSE
    2404/     DC9 :                                DB    ';' 
    2404/     DC9 :                                DB     |0x80
    2404/     DC9 : [2404]                        ENDIF
    2405/     DC9 : (MACRO)                      JUMP     PR6
    2405/     DC9 : 4D                           DB      H(PR6 & 0x0FFF  | JMPBITH)
    2405/     DCA : CD                           DB      L(PR6 & 0x0FFF  | JMPBITH)
    2406/     DCB : (MACRO)              PR5:    DO       NLINE
    2406/     DCB : =>NOT BLANK                   IFNB    NLINE 
    2406/     DCB : 02                           DB      H((NLINE-1) & 0x0FFF)
    2406/     DCC : 0C                           DB      L((NLINE-1) & 0x0FFF)
    2406/     DCD :                              SHIFT
    2406/     DCD :  (MACRO-2)                    DO      
    2406/     DCD : =>BLANK                       IFNB     
    2406/     DCD :                              DB      H((-1) & 0x0FFF)
    2406/     DCD :                              DB      L((-1) & 0x0FFF)
    2406/     DCD :                              SHIFT
    2406/     DCD :                              DO      
    2406/     DCD : [2406]                        ENDIF
    2406/     DCD : [2406]                        ENDIF
    2407/     DCD : (MACRO)              PR6:    DO       DONE, NXT
    2407/     DCD : =>NOT BLANK                   IFNB    DONE 
    2407/     DCD : 01                           DB      H((DONE-1) & 0x0FFF)
    2407/     DCE : 2F                           DB      L((DONE-1) & 0x0FFF)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 62 - 08.05.2023 15:13:29


    2407/     DCF :                              SHIFT
    2407/     DCF :  (MACRO-2)                    DO      NXT
    2407/     DCF : =>NOT BLANK                   IFNB    NXT 
    2407/     DCF : 02                           DB      H((NXT-1) & 0x0FFF)
    2407/     DD0 : 83                           DB      L((NXT-1) & 0x0FFF)
    2407/     DD1 :                              SHIFT
    2407/     DD1 :   (MACRO-3)                   DO      
    2407/     DD1 : =>BLANK                       IFNB     
    2407/     DD1 :                              DB      H((-1) & 0x0FFF)
    2407/     DD1 :                              DB      L((-1) & 0x0FFF)
    2407/     DD1 :                              SHIFT
    2407/     DD1 :                              DO      
    2407/     DD1 : [2407]                        ENDIF
    2407/     DD1 : [2407]                        ENDIF
    2407/     DD1 : [2407]                        ENDIF
    2408/     DD1 : (MACRO)              INPUT:  TSTR     END,"INPU",'T'
    2408/     DD1 : 2E                           DB      H((END & 0x0FFF)| TSTBITH)
    2408/     DD2 : 09                           DB      L((END & 0x0FFF)| TSTBITH)
    2408/     DD3 : =>NOT BLANK                   IFB     'T'
    2408/     DD3 :                                DB    "INPU" |0x80 
    2408/     DD3 : =>TRUE                        ELSE
    2408/     DD3 : 49 4E 50 55                    DB    "INPU" 
    2408/     DD7 : D4                             DB    'T' |0x80
    2408/     DD8 : [2408]                        ENDIF
    2409/     DD8 : (MACRO)                      DO       CKMODE
    2409/     DD8 : =>NOT BLANK                   IFNB    CKMODE 
    2409/     DD8 : 06                           DB      H((CKMODE-1) & 0x0FFF)
    2409/     DD9 : 3B                           DB      L((CKMODE-1) & 0x0FFF)
    2409/     DDA :                              SHIFT
    2409/     DDA :  (MACRO-2)                    DO      
    2409/     DDA : =>BLANK                       IFNB     
    2409/     DDA :                              DB      H((-1) & 0x0FFF)
    2409/     DDA :                              DB      L((-1) & 0x0FFF)
    2409/     DDA :                              SHIFT
    2409/     DDA :                              DO      
    2409/     DDA : [2409]                        ENDIF
    2409/     DDA : [2409]                        ENDIF
    2410/     DDA : (MACRO)                      TSTV     IN2
    2410/     DDA : 04                           DB      H((TSTVAR-1) & 0x0FFF)
    2410/     DDB : E0                           DB      L((TSTVAR-1) & 0x0FFF)
    2410/     DDC : 0D                           DB      H(IN2)
    2410/     DDD : F6                           DB      L(IN2)
    2411/     DDE : (MACRO)                      DO       XCHGP1,GETL
    2411/     DDE : =>NOT BLANK                   IFNB    XCHGP1 
    2411/     DDE : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2411/     DDF : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2411/     DE0 :                              SHIFT
    2411/     DE0 :  (MACRO-2)                    DO      GETL
    2411/     DE0 : =>NOT BLANK                   IFNB    GETL 
    2411/     DE0 : 07                           DB      H((GETL-1) & 0x0FFF)
    2411/     DE1 : 56                           DB      L((GETL-1) & 0x0FFF)
    2411/     DE2 :                              SHIFT
    2411/     DE2 :   (MACRO-3)                   DO      
    2411/     DE2 : =>BLANK                       IFNB     
    2411/     DE2 :                              DB      H((-1) & 0x0FFF)
    2411/     DE2 :                              DB      L((-1) & 0x0FFF)
    2411/     DE2 :                              SHIFT
    2411/     DE2 :                              DO      
    2411/     DE2 : [2411]                        ENDIF
    2411/     DE2 : [2411]                        ENDIF
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 63 - 08.05.2023 15:13:29


    2411/     DE2 : [2411]                        ENDIF
    2412/     DE2 : (MACRO)              IN1:    CALL     RELEXP
    2412/     DE2 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2412/     DE3 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2413/     DE4 : (MACRO)                      DO       STORE,XCHGP1
    2413/     DE4 : =>NOT BLANK                   IFNB    STORE 
    2413/     DE4 : 04                           DB      H((STORE-1) & 0x0FFF)
    2413/     DE5 : C0                           DB      L((STORE-1) & 0x0FFF)
    2413/     DE6 :                              SHIFT
    2413/     DE6 :  (MACRO-2)                    DO      XCHGP1
    2413/     DE6 : =>NOT BLANK                   IFNB    XCHGP1 
    2413/     DE6 : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2413/     DE7 : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2413/     DE8 :                              SHIFT
    2413/     DE8 :   (MACRO-3)                   DO      
    2413/     DE8 : =>BLANK                       IFNB     
    2413/     DE8 :                              DB      H((-1) & 0x0FFF)
    2413/     DE8 :                              DB      L((-1) & 0x0FFF)
    2413/     DE8 :                              SHIFT
    2413/     DE8 :                              DO      
    2413/     DE8 : [2413]                        ENDIF
    2413/     DE8 : [2413]                        ENDIF
    2413/     DE8 : [2413]                        ENDIF
    2414/     DE8 : (MACRO)                      TSTR     IN3,','
    2414/     DE8 : 2E                           DB      H((IN3 & 0x0FFF)| TSTBITH)
    2414/     DE9 : 05                           DB      L((IN3 & 0x0FFF)| TSTBITH)
    2414/     DEA : =>BLANK                       IFB     
    2414/     DEA : AC                             DB    ',' |0x80 
    2414/     DEB : =>FALSE                       ELSE
    2414/     DEB :                                DB    ',' 
    2414/     DEB :                                DB     |0x80
    2414/     DEB : [2414]                        ENDIF
    2415/     DEB : (MACRO)                      TSTV     SYNTAX
    2415/     DEB : 04                           DB      H((TSTVAR-1) & 0x0FFF)
    2415/     DEC : E0                           DB      L((TSTVAR-1) & 0x0FFF)
    2415/     DED : 0E                           DB      H(SYNTAX)
    2415/     DEE : 2F                           DB      L(SYNTAX)
    2416/     DEF : (MACRO)                      DO       XCHGP1
    2416/     DEF : =>NOT BLANK                   IFNB    XCHGP1 
    2416/     DEF : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2416/     DF0 : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2416/     DF1 :                              SHIFT
    2416/     DF1 :  (MACRO-2)                    DO      
    2416/     DF1 : =>BLANK                       IFNB     
    2416/     DF1 :                              DB      H((-1) & 0x0FFF)
    2416/     DF1 :                              DB      L((-1) & 0x0FFF)
    2416/     DF1 :                              SHIFT
    2416/     DF1 :                              DO      
    2416/     DF1 : [2416]                        ENDIF
    2416/     DF1 : [2416]                        ENDIF
    2417/     DF1 : (MACRO)                      TSTR     SYNTAX,','
    2417/     DF1 : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2417/     DF2 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2417/     DF3 : =>BLANK                       IFB     
    2417/     DF3 : AC                             DB    ',' |0x80 
    2417/     DF4 : =>FALSE                       ELSE
    2417/     DF4 :                                DB    ',' 
    2417/     DF4 :                                DB     |0x80
    2417/     DF4 : [2417]                        ENDIF
    2418/     DF4 : (MACRO)                      JUMP     IN1
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 64 - 08.05.2023 15:13:29


    2418/     DF4 : 4D                           DB      H(IN1 & 0x0FFF  | JMPBITH)
    2418/     DF5 : E2                           DB      L(IN1 & 0x0FFF  | JMPBITH)
    2419/     DF6 : (MACRO)              IN2:    TSTR     SYNTAX,'$'
    2419/     DF6 : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2419/     DF7 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2419/     DF8 : =>BLANK                       IFB     
    2419/     DF8 : A4                             DB    '$' |0x80 
    2419/     DF9 : =>FALSE                       ELSE
    2419/     DF9 :                                DB    '$' 
    2419/     DF9 :                                DB     |0x80
    2419/     DF9 : [2419]                        ENDIF
    2420/     DF9 : (MACRO)                      CALL     FACTOR
    2420/     DF9 : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2420/     DFA : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2421/     DFB : (MACRO)                      DO       XCHGP1,GETL,POPAE,ISTRNG,XCHGP1
    2421/     DFB : =>NOT BLANK                   IFNB    XCHGP1 
    2421/     DFB : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2421/     DFC : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2421/     DFD :                              SHIFT
    2421/     DFD :  (MACRO-2)                    DO      GETL,POPAE,ISTRNG,XCHGP1
    2421/     DFD : =>NOT BLANK                   IFNB    GETL 
    2421/     DFD : 07                           DB      H((GETL-1) & 0x0FFF)
    2421/     DFE : 56                           DB      L((GETL-1) & 0x0FFF)
    2421/     DFF :                              SHIFT
    2421/     DFF :   (MACRO-3)                   DO      POPAE,ISTRNG,XCHGP1
    2421/     DFF : =>NOT BLANK                   IFNB    POPAE 
    2421/     DFF : 09                           DB      H((POPAE-1) & 0x0FFF)
    2421/     E00 : 15                           DB      L((POPAE-1) & 0x0FFF)
    2421/     E01 :                              SHIFT
    2421/     E01 :    (MACRO-4)                  DO      ISTRNG,XCHGP1
    2421/     E01 : =>NOT BLANK                   IFNB    ISTRNG 
    2421/     E01 : 0B                           DB      H((ISTRNG-1) & 0x0FFF)
    2421/     E02 : 25                           DB      L((ISTRNG-1) & 0x0FFF)
    2421/     E03 :                              SHIFT
    2421/     E03 :     (MACRO-5)                 DO      XCHGP1
    2421/     E03 : =>NOT BLANK                   IFNB    XCHGP1 
    2421/     E03 : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2421/     E04 : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2421/     E05 :                              SHIFT
    2421/     E05 :      (MACRO-6)                DO      
    2421/     E05 : =>BLANK                       IFNB     
    2421/     E05 :                              DB      H((-1) & 0x0FFF)
    2421/     E05 :                              DB      L((-1) & 0x0FFF)
    2421/     E05 :                              SHIFT
    2421/     E05 :                              DO      
    2421/     E05 : [2421]                        ENDIF
    2421/     E05 : [2421]                        ENDIF
    2421/     E05 : [2421]                        ENDIF
    2421/     E05 : [2421]                        ENDIF
    2421/     E05 : [2421]                        ENDIF
    2421/     E05 : [2421]                        ENDIF
    2422/     E05 : (MACRO)              IN3:    DO       DONE,NXT
    2422/     E05 : =>NOT BLANK                   IFNB    DONE 
    2422/     E05 : 01                           DB      H((DONE-1) & 0x0FFF)
    2422/     E06 : 2F                           DB      L((DONE-1) & 0x0FFF)
    2422/     E07 :                              SHIFT
    2422/     E07 :  (MACRO-2)                    DO      NXT
    2422/     E07 : =>NOT BLANK                   IFNB    NXT 
    2422/     E07 : 02                           DB      H((NXT-1) & 0x0FFF)
    2422/     E08 : 83                           DB      L((NXT-1) & 0x0FFF)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 65 - 08.05.2023 15:13:29


    2422/     E09 :                              SHIFT
    2422/     E09 :   (MACRO-3)                   DO      
    2422/     E09 : =>BLANK                       IFNB     
    2422/     E09 :                              DB      H((-1) & 0x0FFF)
    2422/     E09 :                              DB      L((-1) & 0x0FFF)
    2422/     E09 :                              SHIFT
    2422/     E09 :                              DO      
    2422/     E09 : [2422]                        ENDIF
    2422/     E09 : [2422]                        ENDIF
    2422/     E09 : [2422]                        ENDIF
    2423/     E09 :                      
    2424/     E09 : (MACRO)              END:    TSTR     ML,"EN",'D'
    2424/     E09 : 2E                           DB      H((ML & 0x0FFF)| TSTBITH)
    2424/     E0A : 12                           DB      L((ML & 0x0FFF)| TSTBITH)
    2424/     E0B : =>NOT BLANK                   IFB     'D'
    2424/     E0B :                                DB    "EN" |0x80 
    2424/     E0B : =>TRUE                        ELSE
    2424/     E0B : 45 4E                          DB    "EN" 
    2424/     E0D : C4                             DB    'D' |0x80
    2424/     E0E : [2424]                        ENDIF
    2425/     E0E : (MACRO)                      DO       DONE,BREAK
    2425/     E0E : =>NOT BLANK                   IFNB    DONE 
    2425/     E0E : 01                           DB      H((DONE-1) & 0x0FFF)
    2425/     E0F : 2F                           DB      L((DONE-1) & 0x0FFF)
    2425/     E10 :                              SHIFT
    2425/     E10 :  (MACRO-2)                    DO      BREAK
    2425/     E10 : =>NOT BLANK                   IFNB    BREAK 
    2425/     E10 : 02                           DB      H((BREAK-1) & 0x0FFF)
    2425/     E11 : 7F                           DB      L((BREAK-1) & 0x0FFF)
    2425/     E12 :                              SHIFT
    2425/     E12 :   (MACRO-3)                   DO      
    2425/     E12 : =>BLANK                       IFNB     
    2425/     E12 :                              DB      H((-1) & 0x0FFF)
    2425/     E12 :                              DB      L((-1) & 0x0FFF)
    2425/     E12 :                              SHIFT
    2425/     E12 :                              DO      
    2425/     E12 : [2425]                        ENDIF
    2425/     E12 : [2425]                        ENDIF
    2425/     E12 : [2425]                        ENDIF
    2426/     E12 :                      
    2427/     E12 : (MACRO)              ML:     TSTR     REM,"LIN",'K'
    2427/     E12 : 2E                           DB      H((REM & 0x0FFF)| TSTBITH)
    2427/     E13 : 26                           DB      L((REM & 0x0FFF)| TSTBITH)
    2427/     E14 : =>NOT BLANK                   IFB     'K'
    2427/     E14 :                                DB    "LIN" |0x80 
    2427/     E14 : =>TRUE                        ELSE
    2427/     E14 : 4C 49 4E                       DB    "LIN" 
    2427/     E17 : CB                             DB    'K' |0x80
    2427/     E18 : [2427]                        ENDIF
    2428/     E18 : (MACRO)                      CALL     RELEXP
    2428/     E18 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2428/     E19 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2429/     E1A : (MACRO)                      DO       DONE,XCHGP1,POPAE,CALLML,XCHGP1,NXT           
    2429/     E1A : =>NOT BLANK                   IFNB    DONE 
    2429/     E1A : 01                           DB      H((DONE-1) & 0x0FFF)
    2429/     E1B : 2F                           DB      L((DONE-1) & 0x0FFF)
    2429/     E1C :                              SHIFT
    2429/     E1C :  (MACRO-2)                    DO      XCHGP1,POPAE,CALLML,XCHGP1,NXT
    2429/     E1C : =>NOT BLANK                   IFNB    XCHGP1 
    2429/     E1C : 06                           DB      H((XCHGP1-1) & 0x0FFF)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 66 - 08.05.2023 15:13:29


    2429/     E1D : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2429/     E1E :                              SHIFT
    2429/     E1E :   (MACRO-3)                   DO      POPAE,CALLML,XCHGP1,NXT
    2429/     E1E : =>NOT BLANK                   IFNB    POPAE 
    2429/     E1E : 09                           DB      H((POPAE-1) & 0x0FFF)
    2429/     E1F : 15                           DB      L((POPAE-1) & 0x0FFF)
    2429/     E20 :                              SHIFT
    2429/     E20 :    (MACRO-4)                  DO      CALLML,XCHGP1,NXT
    2429/     E20 : =>NOT BLANK                   IFNB    CALLML 
    2429/     E20 : 09                           DB      H((CALLML-1) & 0x0FFF)
    2429/     E21 : 66                           DB      L((CALLML-1) & 0x0FFF)
    2429/     E22 :                              SHIFT
    2429/     E22 :     (MACRO-5)                 DO      XCHGP1,NXT
    2429/     E22 : =>NOT BLANK                   IFNB    XCHGP1 
    2429/     E22 : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2429/     E23 : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2429/     E24 :                              SHIFT
    2429/     E24 :      (MACRO-6)                DO      NXT
    2429/     E24 : =>NOT BLANK                   IFNB    NXT 
    2429/     E24 : 02                           DB      H((NXT-1) & 0x0FFF)
    2429/     E25 : 83                           DB      L((NXT-1) & 0x0FFF)
    2429/     E26 :                              SHIFT
    2429/     E26 :       (MACRO-7)               DO      
    2429/     E26 : =>BLANK                       IFNB     
    2429/     E26 :                              DB      H((-1) & 0x0FFF)
    2429/     E26 :                              DB      L((-1) & 0x0FFF)
    2429/     E26 :                              SHIFT
    2429/     E26 :                              DO      
    2429/     E26 : [2429]                        ENDIF
    2429/     E26 : [2429]                        ENDIF
    2429/     E26 : [2429]                        ENDIF
    2429/     E26 : [2429]                        ENDIF
    2429/     E26 : [2429]                        ENDIF
    2429/     E26 : [2429]                        ENDIF
    2429/     E26 : [2429]                        ENDIF
    2430/     E26 :                                                                                   
    2431/     E26 : (MACRO)              REM:    TSTR     SYNTAX,"RE",'M'
    2431/     E26 : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2431/     E27 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2431/     E28 : =>NOT BLANK                   IFB     'M'
    2431/     E28 :                                DB    "RE" |0x80 
    2431/     E28 : =>TRUE                        ELSE
    2431/     E28 : 52 45                          DB    "RE" 
    2431/     E2A : CD                             DB    'M' |0x80
    2431/     E2B : [2431]                        ENDIF
    2432/     E2B : (MACRO)                      DO       IGNORE,NXT
    2432/     E2B : =>NOT BLANK                   IFNB    IGNORE 
    2432/     E2B : 09                           DB      H((IGNORE-1) & 0x0FFF)
    2432/     E2C : B8                           DB      L((IGNORE-1) & 0x0FFF)
    2432/     E2D :                              SHIFT
    2432/     E2D :  (MACRO-2)                    DO      NXT
    2432/     E2D : =>NOT BLANK                   IFNB    NXT 
    2432/     E2D : 02                           DB      H((NXT-1) & 0x0FFF)
    2432/     E2E : 83                           DB      L((NXT-1) & 0x0FFF)
    2432/     E2F :                              SHIFT
    2432/     E2F :   (MACRO-3)                   DO      
    2432/     E2F : =>BLANK                       IFNB     
    2432/     E2F :                              DB      H((-1) & 0x0FFF)
    2432/     E2F :                              DB      L((-1) & 0x0FFF)
    2432/     E2F :                              SHIFT
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 67 - 08.05.2023 15:13:29


    2432/     E2F :                              DO      
    2432/     E2F : [2432]                        ENDIF
    2432/     E2F : [2432]                        ENDIF
    2432/     E2F : [2432]                        ENDIF
    2433/     E2F :                      
    2434/     E2F : (MACRO)              SYNTAX: DO       ERR
    2434/     E2F : =>NOT BLANK                   IFNB    ERR 
    2434/     E2F : 02                           DB      H((ERR-1) & 0x0FFF)
    2434/     E30 : 1A                           DB      L((ERR-1) & 0x0FFF)
    2434/     E31 :                              SHIFT
    2434/     E31 :  (MACRO-2)                    DO      
    2434/     E31 : =>BLANK                       IFNB     
    2434/     E31 :                              DB      H((-1) & 0x0FFF)
    2434/     E31 :                              DB      L((-1) & 0x0FFF)
    2434/     E31 :                              SHIFT
    2434/     E31 :                              DO      
    2434/     E31 : [2434]                        ENDIF
    2434/     E31 : [2434]                        ENDIF
    2435/     E31 : (MACRO)              ERRNUM: CALL     PRNUM
    2435/     E31 : 8F                           DB      H(PRNUM & 0x0FFF  | CALBITH)
    2435/     E32 : 2F                           DB      L(PRNUM & 0x0FFF  | CALBITH)
    2436/     E33 : (MACRO)                      DO       FIN
    2436/     E33 : =>NOT BLANK                   IFNB    FIN 
    2436/     E33 : 02                           DB      H((FIN-1) & 0x0FFF)
    2436/     E34 : A9                           DB      L((FIN-1) & 0x0FFF)
    2436/     E35 :                              SHIFT
    2436/     E35 :  (MACRO-2)                    DO      
    2436/     E35 : =>BLANK                       IFNB     
    2436/     E35 :                              DB      H((-1) & 0x0FFF)
    2436/     E35 :                              DB      L((-1) & 0x0FFF)
    2436/     E35 :                              SHIFT
    2436/     E35 :                              DO      
    2436/     E35 : [2436]                        ENDIF
    2436/     E35 : [2436]                        ENDIF
    2437/     E35 :                      
    2438/     E35 :                     ; NOTE: EACH RELATIONAL OPERATOR (EQ,  LEQ,  ETC. )  DOES AN
    2439/     E35 :                     ; AUTOMATIC 'RTN' (THIS SAVES VALUABLE BYTES AND TIME)
    2440/     E35 :                      
    2441/     E35 : (MACRO)              RELEXP: CALL     EXPR
    2441/     E35 : 8E                           DB      H(EXPR & 0x0FFF  | CALBITH)
    2441/     E36 : 61                           DB      L(EXPR & 0x0FFF  | CALBITH)
    2442/     E37 : (MACRO)                      TSTR     REL1,'='
    2442/     E37 : 2E                           DB      H((REL1 & 0x0FFF)| TSTBITH)
    2442/     E38 : 3E                           DB      L((REL1 & 0x0FFF)| TSTBITH)
    2442/     E39 : =>BLANK                       IFB     
    2442/     E39 : BD                             DB    '=' |0x80 
    2442/     E3A : =>FALSE                       ELSE
    2442/     E3A :                                DB    '=' 
    2442/     E3A :                                DB     |0x80
    2442/     E3A : [2442]                        ENDIF
    2443/     E3A : (MACRO)                      CALL     EXPR
    2443/     E3A : 8E                           DB      H(EXPR & 0x0FFF  | CALBITH)
    2443/     E3B : 61                           DB      L(EXPR & 0x0FFF  | CALBITH)
    2444/     E3C : (MACRO)                      DO       EQ
    2444/     E3C : =>NOT BLANK                   IFNB    EQ 
    2444/     E3C : 05                           DB      H((EQ-1) & 0x0FFF)
    2444/     E3D : 43                           DB      L((EQ-1) & 0x0FFF)
    2444/     E3E :                              SHIFT
    2444/     E3E :  (MACRO-2)                    DO      
    2444/     E3E : =>BLANK                       IFNB     
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 68 - 08.05.2023 15:13:29


    2444/     E3E :                              DB      H((-1) & 0x0FFF)
    2444/     E3E :                              DB      L((-1) & 0x0FFF)
    2444/     E3E :                              SHIFT
    2444/     E3E :                              DO      
    2444/     E3E : [2444]                        ENDIF
    2444/     E3E : [2444]                        ENDIF
    2445/     E3E : (MACRO)              REL1:   TSTR     REL4,'<'
    2445/     E3E : 2E                           DB      H((REL4 & 0x0FFF)| TSTBITH)
    2445/     E3F : 53                           DB      L((REL4 & 0x0FFF)| TSTBITH)
    2445/     E40 : =>BLANK                       IFB     
    2445/     E40 : BC                             DB    '<' |0x80 
    2445/     E41 : =>FALSE                       ELSE
    2445/     E41 :                                DB    '<' 
    2445/     E41 :                                DB     |0x80
    2445/     E41 : [2445]                        ENDIF
    2446/     E41 : (MACRO)                      TSTR     REL2,'='
    2446/     E41 : 2E                           DB      H((REL2 & 0x0FFF)| TSTBITH)
    2446/     E42 : 48                           DB      L((REL2 & 0x0FFF)| TSTBITH)
    2446/     E43 : =>BLANK                       IFB     
    2446/     E43 : BD                             DB    '=' |0x80 
    2446/     E44 : =>FALSE                       ELSE
    2446/     E44 :                                DB    '=' 
    2446/     E44 :                                DB     |0x80
    2446/     E44 : [2446]                        ENDIF
    2447/     E44 : (MACRO)                      CALL     EXPR
    2447/     E44 : 8E                           DB      H(EXPR & 0x0FFF  | CALBITH)
    2447/     E45 : 61                           DB      L(EXPR & 0x0FFF  | CALBITH)
    2448/     E46 : (MACRO)                      DO       LEQ
    2448/     E46 : =>NOT BLANK                   IFNB    LEQ 
    2448/     E46 : 05                           DB      H((LEQ-1) & 0x0FFF)
    2448/     E47 : 4F                           DB      L((LEQ-1) & 0x0FFF)
    2448/     E48 :                              SHIFT
    2448/     E48 :  (MACRO-2)                    DO      
    2448/     E48 : =>BLANK                       IFNB     
    2448/     E48 :                              DB      H((-1) & 0x0FFF)
    2448/     E48 :                              DB      L((-1) & 0x0FFF)
    2448/     E48 :                              SHIFT
    2448/     E48 :                              DO      
    2448/     E48 : [2448]                        ENDIF
    2448/     E48 : [2448]                        ENDIF
    2449/     E48 : (MACRO)              REL2:   TSTR     REL3,'>'
    2449/     E48 : 2E                           DB      H((REL3 & 0x0FFF)| TSTBITH)
    2449/     E49 : 4F                           DB      L((REL3 & 0x0FFF)| TSTBITH)
    2449/     E4A : =>BLANK                       IFB     
    2449/     E4A : BE                             DB    '>' |0x80 
    2449/     E4B : =>FALSE                       ELSE
    2449/     E4B :                                DB    '>' 
    2449/     E4B :                                DB     |0x80
    2449/     E4B : [2449]                        ENDIF
    2450/     E4B : (MACRO)                      CALL     EXPR
    2450/     E4B : 8E                           DB      H(EXPR & 0x0FFF  | CALBITH)
    2450/     E4C : 61                           DB      L(EXPR & 0x0FFF  | CALBITH)
    2451/     E4D : (MACRO)                      DO       NEQ
    2451/     E4D : =>NOT BLANK                   IFNB    NEQ 
    2451/     E4D : 05                           DB      H((NEQ-1) & 0x0FFF)
    2451/     E4E : 47                           DB      L((NEQ-1) & 0x0FFF)
    2451/     E4F :                              SHIFT
    2451/     E4F :  (MACRO-2)                    DO      
    2451/     E4F : =>BLANK                       IFNB     
    2451/     E4F :                              DB      H((-1) & 0x0FFF)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 69 - 08.05.2023 15:13:29


    2451/     E4F :                              DB      L((-1) & 0x0FFF)
    2451/     E4F :                              SHIFT
    2451/     E4F :                              DO      
    2451/     E4F : [2451]                        ENDIF
    2451/     E4F : [2451]                        ENDIF
    2452/     E4F : (MACRO)              REL3:   CALL     EXPR
    2452/     E4F : 8E                           DB      H(EXPR & 0x0FFF  | CALBITH)
    2452/     E50 : 61                           DB      L(EXPR & 0x0FFF  | CALBITH)
    2453/     E51 : (MACRO)                      DO       LSS
    2453/     E51 : =>NOT BLANK                   IFNB    LSS 
    2453/     E51 : 05                           DB      H((LSS-1) & 0x0FFF)
    2453/     E52 : 4B                           DB      L((LSS-1) & 0x0FFF)
    2453/     E53 :                              SHIFT
    2453/     E53 :  (MACRO-2)                    DO      
    2453/     E53 : =>BLANK                       IFNB     
    2453/     E53 :                              DB      H((-1) & 0x0FFF)
    2453/     E53 :                              DB      L((-1) & 0x0FFF)
    2453/     E53 :                              SHIFT
    2453/     E53 :                              DO      
    2453/     E53 : [2453]                        ENDIF
    2453/     E53 : [2453]                        ENDIF
    2454/     E53 : (MACRO)              REL4:   TSTR     RETEXP,'>'
    2454/     E53 : 2E                           DB      H((RETEXP & 0x0FFF)| TSTBITH)
    2454/     E54 : 8B                           DB      L((RETEXP & 0x0FFF)| TSTBITH)
    2454/     E55 : =>BLANK                       IFB     
    2454/     E55 : BE                             DB    '>' |0x80 
    2454/     E56 : =>FALSE                       ELSE
    2454/     E56 :                                DB    '>' 
    2454/     E56 :                                DB     |0x80
    2454/     E56 : [2454]                        ENDIF
    2455/     E56 : (MACRO)                      TSTR     REL5,'='
    2455/     E56 : 2E                           DB      H((REL5 & 0x0FFF)| TSTBITH)
    2455/     E57 : 5D                           DB      L((REL5 & 0x0FFF)| TSTBITH)
    2455/     E58 : =>BLANK                       IFB     
    2455/     E58 : BD                             DB    '=' |0x80 
    2455/     E59 : =>FALSE                       ELSE
    2455/     E59 :                                DB    '=' 
    2455/     E59 :                                DB     |0x80
    2455/     E59 : [2455]                        ENDIF
    2456/     E59 : (MACRO)                      CALL     EXPR
    2456/     E59 : 8E                           DB      H(EXPR & 0x0FFF  | CALBITH)
    2456/     E5A : 61                           DB      L(EXPR & 0x0FFF  | CALBITH)
    2457/     E5B : (MACRO)                      DO       GEQ
    2457/     E5B : =>NOT BLANK                   IFNB    GEQ 
    2457/     E5B : 05                           DB      H((GEQ-1) & 0x0FFF)
    2457/     E5C : 57                           DB      L((GEQ-1) & 0x0FFF)
    2457/     E5D :                              SHIFT
    2457/     E5D :  (MACRO-2)                    DO      
    2457/     E5D : =>BLANK                       IFNB     
    2457/     E5D :                              DB      H((-1) & 0x0FFF)
    2457/     E5D :                              DB      L((-1) & 0x0FFF)
    2457/     E5D :                              SHIFT
    2457/     E5D :                              DO      
    2457/     E5D : [2457]                        ENDIF
    2457/     E5D : [2457]                        ENDIF
    2458/     E5D : (MACRO)              REL5:   CALL     EXPR
    2458/     E5D : 8E                           DB      H(EXPR & 0x0FFF  | CALBITH)
    2458/     E5E : 61                           DB      L(EXPR & 0x0FFF  | CALBITH)
    2459/     E5F : (MACRO)              GTROP:  DO       GTR
    2459/     E5F : =>NOT BLANK                   IFNB    GTR 
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 70 - 08.05.2023 15:13:29


    2459/     E5F : 05                           DB      H((GTR-1) & 0x0FFF)
    2459/     E60 : 53                           DB      L((GTR-1) & 0x0FFF)
    2459/     E61 :                              SHIFT
    2459/     E61 :  (MACRO-2)                    DO      
    2459/     E61 : =>BLANK                       IFNB     
    2459/     E61 :                              DB      H((-1) & 0x0FFF)
    2459/     E61 :                              DB      L((-1) & 0x0FFF)
    2459/     E61 :                              SHIFT
    2459/     E61 :                              DO      
    2459/     E61 : [2459]                        ENDIF
    2459/     E61 : [2459]                        ENDIF
    2460/     E61 :                      
    2461/     E61 : (MACRO)              EXPR:   TSTR     EX1,'-'
    2461/     E61 : 2E                           DB      H((EX1 & 0x0FFF)| TSTBITH)
    2461/     E62 : 6A                           DB      L((EX1 & 0x0FFF)| TSTBITH)
    2461/     E63 : =>BLANK                       IFB     
    2461/     E63 : AD                             DB    '-' |0x80 
    2461/     E64 : =>FALSE                       ELSE
    2461/     E64 :                                DB    '-' 
    2461/     E64 :                                DB     |0x80
    2461/     E64 : [2461]                        ENDIF
    2462/     E64 : (MACRO)                      CALL     TERM
    2462/     E64 : 8E                           DB      H(TERM & 0x0FFF  | CALBITH)
    2462/     E65 : 8D                           DB      L(TERM & 0x0FFF  | CALBITH)
    2463/     E66 : (MACRO)                      DO       NEG
    2463/     E66 : =>NOT BLANK                   IFNB    NEG 
    2463/     E66 : 03                           DB      H((NEG-1) & 0x0FFF)
    2463/     E67 : 5A                           DB      L((NEG-1) & 0x0FFF)
    2463/     E68 :                              SHIFT
    2463/     E68 :  (MACRO-2)                    DO      
    2463/     E68 : =>BLANK                       IFNB     
    2463/     E68 :                              DB      H((-1) & 0x0FFF)
    2463/     E68 :                              DB      L((-1) & 0x0FFF)
    2463/     E68 :                              SHIFT
    2463/     E68 :                              DO      
    2463/     E68 : [2463]                        ENDIF
    2463/     E68 : [2463]                        ENDIF
    2464/     E68 : (MACRO)                      JUMP     EX3
    2464/     E68 : 4E                           DB      H(EX3 & 0x0FFF  | JMPBITH)
    2464/     E69 : 6F                           DB      L(EX3 & 0x0FFF  | JMPBITH)
    2465/     E6A : (MACRO)              EX1:    TSTR     EX2,'+'
    2465/     E6A : 2E                           DB      H((EX2 & 0x0FFF)| TSTBITH)
    2465/     E6B : 6D                           DB      L((EX2 & 0x0FFF)| TSTBITH)
    2465/     E6C : =>BLANK                       IFB     
    2465/     E6C : AB                             DB    '+' |0x80 
    2465/     E6D : =>FALSE                       ELSE
    2465/     E6D :                                DB    '+' 
    2465/     E6D :                                DB     |0x80
    2465/     E6D : [2465]                        ENDIF
    2466/     E6D : (MACRO)              EX2:    CALL     TERM
    2466/     E6D : 8E                           DB      H(TERM & 0x0FFF  | CALBITH)
    2466/     E6E : 8D                           DB      L(TERM & 0x0FFF  | CALBITH)
    2467/     E6F : (MACRO)              EX3:    TSTR     EX4,'+'
    2467/     E6F : 2E                           DB      H((EX4 & 0x0FFF)| TSTBITH)
    2467/     E70 : 78                           DB      L((EX4 & 0x0FFF)| TSTBITH)
    2467/     E71 : =>BLANK                       IFB     
    2467/     E71 : AB                             DB    '+' |0x80 
    2467/     E72 : =>FALSE                       ELSE
    2467/     E72 :                                DB    '+' 
    2467/     E72 :                                DB     |0x80
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 71 - 08.05.2023 15:13:29


    2467/     E72 : [2467]                        ENDIF
    2468/     E72 : (MACRO)                      CALL     TERM
    2468/     E72 : 8E                           DB      H(TERM & 0x0FFF  | CALBITH)
    2468/     E73 : 8D                           DB      L(TERM & 0x0FFF  | CALBITH)
    2469/     E74 : (MACRO)                      DO       ADD
    2469/     E74 : =>NOT BLANK                   IFNB    ADD 
    2469/     E74 : 03                           DB      H((ADD-1) & 0x0FFF)
    2469/     E75 : 2C                           DB      L((ADD-1) & 0x0FFF)
    2469/     E76 :                              SHIFT
    2469/     E76 :  (MACRO-2)                    DO      
    2469/     E76 : =>BLANK                       IFNB     
    2469/     E76 :                              DB      H((-1) & 0x0FFF)
    2469/     E76 :                              DB      L((-1) & 0x0FFF)
    2469/     E76 :                              SHIFT
    2469/     E76 :                              DO      
    2469/     E76 : [2469]                        ENDIF
    2469/     E76 : [2469]                        ENDIF
    2470/     E76 : (MACRO)                      JUMP     EX3
    2470/     E76 : 4E                           DB      H(EX3 & 0x0FFF  | JMPBITH)
    2470/     E77 : 6F                           DB      L(EX3 & 0x0FFF  | JMPBITH)
    2471/     E78 : (MACRO)              EX4:    TSTR     EX5,'-'
    2471/     E78 : 2E                           DB      H((EX5 & 0x0FFF)| TSTBITH)
    2471/     E79 : 81                           DB      L((EX5 & 0x0FFF)| TSTBITH)
    2471/     E7A : =>BLANK                       IFB     
    2471/     E7A : AD                             DB    '-' |0x80 
    2471/     E7B : =>FALSE                       ELSE
    2471/     E7B :                                DB    '-' 
    2471/     E7B :                                DB     |0x80
    2471/     E7B : [2471]                        ENDIF
    2472/     E7B : (MACRO)                      CALL     TERM
    2472/     E7B : 8E                           DB      H(TERM & 0x0FFF  | CALBITH)
    2472/     E7C : 8D                           DB      L(TERM & 0x0FFF  | CALBITH)
    2473/     E7D : (MACRO)                      DO       SUB
    2473/     E7D : =>NOT BLANK                   IFNB    SUB 
    2473/     E7D : 03                           DB      H((SUB-1) & 0x0FFF)
    2473/     E7E : 43                           DB      L((SUB-1) & 0x0FFF)
    2473/     E7F :                              SHIFT
    2473/     E7F :  (MACRO-2)                    DO      
    2473/     E7F : =>BLANK                       IFNB     
    2473/     E7F :                              DB      H((-1) & 0x0FFF)
    2473/     E7F :                              DB      L((-1) & 0x0FFF)
    2473/     E7F :                              SHIFT
    2473/     E7F :                              DO      
    2473/     E7F : [2473]                        ENDIF
    2473/     E7F : [2473]                        ENDIF
    2474/     E7F : (MACRO)                      JUMP     EX3
    2474/     E7F : 4E                           DB      H(EX3 & 0x0FFF  | JMPBITH)
    2474/     E80 : 6F                           DB      L(EX3 & 0x0FFF  | JMPBITH)
    2475/     E81 : (MACRO)              EX5:    TSTR     RETEXP,"O",'R'
    2475/     E81 : 2E                           DB      H((RETEXP & 0x0FFF)| TSTBITH)
    2475/     E82 : 8B                           DB      L((RETEXP & 0x0FFF)| TSTBITH)
    2475/     E83 : =>NOT BLANK                   IFB     'R'
    2475/     E83 :                                DB    "O" |0x80 
    2475/     E83 : =>TRUE                        ELSE
    2475/     E83 : 4F                             DB    "O" 
    2475/     E84 : D2                             DB    'R' |0x80
    2475/     E85 : [2475]                        ENDIF
    2476/     E85 : (MACRO)                      CALL     TERM
    2476/     E85 : 8E                           DB      H(TERM & 0x0FFF  | CALBITH)
    2476/     E86 : 8D                           DB      L(TERM & 0x0FFF  | CALBITH)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 72 - 08.05.2023 15:13:29


    2477/     E87 : (MACRO)                      DO       OROP
    2477/     E87 : =>NOT BLANK                   IFNB    OROP 
    2477/     E87 : 05                           DB      H((OROP-1) & 0x0FFF)
    2477/     E88 : EB                           DB      L((OROP-1) & 0x0FFF)
    2477/     E89 :                              SHIFT
    2477/     E89 :  (MACRO-2)                    DO      
    2477/     E89 : =>BLANK                       IFNB     
    2477/     E89 :                              DB      H((-1) & 0x0FFF)
    2477/     E89 :                              DB      L((-1) & 0x0FFF)
    2477/     E89 :                              SHIFT
    2477/     E89 :                              DO      
    2477/     E89 : [2477]                        ENDIF
    2477/     E89 : [2477]                        ENDIF
    2478/     E89 : (MACRO)                      JUMP     EX3
    2478/     E89 : 4E                           DB      H(EX3 & 0x0FFF  | JMPBITH)
    2478/     E8A : 6F                           DB      L(EX3 & 0x0FFF  | JMPBITH)
    2479/     E8B : (MACRO)              RETEXP: DO       RTN
    2479/     E8B : =>NOT BLANK                   IFNB    RTN 
    2479/     E8B : 00                           DB      H((RTN-1) & 0x0FFF)
    2479/     E8C : F5                           DB      L((RTN-1) & 0x0FFF)
    2479/     E8D :                              SHIFT
    2479/     E8D :  (MACRO-2)                    DO      
    2479/     E8D : =>BLANK                       IFNB     
    2479/     E8D :                              DB      H((-1) & 0x0FFF)
    2479/     E8D :                              DB      L((-1) & 0x0FFF)
    2479/     E8D :                              SHIFT
    2479/     E8D :                              DO      
    2479/     E8D : [2479]                        ENDIF
    2479/     E8D : [2479]                        ENDIF
    2480/     E8D :                      
    2481/     E8D : (MACRO)              TERM:   CALL     FACTOR
    2481/     E8D : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2481/     E8E : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2482/     E8F : (MACRO)              T1:     TSTR     T2,'*'
    2482/     E8F : 2E                           DB      H((T2 & 0x0FFF)| TSTBITH)
    2482/     E90 : 98                           DB      L((T2 & 0x0FFF)| TSTBITH)
    2482/     E91 : =>BLANK                       IFB     
    2482/     E91 : AA                             DB    '*' |0x80 
    2482/     E92 : =>FALSE                       ELSE
    2482/     E92 :                                DB    '*' 
    2482/     E92 :                                DB     |0x80
    2482/     E92 : [2482]                        ENDIF
    2483/     E92 : (MACRO)                      CALL     FACTOR
    2483/     E92 : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2483/     E93 : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2484/     E94 : (MACRO)                      DO       MUL
    2484/     E94 : =>NOT BLANK                   IFNB    MUL 
    2484/     E94 : 03                           DB      H((MUL-1) & 0x0FFF)
    2484/     E95 : 71                           DB      L((MUL-1) & 0x0FFF)
    2484/     E96 :                              SHIFT
    2484/     E96 :  (MACRO-2)                    DO      
    2484/     E96 : =>BLANK                       IFNB     
    2484/     E96 :                              DB      H((-1) & 0x0FFF)
    2484/     E96 :                              DB      L((-1) & 0x0FFF)
    2484/     E96 :                              SHIFT
    2484/     E96 :                              DO      
    2484/     E96 : [2484]                        ENDIF
    2484/     E96 : [2484]                        ENDIF
    2485/     E96 : (MACRO)                      JUMP     T1
    2485/     E96 : 4E                           DB      H(T1 & 0x0FFF  | JMPBITH)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 73 - 08.05.2023 15:13:29


    2485/     E97 : 8F                           DB      L(T1 & 0x0FFF  | JMPBITH)
    2486/     E98 : (MACRO)              T2:     TSTR     T3,'/'
    2486/     E98 : 2E                           DB      H((T3 & 0x0FFF)| TSTBITH)
    2486/     E99 : A1                           DB      L((T3 & 0x0FFF)| TSTBITH)
    2486/     E9A : =>BLANK                       IFB     
    2486/     E9A : AF                             DB    '/' |0x80 
    2486/     E9B : =>FALSE                       ELSE
    2486/     E9B :                                DB    '/' 
    2486/     E9B :                                DB     |0x80
    2486/     E9B : [2486]                        ENDIF
    2487/     E9B : (MACRO)                      CALL     FACTOR
    2487/     E9B : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2487/     E9C : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2488/     E9D : (MACRO)                      DO       DIV  
    2488/     E9D : =>NOT BLANK                   IFNB    DIV 
    2488/     E9D : 04                           DB      H((DIV-1) & 0x0FFF)
    2488/     E9E : 07                           DB      L((DIV-1) & 0x0FFF)
    2488/     E9F :                              SHIFT
    2488/     E9F :  (MACRO-2)                    DO      
    2488/     E9F : =>BLANK                       IFNB     
    2488/     E9F :                              DB      H((-1) & 0x0FFF)
    2488/     E9F :                              DB      L((-1) & 0x0FFF)
    2488/     E9F :                              SHIFT
    2488/     E9F :                              DO      
    2488/     E9F : [2488]                        ENDIF
    2488/     E9F : [2488]                        ENDIF
    2489/     E9F : (MACRO)                      JUMP     T1
    2489/     E9F : 4E                           DB      H(T1 & 0x0FFF  | JMPBITH)
    2489/     EA0 : 8F                           DB      L(T1 & 0x0FFF  | JMPBITH)
    2490/     EA1 : (MACRO)              T3:     TSTR     RETEXP,"AN",'D'
    2490/     EA1 : 2E                           DB      H((RETEXP & 0x0FFF)| TSTBITH)
    2490/     EA2 : 8B                           DB      L((RETEXP & 0x0FFF)| TSTBITH)
    2490/     EA3 : =>NOT BLANK                   IFB     'D'
    2490/     EA3 :                                DB    "AN" |0x80 
    2490/     EA3 : =>TRUE                        ELSE
    2490/     EA3 : 41 4E                          DB    "AN" 
    2490/     EA5 : C4                             DB    'D' |0x80
    2490/     EA6 : [2490]                        ENDIF
    2491/     EA6 : (MACRO)                      CALL     FACTOR
    2491/     EA6 : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2491/     EA7 : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2492/     EA8 : (MACRO)                      DO       ANDOP
    2492/     EA8 : =>NOT BLANK                   IFNB    ANDOP 
    2492/     EA8 : 05                           DB      H((ANDOP-1) & 0x0FFF)
    2492/     EA9 : E7                           DB      L((ANDOP-1) & 0x0FFF)
    2492/     EAA :                              SHIFT
    2492/     EAA :  (MACRO-2)                    DO      
    2492/     EAA : =>BLANK                       IFNB     
    2492/     EAA :                              DB      H((-1) & 0x0FFF)
    2492/     EAA :                              DB      L((-1) & 0x0FFF)
    2492/     EAA :                              SHIFT
    2492/     EAA :                              DO      
    2492/     EAA : [2492]                        ENDIF
    2492/     EAA : [2492]                        ENDIF
    2493/     EAA : (MACRO)                      JUMP     T1
    2493/     EAA : 4E                           DB      H(T1 & 0x0FFF  | JMPBITH)
    2493/     EAB : 8F                           DB      L(T1 & 0x0FFF  | JMPBITH)
    2494/     EAC :                      
    2495/     EAC : (MACRO)              FACTOR: TSTV     F1
    2495/     EAC : 04                           DB      H((TSTVAR-1) & 0x0FFF)
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 74 - 08.05.2023 15:13:29


    2495/     EAD : E0                           DB      L((TSTVAR-1) & 0x0FFF)
    2495/     EAE : 0E                           DB      H(F1)
    2495/     EAF : B4                           DB      L(F1)
    2496/     EB0 : (MACRO)                      DO       IND,RTN
    2496/     EB0 : =>NOT BLANK                   IFNB    IND 
    2496/     EB0 : 05                           DB      H((IND-1) & 0x0FFF)
    2496/     EB1 : 2B                           DB      L((IND-1) & 0x0FFF)
    2496/     EB2 :                              SHIFT
    2496/     EB2 :  (MACRO-2)                    DO      RTN
    2496/     EB2 : =>NOT BLANK                   IFNB    RTN 
    2496/     EB2 : 00                           DB      H((RTN-1) & 0x0FFF)
    2496/     EB3 : F5                           DB      L((RTN-1) & 0x0FFF)
    2496/     EB4 :                              SHIFT
    2496/     EB4 :   (MACRO-3)                   DO      
    2496/     EB4 : =>BLANK                       IFNB     
    2496/     EB4 :                              DB      H((-1) & 0x0FFF)
    2496/     EB4 :                              DB      L((-1) & 0x0FFF)
    2496/     EB4 :                              SHIFT
    2496/     EB4 :                              DO      
    2496/     EB4 : [2496]                        ENDIF
    2496/     EB4 : [2496]                        ENDIF
    2496/     EB4 : [2496]                        ENDIF
    2497/     EB4 : (MACRO)              F1:     TSTN     F2
    2497/     EB4 : 06                           DB      H((TSTNUM-1) & 0x0FFF)
    2497/     EB5 : AB                           DB      L((TSTNUM-1) & 0x0FFF)
    2497/     EB6 : 0E                           DB      H(F2)
    2497/     EB7 : BA                           DB      L(F2)
    2498/     EB8 : (MACRO)                      DO       RTN
    2498/     EB8 : =>NOT BLANK                   IFNB    RTN 
    2498/     EB8 : 00                           DB      H((RTN-1) & 0x0FFF)
    2498/     EB9 : F5                           DB      L((RTN-1) & 0x0FFF)
    2498/     EBA :                              SHIFT
    2498/     EBA :  (MACRO-2)                    DO      
    2498/     EBA : =>BLANK                       IFNB     
    2498/     EBA :                              DB      H((-1) & 0x0FFF)
    2498/     EBA :                              DB      L((-1) & 0x0FFF)
    2498/     EBA :                              SHIFT
    2498/     EBA :                              DO      
    2498/     EBA : [2498]                        ENDIF
    2498/     EBA : [2498]                        ENDIF
    2499/     EBA : (MACRO)              F2:     TSTR     F3,'#'
    2499/     EBA : 2E                           DB      H((F3 & 0x0FFF)| TSTBITH)
    2499/     EBB : C1                           DB      L((F3 & 0x0FFF)| TSTBITH)
    2499/     EBC : =>BLANK                       IFB     
    2499/     EBC : A3                             DB    '#' |0x80 
    2499/     EBD : =>FALSE                       ELSE
    2499/     EBD :                                DB    '#' 
    2499/     EBD :                                DB     |0x80
    2499/     EBD : [2499]                        ENDIF
    2500/     EBD : (MACRO)                      DO       HEX,RTN
    2500/     EBD : =>NOT BLANK                   IFNB    HEX 
    2500/     EBD : 06                           DB      H((HEX-1) & 0x0FFF)
    2500/     EBE : 4B                           DB      L((HEX-1) & 0x0FFF)
    2500/     EBF :                              SHIFT
    2500/     EBF :  (MACRO-2)                    DO      RTN
    2500/     EBF : =>NOT BLANK                   IFNB    RTN 
    2500/     EBF : 00                           DB      H((RTN-1) & 0x0FFF)
    2500/     EC0 : F5                           DB      L((RTN-1) & 0x0FFF)
    2500/     EC1 :                              SHIFT
    2500/     EC1 :   (MACRO-3)                   DO      
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 75 - 08.05.2023 15:13:29


    2500/     EC1 : =>BLANK                       IFNB     
    2500/     EC1 :                              DB      H((-1) & 0x0FFF)
    2500/     EC1 :                              DB      L((-1) & 0x0FFF)
    2500/     EC1 :                              SHIFT
    2500/     EC1 :                              DO      
    2500/     EC1 : [2500]                        ENDIF
    2500/     EC1 : [2500]                        ENDIF
    2500/     EC1 : [2500]                        ENDIF
    2501/     EC1 : (MACRO)              F3:     TSTR     F4,'('
    2501/     EC1 : 2E                           DB      H((F4 & 0x0FFF)| TSTBITH)
    2501/     EC2 : CB                           DB      L((F4 & 0x0FFF)| TSTBITH)
    2501/     EC3 : =>BLANK                       IFB     
    2501/     EC3 : A8                             DB    '(' |0x80 
    2501/     EC4 : =>FALSE                       ELSE
    2501/     EC4 :                                DB    '(' 
    2501/     EC4 :                                DB     |0x80
    2501/     EC4 : [2501]                        ENDIF
    2502/     EC4 : (MACRO)                      CALL     RELEXP
    2502/     EC4 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2502/     EC5 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2503/     EC6 : (MACRO)                      TSTR     SYNTAX,')'
    2503/     EC6 : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2503/     EC7 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2503/     EC8 : =>BLANK                       IFB     
    2503/     EC8 : A9                             DB    ')' |0x80 
    2503/     EC9 : =>FALSE                       ELSE
    2503/     EC9 :                                DB    ')' 
    2503/     EC9 :                                DB     |0x80
    2503/     EC9 : [2503]                        ENDIF
    2504/     EC9 : (MACRO)                      DO       RTN
    2504/     EC9 : =>NOT BLANK                   IFNB    RTN 
    2504/     EC9 : 00                           DB      H((RTN-1) & 0x0FFF)
    2504/     ECA : F5                           DB      L((RTN-1) & 0x0FFF)
    2504/     ECB :                              SHIFT
    2504/     ECB :  (MACRO-2)                    DO      
    2504/     ECB : =>BLANK                       IFNB     
    2504/     ECB :                              DB      H((-1) & 0x0FFF)
    2504/     ECB :                              DB      L((-1) & 0x0FFF)
    2504/     ECB :                              SHIFT
    2504/     ECB :                              DO      
    2504/     ECB : [2504]                        ENDIF
    2504/     ECB : [2504]                        ENDIF
    2505/     ECB : (MACRO)              F4:     TSTR     F5,'@'
    2505/     ECB : 2E                           DB      H((F5 & 0x0FFF)| TSTBITH)
    2505/     ECC : D4                           DB      L((F5 & 0x0FFF)| TSTBITH)
    2505/     ECD : =>BLANK                       IFB     
    2505/     ECD : C0                             DB    '@' |0x80 
    2505/     ECE : =>FALSE                       ELSE
    2505/     ECE :                                DB    '@' 
    2505/     ECE :                                DB     |0x80
    2505/     ECE : [2505]                        ENDIF
    2506/     ECE : (MACRO)                      CALL     FACTOR
    2506/     ECE : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2506/     ECF : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2507/     ED0 : (MACRO)                      DO       EVAL,RTN
    2507/     ED0 : =>NOT BLANK                   IFNB    EVAL 
    2507/     ED0 : 07                           DB      H((EVAL-1) & 0x0FFF)
    2507/     ED1 : E9                           DB      L((EVAL-1) & 0x0FFF)
    2507/     ED2 :                              SHIFT
    2507/     ED2 :  (MACRO-2)                    DO      RTN
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 76 - 08.05.2023 15:13:29


    2507/     ED2 : =>NOT BLANK                   IFNB    RTN 
    2507/     ED2 : 00                           DB      H((RTN-1) & 0x0FFF)
    2507/     ED3 : F5                           DB      L((RTN-1) & 0x0FFF)
    2507/     ED4 :                              SHIFT
    2507/     ED4 :   (MACRO-3)                   DO      
    2507/     ED4 : =>BLANK                       IFNB     
    2507/     ED4 :                              DB      H((-1) & 0x0FFF)
    2507/     ED4 :                              DB      L((-1) & 0x0FFF)
    2507/     ED4 :                              SHIFT
    2507/     ED4 :                              DO      
    2507/     ED4 : [2507]                        ENDIF
    2507/     ED4 : [2507]                        ENDIF
    2507/     ED4 : [2507]                        ENDIF
    2508/     ED4 : (MACRO)              F5:     TSTR     F6,"NO",'T'
    2508/     ED4 : 2E                           DB      H((F6 & 0x0FFF)| TSTBITH)
    2508/     ED5 : DF                           DB      L((F6 & 0x0FFF)| TSTBITH)
    2508/     ED6 : =>NOT BLANK                   IFB     'T'
    2508/     ED6 :                                DB    "NO" |0x80 
    2508/     ED6 : =>TRUE                        ELSE
    2508/     ED6 : 4E 4F                          DB    "NO" 
    2508/     ED8 : D4                             DB    'T' |0x80
    2508/     ED9 : [2508]                        ENDIF
    2509/     ED9 : (MACRO)                      CALL     FACTOR
    2509/     ED9 : 8E                           DB      H(FACTOR & 0x0FFF  | CALBITH)
    2509/     EDA : AC                           DB      L(FACTOR & 0x0FFF  | CALBITH)
    2510/     EDB : (MACRO)                      DO       NOTOP,RTN
    2510/     EDB : =>NOT BLANK                   IFNB    NOTOP 
    2510/     EDB : 05                           DB      H((NOTOP-1) & 0x0FFF)
    2510/     EDC : EF                           DB      L((NOTOP-1) & 0x0FFF)
    2510/     EDD :                              SHIFT
    2510/     EDD :  (MACRO-2)                    DO      RTN
    2510/     EDD : =>NOT BLANK                   IFNB    RTN 
    2510/     EDD : 00                           DB      H((RTN-1) & 0x0FFF)
    2510/     EDE : F5                           DB      L((RTN-1) & 0x0FFF)
    2510/     EDF :                              SHIFT
    2510/     EDF :   (MACRO-3)                   DO      
    2510/     EDF : =>BLANK                       IFNB     
    2510/     EDF :                              DB      H((-1) & 0x0FFF)
    2510/     EDF :                              DB      L((-1) & 0x0FFF)
    2510/     EDF :                              SHIFT
    2510/     EDF :                              DO      
    2510/     EDF : [2510]                        ENDIF
    2510/     EDF : [2510]                        ENDIF
    2510/     EDF : [2510]                        ENDIF
    2511/     EDF : (MACRO)              F6:     TSTR     F7,"STA",'T'
    2511/     EDF : 2E                           DB      H((F7 & 0x0FFF)| TSTBITH)
    2511/     EE0 : E9                           DB      L((F7 & 0x0FFF)| TSTBITH)
    2511/     EE1 : =>NOT BLANK                   IFB     'T'
    2511/     EE1 :                                DB    "STA" |0x80 
    2511/     EE1 : =>TRUE                        ELSE
    2511/     EE1 : 53 54 41                       DB    "STA" 
    2511/     EE4 : D4                             DB    'T' |0x80
    2511/     EE5 : [2511]                        ENDIF
    2512/     EE5 : (MACRO)                      DO       STATUS,RTN
    2512/     EE5 : =>NOT BLANK                   IFNB    STATUS 
    2512/     EE5 : 09                           DB      H((STATUS-1) & 0x0FFF)
    2512/     EE6 : 55                           DB      L((STATUS-1) & 0x0FFF)
    2512/     EE7 :                              SHIFT
    2512/     EE7 :  (MACRO-2)                    DO      RTN
    2512/     EE7 : =>NOT BLANK                   IFNB    RTN 
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 77 - 08.05.2023 15:13:29


    2512/     EE7 : 00                           DB      H((RTN-1) & 0x0FFF)
    2512/     EE8 : F5                           DB      L((RTN-1) & 0x0FFF)
    2512/     EE9 :                              SHIFT
    2512/     EE9 :   (MACRO-3)                   DO      
    2512/     EE9 : =>BLANK                       IFNB     
    2512/     EE9 :                              DB      H((-1) & 0x0FFF)
    2512/     EE9 :                              DB      L((-1) & 0x0FFF)
    2512/     EE9 :                              SHIFT
    2512/     EE9 :                              DO      
    2512/     EE9 : [2512]                        ENDIF
    2512/     EE9 : [2512]                        ENDIF
    2512/     EE9 : [2512]                        ENDIF
    2513/     EE9 : (MACRO)              F7:     TSTR     F8,"TO",'P'
    2513/     EE9 : 2E                           DB      H((F8 & 0x0FFF)| TSTBITH)
    2513/     EEA : F4                           DB      L((F8 & 0x0FFF)| TSTBITH)
    2513/     EEB : =>NOT BLANK                   IFB     'P'
    2513/     EEB :                                DB    "TO" |0x80 
    2513/     EEB : =>TRUE                        ELSE
    2513/     EEB : 54 4F                          DB    "TO" 
    2513/     EED : D0                             DB    'P' |0x80
    2513/     EEE : [2513]                        ENDIF
    2514/     EEE : (MACRO)                      DO       FNDPGE,TOP,RTN
    2514/     EEE : =>NOT BLANK                   IFNB    FNDPGE 
    2514/     EEE : 0B                           DB      H((FNDPGE-1) & 0x0FFF)
    2514/     EEF : 97                           DB      L((FNDPGE-1) & 0x0FFF)
    2514/     EF0 :                              SHIFT
    2514/     EF0 :  (MACRO-2)                    DO      TOP,RTN
    2514/     EF0 : =>NOT BLANK                   IFNB    TOP 
    2514/     EF0 : 09                           DB      H((TOP-1) & 0x0FFF)
    2514/     EF1 : 93                           DB      L((TOP-1) & 0x0FFF)
    2514/     EF2 :                              SHIFT
    2514/     EF2 :   (MACRO-3)                   DO      RTN
    2514/     EF2 : =>NOT BLANK                   IFNB    RTN 
    2514/     EF2 : 00                           DB      H((RTN-1) & 0x0FFF)
    2514/     EF3 : F5                           DB      L((RTN-1) & 0x0FFF)
    2514/     EF4 :                              SHIFT
    2514/     EF4 :    (MACRO-4)                  DO      
    2514/     EF4 : =>BLANK                       IFNB     
    2514/     EF4 :                              DB      H((-1) & 0x0FFF)
    2514/     EF4 :                              DB      L((-1) & 0x0FFF)
    2514/     EF4 :                              SHIFT
    2514/     EF4 :                              DO      
    2514/     EF4 : [2514]                        ENDIF
    2514/     EF4 : [2514]                        ENDIF
    2514/     EF4 : [2514]                        ENDIF
    2514/     EF4 : [2514]                        ENDIF
    2515/     EF4 : (MACRO)              F8:     TSTR     F9,"MO",'D'
    2515/     EF4 : 2F                           DB      H((F9 & 0x0FFF)| TSTBITH)
    2515/     EF5 : 01                           DB      L((F9 & 0x0FFF)| TSTBITH)
    2515/     EF6 : =>NOT BLANK                   IFB     'D'
    2515/     EF6 :                                DB    "MO" |0x80 
    2515/     EF6 : =>TRUE                        ELSE
    2515/     EF6 : 4D 4F                          DB    "MO" 
    2515/     EF8 : C4                             DB    'D' |0x80
    2515/     EF9 : [2515]                        ENDIF
    2516/     EF9 : (MACRO)                      CALL     DOUBLE
    2516/     EF9 : 8F                           DB      H(DOUBLE & 0x0FFF  | CALBITH)
    2516/     EFA : 20                           DB      L(DOUBLE & 0x0FFF  | CALBITH)
    2517/     EFB : (MACRO)                      DO       DIV,MODULO,RTN
    2517/     EFB : =>NOT BLANK                   IFNB    DIV 
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 78 - 08.05.2023 15:13:29


    2517/     EFB : 04                           DB      H((DIV-1) & 0x0FFF)
    2517/     EFC : 07                           DB      L((DIV-1) & 0x0FFF)
    2517/     EFD :                              SHIFT
    2517/     EFD :  (MACRO-2)                    DO      MODULO,RTN
    2517/     EFD : =>NOT BLANK                   IFNB    MODULO 
    2517/     EFD : 09                           DB      H((MODULO-1) & 0x0FFF)
    2517/     EFE : BF                           DB      L((MODULO-1) & 0x0FFF)
    2517/     EFF :                              SHIFT
    2517/     EFF :   (MACRO-3)                   DO      RTN
    2517/     EFF : =>NOT BLANK                   IFNB    RTN 
    2517/     EFF : 00                           DB      H((RTN-1) & 0x0FFF)
    2517/     F00 : F5                           DB      L((RTN-1) & 0x0FFF)
    2517/     F01 :                              SHIFT
    2517/     F01 :    (MACRO-4)                  DO      
    2517/     F01 : =>BLANK                       IFNB     
    2517/     F01 :                              DB      H((-1) & 0x0FFF)
    2517/     F01 :                              DB      L((-1) & 0x0FFF)
    2517/     F01 :                              SHIFT
    2517/     F01 :                              DO      
    2517/     F01 : [2517]                        ENDIF
    2517/     F01 : [2517]                        ENDIF
    2517/     F01 : [2517]                        ENDIF
    2517/     F01 : [2517]                        ENDIF
    2518/     F01 : (MACRO)              F9:     TSTR     F10,"RN",'D'
    2518/     F01 : 2F                           DB      H((F10 & 0x0FFF)| TSTBITH)
    2518/     F02 : 16                           DB      L((F10 & 0x0FFF)| TSTBITH)
    2518/     F03 : =>NOT BLANK                   IFB     'D'
    2518/     F03 :                                DB    "RN" |0x80 
    2518/     F03 : =>TRUE                        ELSE
    2518/     F03 : 52 4E                          DB    "RN" 
    2518/     F05 : C4                             DB    'D' |0x80
    2518/     F06 : [2518]                        ENDIF
    2519/     F06 : (MACRO)                      CALL     DOUBLE
    2519/     F06 : 8F                           DB      H(DOUBLE & 0x0FFF  | CALBITH)
    2519/     F07 : 20                           DB      L(DOUBLE & 0x0FFF  | CALBITH)
    2520/     F08 : (MACRO)                      DO       RANDOM,SUB,ADD,DIV,MODULO,ADD,RTN
    2520/     F08 : =>NOT BLANK                   IFNB    RANDOM 
    2520/     F08 : 09                           DB      H((RANDOM-1) & 0x0FFF)
    2520/     F09 : D1                           DB      L((RANDOM-1) & 0x0FFF)
    2520/     F0A :                              SHIFT
    2520/     F0A :  (MACRO-2)                    DO      SUB,ADD,DIV,MODULO,ADD,RTN
    2520/     F0A : =>NOT BLANK                   IFNB    SUB 
    2520/     F0A : 03                           DB      H((SUB-1) & 0x0FFF)
    2520/     F0B : 43                           DB      L((SUB-1) & 0x0FFF)
    2520/     F0C :                              SHIFT
    2520/     F0C :   (MACRO-3)                   DO      ADD,DIV,MODULO,ADD,RTN
    2520/     F0C : =>NOT BLANK                   IFNB    ADD 
    2520/     F0C : 03                           DB      H((ADD-1) & 0x0FFF)
    2520/     F0D : 2C                           DB      L((ADD-1) & 0x0FFF)
    2520/     F0E :                              SHIFT
    2520/     F0E :    (MACRO-4)                  DO      DIV,MODULO,ADD,RTN
    2520/     F0E : =>NOT BLANK                   IFNB    DIV 
    2520/     F0E : 04                           DB      H((DIV-1) & 0x0FFF)
    2520/     F0F : 07                           DB      L((DIV-1) & 0x0FFF)
    2520/     F10 :                              SHIFT
    2520/     F10 :     (MACRO-5)                 DO      MODULO,ADD,RTN
    2520/     F10 : =>NOT BLANK                   IFNB    MODULO 
    2520/     F10 : 09                           DB      H((MODULO-1) & 0x0FFF)
    2520/     F11 : BF                           DB      L((MODULO-1) & 0x0FFF)
    2520/     F12 :                              SHIFT
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 79 - 08.05.2023 15:13:29


    2520/     F12 :      (MACRO-6)                DO      ADD,RTN
    2520/     F12 : =>NOT BLANK                   IFNB    ADD 
    2520/     F12 : 03                           DB      H((ADD-1) & 0x0FFF)
    2520/     F13 : 2C                           DB      L((ADD-1) & 0x0FFF)
    2520/     F14 :                              SHIFT
    2520/     F14 :       (MACRO-7)               DO      RTN
    2520/     F14 : =>NOT BLANK                   IFNB    RTN 
    2520/     F14 : 00                           DB      H((RTN-1) & 0x0FFF)
    2520/     F15 : F5                           DB      L((RTN-1) & 0x0FFF)
    2520/     F16 :                              SHIFT
    2520/     F16 :        (MACRO-8)              DO      
    2520/     F16 : =>BLANK                       IFNB     
    2520/     F16 :                              DB      H((-1) & 0x0FFF)
    2520/     F16 :                              DB      L((-1) & 0x0FFF)
    2520/     F16 :                              SHIFT
    2520/     F16 :                              DO      
    2520/     F16 : [2520]                        ENDIF
    2520/     F16 : [2520]                        ENDIF
    2520/     F16 : [2520]                        ENDIF
    2520/     F16 : [2520]                        ENDIF
    2520/     F16 : [2520]                        ENDIF
    2520/     F16 : [2520]                        ENDIF
    2520/     F16 : [2520]                        ENDIF
    2520/     F16 : [2520]                        ENDIF
    2521/     F16 : (MACRO)              F10:    TSTR     SYNTAX,"PAG",'E'
    2521/     F16 : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2521/     F17 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2521/     F18 : =>NOT BLANK                   IFB     'E'
    2521/     F18 :                                DB    "PAG" |0x80 
    2521/     F18 : =>TRUE                        ELSE
    2521/     F18 : 50 41 47                       DB    "PAG" 
    2521/     F1B : C5                             DB    'E' |0x80
    2521/     F1C : [2521]                        ENDIF
    2522/     F1C : (MACRO)                      DO       PUTPGE,RTN
    2522/     F1C : =>NOT BLANK                   IFNB    PUTPGE 
    2522/     F1C : 0B                           DB      H((PUTPGE-1) & 0x0FFF)
    2522/     F1D : 7A                           DB      L((PUTPGE-1) & 0x0FFF)
    2522/     F1E :                              SHIFT
    2522/     F1E :  (MACRO-2)                    DO      RTN
    2522/     F1E : =>NOT BLANK                   IFNB    RTN 
    2522/     F1E : 00                           DB      H((RTN-1) & 0x0FFF)
    2522/     F1F : F5                           DB      L((RTN-1) & 0x0FFF)
    2522/     F20 :                              SHIFT
    2522/     F20 :   (MACRO-3)                   DO      
    2522/     F20 : =>BLANK                       IFNB     
    2522/     F20 :                              DB      H((-1) & 0x0FFF)
    2522/     F20 :                              DB      L((-1) & 0x0FFF)
    2522/     F20 :                              SHIFT
    2522/     F20 :                              DO      
    2522/     F20 : [2522]                        ENDIF
    2522/     F20 : [2522]                        ENDIF
    2522/     F20 : [2522]                        ENDIF
    2523/     F20 :                      
    2524/     F20 : (MACRO)              DOUBLE: TSTR     SYNTAX,'('
    2524/     F20 : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2524/     F21 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2524/     F22 : =>BLANK                       IFB     
    2524/     F22 : A8                             DB    '(' |0x80 
    2524/     F23 : =>FALSE                       ELSE
    2524/     F23 :                                DB    '(' 
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 80 - 08.05.2023 15:13:29


    2524/     F23 :                                DB     |0x80
    2524/     F23 : [2524]                        ENDIF
    2525/     F23 : (MACRO)                      CALL     RELEXP
    2525/     F23 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2525/     F24 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2526/     F25 : (MACRO)                      TSTR     SYNTAX,','
    2526/     F25 : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2526/     F26 : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2526/     F27 : =>BLANK                       IFB     
    2526/     F27 : AC                             DB    ',' |0x80 
    2526/     F28 : =>FALSE                       ELSE
    2526/     F28 :                                DB    ',' 
    2526/     F28 :                                DB     |0x80
    2526/     F28 : [2526]                        ENDIF
    2527/     F28 : (MACRO)                      CALL     RELEXP
    2527/     F28 : 8E                           DB      H(RELEXP & 0x0FFF  | CALBITH)
    2527/     F29 : 35                           DB      L(RELEXP & 0x0FFF  | CALBITH)
    2528/     F2A : (MACRO)                      TSTR     SYNTAX,')'
    2528/     F2A : 2E                           DB      H((SYNTAX & 0x0FFF)| TSTBITH)
    2528/     F2B : 2F                           DB      L((SYNTAX & 0x0FFF)| TSTBITH)
    2528/     F2C : =>BLANK                       IFB     
    2528/     F2C : A9                             DB    ')' |0x80 
    2528/     F2D : =>FALSE                       ELSE
    2528/     F2D :                                DB    ')' 
    2528/     F2D :                                DB     |0x80
    2528/     F2D : [2528]                        ENDIF
    2529/     F2D : (MACRO)                      DO       RTN
    2529/     F2D : =>NOT BLANK                   IFNB    RTN 
    2529/     F2D : 00                           DB      H((RTN-1) & 0x0FFF)
    2529/     F2E : F5                           DB      L((RTN-1) & 0x0FFF)
    2529/     F2F :                              SHIFT
    2529/     F2F :  (MACRO-2)                    DO      
    2529/     F2F : =>BLANK                       IFNB     
    2529/     F2F :                              DB      H((-1) & 0x0FFF)
    2529/     F2F :                              DB      L((-1) & 0x0FFF)
    2529/     F2F :                              SHIFT
    2529/     F2F :                              DO      
    2529/     F2F : [2529]                        ENDIF
    2529/     F2F : [2529]                        ENDIF
    2530/     F2F :                      
    2531/     F2F : (MACRO)              PRNUM:  DO       XCHGP1,PRN
    2531/     F2F : =>NOT BLANK                   IFNB    XCHGP1 
    2531/     F2F : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2531/     F30 : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2531/     F31 :                              SHIFT
    2531/     F31 :  (MACRO-2)                    DO      PRN
    2531/     F31 : =>NOT BLANK                   IFNB    PRN 
    2531/     F31 : 01                           DB      H((PRN-1) & 0x0FFF)
    2531/     F32 : 8E                           DB      L((PRN-1) & 0x0FFF)
    2531/     F33 :                              SHIFT
    2531/     F33 :   (MACRO-3)                   DO      
    2531/     F33 : =>BLANK                       IFNB     
    2531/     F33 :                              DB      H((-1) & 0x0FFF)
    2531/     F33 :                              DB      L((-1) & 0x0FFF)
    2531/     F33 :                              SHIFT
    2531/     F33 :                              DO      
    2531/     F33 : [2531]                        ENDIF
    2531/     F33 : [2531]                        ENDIF
    2531/     F33 : [2531]                        ENDIF
    2532/     F33 : (MACRO)              PRNUM1: DO       DIV,PRN1,XCHGP1,RTN
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 81 - 08.05.2023 15:13:29


    2532/     F33 : =>NOT BLANK                   IFNB    DIV 
    2532/     F33 : 04                           DB      H((DIV-1) & 0x0FFF)
    2532/     F34 : 07                           DB      L((DIV-1) & 0x0FFF)
    2532/     F35 :                              SHIFT
    2532/     F35 :  (MACRO-2)                    DO      PRN1,XCHGP1,RTN
    2532/     F35 : =>NOT BLANK                   IFNB    PRN1 
    2532/     F35 : 01                           DB      H((PRN1-1) & 0x0FFF)
    2532/     F36 : C5                           DB      L((PRN1-1) & 0x0FFF)
    2532/     F37 :                              SHIFT
    2532/     F37 :   (MACRO-3)                   DO      XCHGP1,RTN
    2532/     F37 : =>NOT BLANK                   IFNB    XCHGP1 
    2532/     F37 : 06                           DB      H((XCHGP1-1) & 0x0FFF)
    2532/     F38 : 30                           DB      L((XCHGP1-1) & 0x0FFF)
    2532/     F39 :                              SHIFT
    2532/     F39 :    (MACRO-4)                  DO      RTN
    2532/     F39 : =>NOT BLANK                   IFNB    RTN 
    2532/     F39 : 00                           DB      H((RTN-1) & 0x0FFF)
    2532/     F3A : F5                           DB      L((RTN-1) & 0x0FFF)
    2532/     F3B :                              SHIFT
    2532/     F3B :     (MACRO-5)                 DO      
    2532/     F3B : =>BLANK                       IFNB     
    2532/     F3B :                              DB      H((-1) & 0x0FFF)
    2532/     F3B :                              DB      L((-1) & 0x0FFF)
    2532/     F3B :                              SHIFT
    2532/     F3B :                              DO      
    2532/     F3B : [2532]                        ENDIF
    2532/     F3B : [2532]                        ENDIF
    2532/     F3B : [2532]                        ENDIF
    2532/     F3B : [2532]                        ENDIF
    2532/     F3B : [2532]                        ENDIF
    2533/     F3B :                     
    2534/     F3B :                      
    2535/     F3B :                     ;*************************************
    2536/     F3B :                     ;*           ERROR MESSAGES          *
    2537/     F3B :                     ;*************************************
    2538/     F3B :                      
    2539/     F3B :                     MESSAGE  MACRO A,B
    2540/     F3B :                               DB  A
    2541/     F3B :                               DB  B |0x80
    2542/     F3B :                              ENDM
    2543/     F3B :                      
    2544/     F3B : (MACRO)              MESGS:  MESSAGE " ERRO",'R'   ;  1
    2544/     F3B : 20 45 52 52 4F                DB  " ERRO"
    2544/     F40 : D2                            DB  'R' |0x80
    2545/     F41 : (MACRO)                      MESSAGE "ARE",'A'     ;  2
    2545/     F41 : 41 52 45                      DB  "ARE"
    2545/     F44 : C1                            DB  'A' |0x80
    2546/     F45 : (MACRO)                      MESSAGE "STM",'T'     ;  3
    2546/     F45 : 53 54 4D                      DB  "STM"
    2546/     F48 : D4                            DB  'T' |0x80
    2547/     F49 : (MACRO)                      MESSAGE "CHA",'R'     ;  4
    2547/     F49 : 43 48 41                      DB  "CHA"
    2547/     F4C : D2                            DB  'R' |0x80
    2548/     F4D : (MACRO)                      MESSAGE "SNT",'X'     ;  5
    2548/     F4D : 53 4E 54                      DB  "SNT"
    2548/     F50 : D8                            DB  'X' |0x80
    2549/     F51 : (MACRO)                      MESSAGE "VAL",'U'     ;  6
    2549/     F51 : 56 41 4C                      DB  "VAL"
    2549/     F54 : D5                            DB  'U' |0x80
    2550/     F55 : (MACRO)                      MESSAGE "END",'"'     ;  7
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 82 - 08.05.2023 15:13:29


    2550/     F55 : 45 4E 44                      DB  "END"
    2550/     F58 : A2                            DB  '"' |0x80
    2551/     F59 : (MACRO)                      MESSAGE "NOG",'O'     ;  8
    2551/     F59 : 4E 4F 47                      DB  "NOG"
    2551/     F5C : CF                            DB  'O' |0x80
    2552/     F5D : (MACRO)                      MESSAGE "RTR",'N'     ;  9
    2552/     F5D : 52 54 52                      DB  "RTR"
    2552/     F60 : CE                            DB  'N' |0x80
    2553/     F61 : (MACRO)                      MESSAGE "NES",'T'     ;  10
    2553/     F61 : 4E 45 53                      DB  "NES"
    2553/     F64 : D4                            DB  'T' |0x80
    2554/     F65 : (MACRO)                      MESSAGE "NEX",'T'     ;  11
    2554/     F65 : 4E 45 58                      DB  "NEX"
    2554/     F68 : D4                            DB  'T' |0x80
    2555/     F69 : (MACRO)                      MESSAGE "FO" ,'R'     ;  12
    2555/     F69 : 46 4F                         DB  "FO"
    2555/     F6B : D2                            DB  'R' |0x80
    2556/     F6C : (MACRO)                      MESSAGE "DIV",'0'     ;  13
    2556/     F6C : 44 49 56                      DB  "DIV"
    2556/     F6F : B0                            DB  '0' |0x80
    2557/     F70 : (MACRO)                      MESSAGE "BR" ,'K'     ;  14
    2557/     F70 : 42 52                         DB  "BR"
    2557/     F72 : CB                            DB  'K' |0x80
    2558/     F73 : (MACRO)                      MESSAGE "UNT",'L'     ;  15
    2558/     F73 : 55 4E 54                      DB  "UNT"
    2558/     F76 : CC                            DB  'L' |0x80
    2559/     F77 :                             ;
    2560/     F77 :                      
    2561/     F77 :                     ;*************************************
    2562/     F77 :                     ;*     GET CHARACTER AND ECHO IT     *
    2563/     F77 :                     ;*************************************
    2564/     F77 :                      
    2565/     F77 : C4 08               GECO:   LDI     8               ;SET COUNT = 8
    2566/     F79 : CA EB                       ST      NUM(P2)
    2567/     F7B : 06                          CSA                     ;SET READER RELAY
    2568/     F7C : DC 02                       ORI     2
    2569/     F7E : 07                          CAS
    2570/     F7F : 06                  GETCO1: CSA                     ;WAIT FOR START BIT
    2571/     F80 : D4 20                       ANI     0x20
    2572/     F82 : 9C FB                       JNZ     GETCO1          ;NOT FOUND
    2573/     F84 : C4 57                       LDI     87              ;DELAY 1/2 BIT TIME
    2574/     F86 : 8F 04                       DLY     4
    2575/     F88 : 06                          CSA                     ;IS START BIT STILL THERE?
    2576/     F89 : D4 20                       ANI     0x20
    2577/     F8B : 9C F2                       JNZ     GETCO1          ;NO
    2578/     F8D : 06                          CSA                     ;SEND START BIT
    2579/     F8E : D4 FD                       ANI     0xFD            ;RESET READER RELAY
    2580/     F90 : DC 01                       ORI     1
    2581/     F92 : 07                          CAS
    2582/     F93 : C4 85               GETCO2: LDI     133             ;DELAY 1 BIT TIME
    2583/     F95 : 8F 08                       DLY     8
    2584/     F97 : 06                          CSA                     ;GET BIT (SENSED)
    2585/     F98 : D4 20                       ANI     0x20
    2586/     F9A : 98 04                       JZ      GETCO3
    2587/     F9C : C4 01                       LDI     1
    2588/     F9E : 90 04                       JMP     GETCO4
    2589/     FA0 : C4 00               GETCO3: LDI     0
    2590/     FA2 : 9C 00                       JNZ     GETCO4
    2591/     FA4 : CA EA               GETCO4: ST      TEMP(P2)        ;SAVE BIT VALUE (0 OR 1)
    2592/     FA6 : 1F                          RRL                     ;ROTATE INTO LINK
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 83 - 08.05.2023 15:13:29


    2593/     FA7 : 01                          XAE
    2594/     FA8 : 1D                          SRL                     ; SHIFT INTO CHARACTER
    2595/     FA9 : 01                          XAE                     ; RETURN CHAR TO E
    2596/     FAA : 06                          CSA                     ;ECHO BIT TO OUTPUT
    2597/     FAB : DC 01                       ORI     1
    2598/     FAD : E2 EA                       XOR     TEMP(P2)
    2599/     FAF : 07                          CAS
    2600/     FB0 : BA EB                       DLD     NUM(P2)         ;DECREMENT BIT COUNT
    2601/     FB2 : 9C DF                       JNZ     GETCO2          ;LOOP UNTIL 0
    2602/     FB4 : 06                          CSA                     ;SET STOP BIT
    2603/     FB5 : D4 FE                       ANI     0xFE
    2604/     FB7 : 07                          CAS
    2605/     FB8 : 8F 08                       DLY     8               ; DELAY APPROX. 1 BIT TIME
    2606/     FBA : 40                          LDE                     ; AC HAS INPUT CHARACTER
    2607/     FBB : D4 7F                       ANI     0x7F
    2608/     FBD : 01                          XAE
    2609/     FBE : 40                          LDE
    2610/     FBF : 3F                          XPPC    P3              ;RETURN
    2611/     FC0 : 90 B5                       JMP     GECO
    2612/     FC2 :                             
    2613/     FC2 :                     ;*************************************
    2614/     FC2 :                     ;*     PRINT CHARACTER  AT  TTY      *
    2615/     FC2 :                     ;*************************************
    2616/     FC2 :                      
    2617/     FC2 : 01                  PUTC:   XAE
    2618/     FC3 : C4 FF                       LDI     255              ; DELAY ALMOST
    2619/     FC5 : 8F 17                       DLY     23               ; 3  BIT  TIMES
    2620/     FC7 : 06                          CSA                      ;SET OUTPUT  BIT  TO  LOGIC  0
    2621/     FC8 : DC 01                       ORI     1                ; FOR START  BIT
    2622/     FCA : 07                          CAS
    2623/     FCB : C4 09                       LDI     9                ; INITIALIZE BIT COUNT
    2624/     FCD : CA E8                       ST      TEMP3(P2)
    2625/     FCF : C4 8A               PUTC1:  LDI     138              ; DELAY 1 BIT TIME
    2626/     FD1 : 8F 08                       DLY     8    
    2627/     FD3 : BA E8                       DLD     TEMP3(P2)        ; DECREMENT BIT COUNT
    2628/     FD5 : 98 10                       JZ      PUTC2
    2629/     FD7 : 40                          LDE                      ; PREPARE NEXT BIT
    2630/     FD8 : D4 01                       ANI     1
    2631/     FDA : CA E9                       ST      TEMP2(P2)
    2632/     FDC : 01                          XAE
    2633/     FDD : 1C                          SR
    2634/     FDE : 01                          XAE
    2635/     FDF : 06                          CSA                      ; SET UP OUTPUT BIT
    2636/     FE0 : DC 01                       ORI    1
    2637/     FE2 : E2 E9                       XOR    TEMP2(P2)
    2638/     FE4 : 07                          CAS                      ; PUT BIT INTO TTY
    2639/     FE5 : 90 E8                       JMP    PUTC1
    2640/     FE7 : 06                  PUTC2:  CSA                      ; SET STOP BIT
    2641/     FE8 : D4 FE                       ANI    0xFE
    2642/     FEA : 07                          CAS
    2643/     FEB : 3F                          XPPC   P3  
    2644/     FEC : 90 D4                       JMP    PUTC
    2645/     FEE :                     
    2646/     FEE :                          END   0
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 84 - 08.05.2023 15:13:29


  Symboltabelle (* = unbenutzt):
  ----------------------------

 ADD :                          32D C |  ADOWN :                        889 C |
 AESTK :                       1050 - |  AMOVE :                        873 C |
 ANDOP :                        5E8 C |  AON1 :                         5F2 C |
 AON_0R :                       60E C |  AON_NT :                       620 C |
*ARCHITECTURE :                                      "x86_64-unknown-linux" - |
 AT :                           C9A C |  BEGIN :                        C58 C |
*BIGENDIAN :                      0 - |  BREAK :                        280 C |
 CALBIT :                        80 - |  CALBITH :                     8000 - |
 CALLML :                       967 C | *CASESENSITIVE :                  0 - |
 CHEAT :                         7C C |  CHEAT1 :                        C0 C |
 CHPAGE :                       BBE C |  CHRNUM :          FFFFFFFFFFFFFFE7 - |
 CK1 :                          641 C |  CKMODE :                       63C C |
 CLEAR :                         51 C |  CLEAR1 :                        56 C |
 CLR :                          C60 C |  CMP :                          55A C |
 CMP1 :                         5BA C |  CMP2 :                         5C2 C |
 CMPR :                         5D1 C |  COMMA :                        DC1 C |
*COMPMODE :                       0 - | *CONSTPI :        3.141592653589793 - |
*DATE :                "08.05.2023" - |  DETPGE :                       BC5 C |
 DFAULT :                       C78 C |  DIV :                          408 C |
 DOLLAR :                       D7E C |  DOLR1 :                        D8F C |
 DOLR2 :                        D9A C |  DONE :                         130 C |
 DONE1 :                        13E C |  DONE2 :                        13F C |
 DOPTR :           FFFFFFFFFFFFFFFF - |  DOSTAK :                      107A - |
 DOSTMT :                       CD1 C |  DOUBLE :                       F20 C |
 E10 :                          7CA C |  E12 :                          871 C |
 E12A :                         8E5 C |  E13 :                          914 C |
 E14 :                          954 C |  E15 :                          980 C |
 E16 :                          9D0 C |  E16A :                         A32 C |
 E17 :                          A4E C |  E18 :                          AAB C |
 E19 :                          B08 C |  E2 :                           1C4 C |
 E3A :                          282 C |  E4 :                           2D7 C |
 E5 :                           304 C |  E6 :                           370 C |
 E6A :                          3CA C |  E8 :                           643 C |
 E8B :                          6AA C |  E9 :                           753 C |
 EL :                           18D C |  ELL :                          822 C |
 END :                          E09 C |  EO :                           14B C |
 EOA :                          108 C |  EQ :                           544 C |
 EREG :            FFFFFFFFFFFFFF80 - |  ERR :                          21B C |
 ERR1 :                         21D C |  ERR2 :                         21F C |
 ERRNUM :                       E31 C |  ESA :                          6DD C |
 EVAL :                         7EA C |  EX1 :                          E6A C |
 EX2 :                          E6D C |  EX3 :                          E6F C |
 EX4 :                          E78 C |  EX5 :                          E81 C |
 EXECIL :                        76 C |  EXPR :                         E61 C |
 F1 :                           EB4 C |  F10 :                          F16 C |
 F2 :                           EBA C |  F3 :                           EC1 C |
 F4 :                           ECB C |  F5 :                           ED4 C |
 F6 :                           EDF C |  F7 :                           EE9 C |
 F8 :                           EF4 C |  F9 :                           F01 C |
 FACTOR :                       EAC C |  FAIL :                         5D9 C |
 FAILHI :          FFFFFFFFFFFFFFEC - |  FAILLO :          FFFFFFFFFFFFFFED - |
*FALSE :                          0 - |  FALSE1 :                       5C0 C |
 FIN :                          2AA C |  FLBL1 :                        BE8 C |
 FLBL2 :                        C00 C |  FLBL3 :                        C15 C |
 FNDLBL :                       BE2 C |  FNDPGE :                       B98 C |
 FOR :                          D2A C |  FOR2 :                         D4C C |
 FORI :                         D4A C |  FORPTR :          FFFFFFFFFFFFFFFE - |
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 85 - 08.05.2023 15:13:29


 FORSTK :                      108A - |  FPGE1 :                        BA7 C |
 GECO :                         F77 C |  GENTR :                        7BA C |
 GEQ :                          558 C |  GEQ1 :                         5B6 C |
 GETCO1 :                       F7F C |  GETCO2 :                       F93 C |
 GETCO3 :                       FA0 C |  GETCO4 :                       FA4 C |
 GETL :                         757 C |  GETL0 :                        773 C |
 GETL1 :                        776 C |  GETLCR :                       7DC C |
 GETRUB :                       7D2 C |  GOSUB :                        CEB C |
 GOTO :                         CDD C |  GTR :                          554 C |
 GTR1 :                         5AB C |  GTROP :                        E5F C |
 GXH :                          7CC C |  GXU :                          7AA C |
*HAS64 :                          1 - |  HEND :                         6A4 C |
 HENTER :                       683 C |  HEX :                          64C C |
 HI :              FFFFFFFFFFFFFFEE - |  HILINE :          FFFFFFFFFFFFFFF7 - |
 HLETR :                        674 C |  HSHIFT :                       68A C |
 HSKIP :                        65C C |  HX0K :                         680 C |
 IF :                           CAA C |  IF1 :                          CB6 C |
 IGNORE :                       9B9 C |  ILC1 :                          A8 C |
 ILCALL :                        9E C |  IN1 :                          DE2 C |
 IN2 :                          DF6 C |  IN3 :                          E05 C |
 IND :                          52C C |  INPST2 :                       B2C C |
 INPUT :                        DD1 C |  INSAD0 :                       8E7 C |
 INSAD1 :                       903 C |  INSRT :                        824 C |
 INSRT1 :                       83C C |  INSRT2 :                       846 C |
 INSRT3 :                       84E C |  INSRT4 :                       85B C |
 INSRT5 :                       862 C |  INSUP0 :                       899 C |
 INSUP1 :                       8A5 C |  INSUP2 :                       8C6 C |
 INSUP3 :                       8C8 C |  INSUP4 :                       8D8 C |
 ISTRNG :                       B26 C |  JMPBIT :                        40 - |
 JMPBITH :                     4000 - |  L000 :                          2A C |
 L001 :                          43 C |  LABLHI :          FFFFFFFFFFFFFFF2 - |
 LABLLO :          FFFFFFFFFFFFFFF3 - |  LBUF :                        10D6 - |
 LEQ :                          550 C |  LEQ1 :                         5A2 C |
 LET :                          C8B C |  LIST :                         C35 C |
 LIST1 :                        C47 C |  LIST2 :                        C49 C |
 LIST3 :                        C4B C |  LISTNG :          FFFFFFFFFFFFFFF5 - |
*LISTON :                         1 - |  LIT1 :                         A34 C |
 LNEQ :                          E9 C |  LO :              FFFFFFFFFFFFFFEF - |
 LOLINE :          FFFFFFFFFFFFFFF8 - |  LOOP1 :                         2C C |
 LOOP10 :                       AD5 C |  LOOP11 :                       B3C C |
 LOOP12 :                       B6C C |  LOOP13 :                       BAE C |
 LOOP2 :                         D6 C |  LOOP3 :                        1FB C |
 LOOP4 :                        239 C |  LOOP5 :                        3AE C |
 LOOP6 :                        458 C |  LOOP7 :                        664 C |
 LOOP8 :                        6EF C |  LOOP9 :                        9DD C |
 LPNOS :                        1BE C |  LSS :                          54C C |
 LSS1 :                         59A C |  LST :                          2D9 C |
 LST2 :                         2F7 C |  LST3 :                         306 C |
 LST4 :                         30C C |  LST5 :                         31C C |
 LSTK :            FFFFFFFFFFFFFFFD - | *MACEXP :                         7 - |
 MESGS :                        F3B C |  ML :                           E12 C |
 MM1 :                          38F C |  MM2 :                          3A0 C |
 MM3 :                          3CC C |  MM4 :                          3E9 C |
 MMEXIT :                       3FA C |  MODULO :                       9C0 C |
*MOMCPU :                         0 - | *MOMCPUNAME :               "SC/MP" - |
 MOVE :                         808 C |  MOVESR :                       94D C |
 MOVSTR :                       B56 C |  MUL :                          372 C |
 NEG :                          35B C |  NEQ :                          548 C |
 NEQ1 :                         591 C | *NESTMAX :                      100 - |
 NEW :                          C6D C |  NEW1 :                         C7A C |
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 86 - 08.05.2023 15:13:29


 NEWPGM :                       BD1 C |  NEXT :                         D10 C |
 NEXTV :                        A89 C |  NEXTV1 :                       AEE C |
 NLINE :                        20D C | *NOJUMP :                        9B C |
 NOTOP :                        5F0 C |  NUM :             FFFFFFFFFFFFFFEB - |
 NUPAGE :                       B8D C |  NUPGE0 :                       B95 C |
 NXT :                          284 C |  NXT1 :                         2A1 C |
 NXTV10 :                       AAD C |  NXTV2 :                        AE1 C |
 NXTV3 :                        AE3 C |  OROP :                         5EC C |
*P1 :                             1 - |  P1HIGH :          FFFFFFFFFFFFFFF0 - |
 P1L0W :           FFFFFFFFFFFFFFF1 - | *P2 :                             2 - |
*P3 :                             3 - |  PAGE :            FFFFFFFFFFFFFFF6 - |
 PCHIGH :          FFFFFFFFFFFFFFFA - |  PCLOW :           FFFFFFFFFFFFFFFB - |
 PCSTAK :                      10A6 - |  PCSTK :           FFFFFFFFFFFFFFF9 - |
 PGE :                          D67 C |  PGM :                         1120 - |
 POPAE :                        916 C |  PR1 :                          DA7 C |
 PR2 :                          DAE C |  PR3 :                          DBD C |
 PR4 :                          DC6 C |  PR5 :                          DCB C |
 PR6 :                          DCD C |  PRINT :                        D9E C |
 PRMPT1 :                       C25 C |  PRN :                          18F C |
 PRN1 :                         1C6 C |  PRNUM :                        F2F C |
 PRNUM1 :                       F33 C |  PROMPT :                       C1E C |
 PRS :                          176 C |  PRS1 :                         18B C |
 PRSTR1 :                       B16 C |  PSTRNG :                       B0A C |
 PTSTR1 :                       B4A C |  PUTC :                         FC2 C |
 PUTC1 :                        FCF C |  PUTC2 :                        FE7 C |
 PUTPGE :                       B7B C |  PUTSTR :                       B36 C |
 QD0 :                          418 C |  QD1 :                          43B C |
 QD2 :                          44C C |  QD3 :                          4A4 C |
 QDEND :                        4BB C |  QDENT1 :                       49E C |
 QDPOS :                        433 C |  QNXTV1 :                       A93 C |
 QPRNT :                        1E7 C |  QPRNT2 :                       1F7 C |
 QQ1 :                          235 C |  QQ2 :                          252 C |
 QQ3 :                          259 C |  QQMSG :                        23F C |
 RANDOM :                       9D2 C |  REL1 :                         E3E C |
 REL2 :                         E48 C |  REL3 :                         E4F C |
 REL4 :                         E53 C |  REL5 :                         E5D C |
*RELAXED :                        0 - |  RELEXP :                       E35 C |
 REM :                          E26 C |  RETEXP :                       E8B C |
 RETURN :                       D00 C |  RND1 :                         A01 C |
 RNDF :            FFFFFFFFFFFFFFE6 - |  RNDX :            FFFFFFFFFFFFFFE5 - |
 RNDY :            FFFFFFFFFFFFFFE4 - |  RSTR :                         143 C |
 RSTR1 :                        14D C |  RSTR2 :                        15F C |
 RTN :                           F6 C |  RUN :                          C51 C |
 RUNMOD :          FFFFFFFFFFFFFFF4 - |  SAV :                          10A C |
 SAV1 :                         126 C |  SAV2 :                         12C C |
 SAVEDO :                       978 C |  SAVFOR :                       A46 C |
 SBRPTR :          FFFFFFFFFFFFFFFC - |  SBRSTK :                      106A - |
 SCAN :                          C4 C |  SETZ :                         585 C |
 SFOR1 :                        A50 C |  SREDO :                        940 C |
 START :                        C1C C |  STAT :                         D54 C |
 STATUS :                       956 C |  STMT :                         C86 C |
 STORE :                        4C1 C |  STREND :                       B50 C |
 STRT :                         2C0 C |  SUB :                          344 C |
 SVDO1 :                        982 C |  SYNTAX :                       E2F C |
 T1 :                           E8F C |  T2 :                           E98 C |
 T3 :                           EA1 C |  TBL001 :                       CF6 C |
 TEMP :            FFFFFFFFFFFFFFEA - |  TEMP2 :           FFFFFFFFFFFFFFE9 - |
 TEMP3 :           FFFFFFFFFFFFFFE8 - |  TERM :                         E8D C |
*TIME :                  "15:13:29" - |  TNABRT :                       6BE C |
 TNERR :                        751 C |  TNL1 :                         6DF C |
 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 87 - 08.05.2023 15:13:29


 TNL2 :                         6FF C |  TNRET :                        6CE C |
 TNSHFT :                       70C C |  TOP :                          994 C |
 TOP0 :                         99A C |  TOP1 :                         9A0 C |
 TOP2 :                         9A7 C | *TRUE :                           1 - |
 TST :                           C2 C |  TSTBIT :                        20 - |
 TSTBITH :                     2000 - |  TSTNUM :                       6AC C |
 TSTVAR :                       4E1 C |  TVMAYBE :                      505 C |
 TV_FAIL :                      4F3 C |  TV_OK :                        512 C |
 UNT :                          CBC C |  UNTIL :                        928 C |
 UNTL1 :                        934 C |  VARS :                        101C - |
*VERSION :                     142F - |  X10 :                          4DA C |
 X12 :                          58F C |  X12A :                         5E6 C |
 X12B :                         62F C |  X12C :                         672 C |
 X13 :                          6DB C |  X14 :                          755 C |
 X15 :                          7B8 C |  X16 :                          7E8 C |
 X17 :                          820 C |  X19 :                          86F C |
 X19A :                         8E9 C |  X20 :                          90D C |
 X21 :                          952 C |  X22 :                          992 C |
 X23 :                          9CE C |  X24 :                          A30 C |
 X25 :                          A87 C |  X26 :                          AEC C |
 X27 :                          B34 C |  X4 :                           1C2 C |
 X5 :                           219 C |  X5A :                          27E C |
 X6 :                           2D5 C |  X6A :                          302 C |
 X7 :                           342 C |  X8 :                           36E C |
 X9 :                           3E7 C |  X9A :                          431 C |
 X9B :                          49C C |  XCHGP1 :                       631 C |
 XFER :                         169 C |  XFER1 :                        171 C |
 XI :                           15D C |  XI1 :                          542 C |
 XO :                            E7 C |  X_REDO :                       AFA C |

    411 Symbole
     21 unbenutzte Symbole

 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 88 - 08.05.2023 15:13:29


  definierte Makros:
  ------------------

CALL                                  | DO                                   
JS                                    | JUMP                                 
LDPI                                  | MESSAGE                              
TSTCR                                 | TSTN                                 
TSTR                                  | TSTV                                 

     10 Makros

 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 89 - 08.05.2023 15:13:29


  definierte Funktionen:
  ----------------------

H                                     | L                                    

 AS V1.42 Beta [Bld 238] - Quelle nibl_19761217.asm - Seite 90 - 08.05.2023 15:13:29


  Zeichentabellen:
  ----------------

STANDARD (0 veränderte Zeichen)

1 Zeichentabelle

0.03 Sekunden Assemblierzeit

   2648 Zeilen Quelltext
   4976 Zeilen inkl. Makroexpansionen
      2 Durchläufe
      0 Fehler
      0 Warnungen
